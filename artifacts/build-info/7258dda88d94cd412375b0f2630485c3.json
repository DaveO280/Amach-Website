{
  "id": "7258dda88d94cd412375b0f2630485c3",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.20",
  "solcLongVersion": "0.8.20+commit.a1b79de6",
  "input": {
    "language": "Solidity",
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n * consider using {ReentrancyGuardTransient} instead.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
      },
      "contracts/ProfileVerification.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n/**\r\n * @title ProfileVerification\r\n * @dev Smart contract for profile verification with email whitelist and one-wallet-per-user enforcement\r\n * @notice Implements restrictive wallet creation with email verification and allocation tracking for mainnet migration\r\n */\r\ncontract ProfileVerification is Ownable, ReentrancyGuard {\r\n    using ECDSA for bytes32;\r\n\r\n    // Events\r\n    event EmailWhitelisted(string indexed email, address indexed admin, uint256 timestamp);\r\n    event EmailRemovedFromWhitelist(string indexed email, address indexed admin, uint256 timestamp);\r\n    event UserVerified(string indexed email, address indexed wallet, uint256 indexed userId, uint256 timestamp);\r\n    event AllocationRecorded(address indexed user, uint256 amount, uint256 allocationId, uint256 timestamp);\r\n    event TokensClaimed(address indexed user, uint256 amount, uint256 timestamp);\r\n    event WalletLinked(string indexed email, address indexed wallet, uint256 timestamp);\r\n    event WalletUnlinked(string indexed email, address indexed wallet, uint256 timestamp);\r\n\r\n    // Structs\r\n    struct UserVerification {\r\n        string email;\r\n        address wallet;\r\n        uint256 userId;\r\n        uint256 timestamp;\r\n        bool isActive;\r\n        bool hasReceivedTokens;\r\n        uint256 tokenAllocation;\r\n    }\r\n\r\n    struct AllocationConfig {\r\n        uint256 totalAllocated;\r\n        uint256 maxAllocations;\r\n        uint256 allocationPerUser;\r\n        bool isActive;\r\n    }\r\n\r\n    // State variables\r\n    mapping(bytes32 => bool) public emailHashWhitelist; // Hash-based whitelist for privacy\r\n    mapping(address => string) public walletToEmail;\r\n    mapping(string => address) public emailToWallet;\r\n    mapping(address => UserVerification) public userVerifications;\r\n    mapping(uint256 => UserVerification) public userIdToVerification;\r\n    \r\n    AllocationConfig public allocationConfig;\r\n    address public mainnetMigrationContract;\r\n    IERC20 public healthToken;\r\n    \r\n    uint256 public totalVerifiedUsers;\r\n    uint256 public nextUserId;\r\n    bool public verificationEnabled = true;\r\n    \r\n    // Modifiers\r\n    modifier onlyWhitelistedEmail(string memory email) {\r\n        bytes32 emailHash = _hashEmail(email);\r\n        require(emailHashWhitelist[emailHash], \"Email not whitelisted\");\r\n        _;\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal function to hash email consistently\r\n     * @param email Email address to hash\r\n     * @return Hash of the lowercased email\r\n     */\r\n    function _hashEmail(string memory email) internal pure returns (bytes32) {\r\n        return keccak256(abi.encodePacked(_toLower(email)));\r\n    }\r\n    \r\n    /**\r\n     * @dev Internal function to convert string to lowercase\r\n     * @param str String to convert\r\n     * @return Lowercase version of the string\r\n     */\r\n    function _toLower(string memory str) internal pure returns (string memory) {\r\n        bytes memory bStr = bytes(str);\r\n        bytes memory bLower = new bytes(bStr.length);\r\n        for (uint i = 0; i < bStr.length; i++) {\r\n            // Uppercase character check\r\n            if ((uint8(bStr[i]) >= 65) && (uint8(bStr[i]) <= 90)) {\r\n                bLower[i] = bytes1(uint8(bStr[i]) + 32);\r\n            } else {\r\n                bLower[i] = bStr[i];\r\n            }\r\n        }\r\n        return string(bLower);\r\n    }\r\n    \r\n    modifier onlyUnusedEmail(string memory email) {\r\n        require(emailToWallet[email] == address(0), \"Email already in use\");\r\n        _;\r\n    }\r\n    \r\n    modifier onlyUnusedWallet(address wallet) {\r\n        require(bytes(walletToEmail[wallet]).length == 0, \"Wallet already in use\");\r\n        _;\r\n    }\r\n    \r\n    modifier verificationActive() {\r\n        require(verificationEnabled, \"Verification is disabled\");\r\n        _;\r\n    }\r\n\r\n    constructor() Ownable(msg.sender) {\r\n        // Initialize allocation configuration for first 5,000 users\r\n        allocationConfig = AllocationConfig({\r\n            totalAllocated: 0,\r\n            maxAllocations: 5000,\r\n            allocationPerUser: 1000 * 10**18, // 1000 AHP tokens per user\r\n            isActive: true\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @dev Add email to whitelist (only owner)\r\n     * @param email Email address to whitelist (hash will be stored)\r\n     */\r\n    function addEmailToWhitelist(string memory email) external onlyOwner {\r\n        bytes32 emailHash = _hashEmail(email);\r\n        require(!emailHashWhitelist[emailHash], \"Email already whitelisted\");\r\n        emailHashWhitelist[emailHash] = true;\r\n        emit EmailWhitelisted(email, msg.sender, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Add multiple emails to whitelist (only owner)\r\n     * @param emails Array of email addresses to whitelist (hashes will be stored)\r\n     */\r\n    function addEmailsToWhitelist(string[] memory emails) external onlyOwner {\r\n        for (uint256 i = 0; i < emails.length; i++) {\r\n            bytes32 emailHash = _hashEmail(emails[i]);\r\n            if (!emailHashWhitelist[emailHash]) {\r\n                emailHashWhitelist[emailHash] = true;\r\n                emit EmailWhitelisted(emails[i], msg.sender, block.timestamp);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Remove email from whitelist (only owner)\r\n     * @param email Email address to remove from whitelist\r\n     */\r\n    function removeEmailFromWhitelist(string memory email) external onlyOwner {\r\n        bytes32 emailHash = _hashEmail(email);\r\n        require(emailHashWhitelist[emailHash], \"Email not in whitelist\");\r\n        emailHashWhitelist[emailHash] = false;\r\n        emit EmailRemovedFromWhitelist(email, msg.sender, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Verify user profile with email and wallet (with signature verification)\r\n     * @param email Whitelisted email address\r\n     * @param signature Signature proving ownership of wallet\r\n     */\r\n    function verifyProfile(\r\n        string memory email,\r\n        bytes memory signature\r\n    ) external \r\n        nonReentrant \r\n        verificationActive \r\n        onlyWhitelistedEmail(email)\r\n        onlyUnusedEmail(email)\r\n        onlyUnusedWallet(msg.sender) \r\n    {\r\n        // Verify signature\r\n        bytes32 messageHash = keccak256(abi.encodePacked(email, msg.sender));\r\n        bytes32 ethSignedMessageHash = keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", messageHash));\r\n        address signer = ECDSA.recover(ethSignedMessageHash, signature);\r\n        \r\n        require(signer == msg.sender, \"Invalid signature\");\r\n        \r\n        _processVerification(email, msg.sender);\r\n    }\r\n\r\n    /**\r\n     * @dev Verify user profile for ZKsync SSO (without signature verification)\r\n     * @param email Email address (whitelist check handled by admin database)\r\n     */\r\n    function verifyProfileZKsync(\r\n        string memory email\r\n    ) external \r\n        nonReentrant \r\n        verificationActive \r\n        onlyUnusedEmail(email)\r\n        onlyUnusedWallet(msg.sender) \r\n    {\r\n        // For ZKsync SSO, we trust that msg.sender is the actual wallet owner\r\n        // Whitelist check is handled by the admin database, not blockchain\r\n        _processVerification(email, msg.sender);\r\n    }\r\n\r\n\r\n    /**\r\n     * @dev Internal function to process verification (shared logic)\r\n     * @param email Email address\r\n     * @param wallet Wallet address\r\n     */\r\n    function _processVerification(string memory email, address wallet) internal {\r\n        \r\n        // Create user verification\r\n        uint256 userId = nextUserId++;\r\n        UserVerification memory verification = UserVerification({\r\n            email: email,\r\n            wallet: wallet,\r\n            userId: userId,\r\n            timestamp: block.timestamp,\r\n            isActive: true,\r\n            hasReceivedTokens: false,\r\n            tokenAllocation: 0\r\n        });\r\n        \r\n        // Store mappings\r\n        userVerifications[wallet] = verification;\r\n        userIdToVerification[userId] = verification;\r\n        walletToEmail[wallet] = email;\r\n        emailToWallet[email] = wallet;\r\n        \r\n        // Record allocation if available (but don't mark as received yet)\r\n        if (allocationConfig.isActive && \r\n            allocationConfig.totalAllocated < allocationConfig.maxAllocations) {\r\n            \r\n            uint256 allocationAmount = allocationConfig.allocationPerUser;\r\n            verification.tokenAllocation = allocationAmount;\r\n            verification.hasReceivedTokens = false; // User needs to claim manually\r\n            \r\n            // Update allocation tracking\r\n            allocationConfig.totalAllocated++;\r\n            userVerifications[wallet] = verification;\r\n            userIdToVerification[userId] = verification;\r\n            \r\n            emit AllocationRecorded(wallet, allocationAmount, userId, block.timestamp);\r\n        }\r\n        \r\n        totalVerifiedUsers++;\r\n        \r\n        emit UserVerified(email, wallet, userId, block.timestamp);\r\n        emit WalletLinked(email, wallet, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Check if user is verified\r\n     * @param user User address to check\r\n     * @return isVerified Whether the user is verified\r\n     */\r\n    function isUserVerified(address user) external view returns (bool isVerified) {\r\n        return userVerifications[user].isActive && userVerifications[user].wallet != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Get user verification data\r\n     * @param user User address\r\n     * @return verification User verification data\r\n     */\r\n    function getUserVerification(address user) external view returns (UserVerification memory verification) {\r\n        return userVerifications[user];\r\n    }\r\n\r\n    /**\r\n     * @dev Get verification data by email\r\n     * @param email Email address\r\n     * @return verification User verification data\r\n     */\r\n    function getVerificationByEmail(string memory email) external view returns (UserVerification memory verification) {\r\n        address wallet = emailToWallet[email];\r\n        require(wallet != address(0), \"Email not verified\");\r\n        return userVerifications[wallet];\r\n    }\r\n\r\n    /**\r\n     * @dev Check if email is whitelisted (checks hash)\r\n     * @param email Email address to check\r\n     * @return isWhitelisted Whether the email is whitelisted\r\n     */\r\n    function isEmailWhitelisted(string memory email) external view returns (bool isWhitelisted) {\r\n        bytes32 emailHash = _hashEmail(email);\r\n        return emailHashWhitelist[emailHash];\r\n    }\r\n    \r\n    /**\r\n     * @dev Check if email hash is whitelisted (for frontend use)\r\n     * @param emailHash Hash of the email address\r\n     * @return isWhitelisted Whether the email hash is whitelisted\r\n     */\r\n    function isEmailHashWhitelisted(bytes32 emailHash) external view returns (bool isWhitelisted) {\r\n        return emailHashWhitelist[emailHash];\r\n    }\r\n\r\n    /**\r\n     * @dev Check if email is already in use\r\n     * @param email Email address to check\r\n     * @return isInUse Whether the email is already in use\r\n     */\r\n    function isEmailInUse(string memory email) external view returns (bool isInUse) {\r\n        return emailToWallet[email] != address(0);\r\n    }\r\n\r\n    /**\r\n     * @dev Check if wallet is already in use\r\n     * @param wallet Wallet address to check\r\n     * @return isInUse Whether the wallet is already in use\r\n     */\r\n    function isWalletInUse(address wallet) external view returns (bool isInUse) {\r\n        return bytes(walletToEmail[wallet]).length > 0;\r\n    }\r\n\r\n    /**\r\n     * @dev Get allocation configuration status\r\n     * @return config Allocation configuration data\r\n     */\r\n    function getAllocationConfig() external view returns (AllocationConfig memory config) {\r\n        return allocationConfig;\r\n    }\r\n\r\n    /**\r\n     * @dev Get total verified users count\r\n     * @return count Total number of verified users\r\n     */\r\n    function getTotalVerifiedUsers() external view returns (uint256 count) {\r\n        return totalVerifiedUsers;\r\n    }\r\n\r\n    /**\r\n     * @dev Update allocation configuration parameters (only owner)\r\n     * @param maxAllocations Maximum number of token allocations\r\n     * @param allocationPerUser Tokens allocated per user\r\n     * @param isActive Whether token allocation is active\r\n     */\r\n    function updateAllocationConfig(\r\n        uint256 maxAllocations,\r\n        uint256 allocationPerUser,\r\n        bool isActive\r\n    ) external onlyOwner {\r\n        allocationConfig.maxAllocations = maxAllocations;\r\n        allocationConfig.allocationPerUser = allocationPerUser;\r\n        allocationConfig.isActive = isActive;\r\n    }\r\n\r\n    /**\r\n     * @dev Set mainnet migration contract address (only owner)\r\n     * @param _mainnetMigrationContract Address of mainnet migration contract\r\n     */\r\n    function setMainnetMigrationContract(address _mainnetMigrationContract) external onlyOwner {\r\n        mainnetMigrationContract = _mainnetMigrationContract;\r\n    }\r\n\r\n    /**\r\n     * @dev Set health token contract address (only owner)\r\n     * @param _healthToken Address of health token contract\r\n     */\r\n    function setHealthToken(address _healthToken) external onlyOwner {\r\n        healthToken = IERC20(_healthToken);\r\n    }\r\n\r\n    /**\r\n     * @dev Toggle verification system (only owner)\r\n     * @param enabled Whether verification is enabled\r\n     */\r\n    function setVerificationEnabled(bool enabled) external onlyOwner {\r\n        verificationEnabled = enabled;\r\n    }\r\n\r\n    /**\r\n     * @dev Emergency function to deactivate user (only owner)\r\n     * @param user User address to deactivate\r\n     */\r\n    function deactivateUser(address user) external onlyOwner {\r\n        require(userVerifications[user].isActive, \"User not active\");\r\n        \r\n        UserVerification storage verification = userVerifications[user];\r\n        verification.isActive = false;\r\n        \r\n        // Clear mappings\r\n        string memory email = verification.email;\r\n        walletToEmail[user] = \"\";\r\n        emailToWallet[email] = address(0);\r\n        \r\n        emit WalletUnlinked(email, user, block.timestamp);\r\n    }\r\n\r\n    /**\r\n     * @dev Generate migration proof for user (for mainnet migration)\r\n     * @param user User address\r\n     * @param signature User signature proving ownership\r\n     * @return migrationHash Hash of the migration proof\r\n     */\r\n    function generateMigrationProof(\r\n        address user,\r\n        bytes memory signature\r\n    ) external returns (bytes32 migrationHash) {\r\n        require(userVerifications[user].isActive, \"User not verified\");\r\n        require(mainnetMigrationContract != address(0), \"Migration contract not set\");\r\n        \r\n        // Forward to mainnet migration contract\r\n        (bool success, bytes memory data) = mainnetMigrationContract.delegatecall(\r\n            abi.encodeWithSignature(\"generateMigrationProof(address,bytes)\", user, signature)\r\n        );\r\n        \r\n        require(success, \"Migration proof generation failed\");\r\n        return abi.decode(data, (bytes32));\r\n    }\r\n\r\n    /**\r\n     * @dev Claim allocated tokens for verified user\r\n     * @notice Users can claim their allocated tokens once after verification\r\n     */\r\n    function claimAllocation() external nonReentrant {\r\n        address user = msg.sender;\r\n        UserVerification storage verification = userVerifications[user];\r\n        \r\n        require(verification.isActive, \"User not verified\");\r\n        require(verification.tokenAllocation > 0, \"No allocation available\");\r\n        require(!verification.hasReceivedTokens, \"Tokens already claimed\");\r\n        require(address(healthToken) != address(0), \"Health token not set\");\r\n        \r\n        uint256 allocationAmount = verification.tokenAllocation;\r\n        verification.hasReceivedTokens = true;\r\n        \r\n        // Update both mappings\r\n        userVerifications[user] = verification;\r\n        userIdToVerification[verification.userId] = verification;\r\n        \r\n        // Transfer tokens to user\r\n        require(healthToken.transfer(user, allocationAmount), \"Token transfer failed\");\r\n        \r\n        emit TokensClaimed(user, allocationAmount, block.timestamp);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": { "enabled": true, "runs": 200 },
      "evmVersion": "paris",
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata"
          ],
          "": ["ast"]
        }
      }
    }
  },
  "output": {
    "sources": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "exportedSymbols": { "Context": [255], "Ownable": [147] },
          "id": 148,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": ["solidity", "^", "0.8", ".20"],
              "nodeType": "PragmaDirective",
              "src": "102:24:0"
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
              "file": "../utils/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 148,
              "sourceUnit": 256,
              "src": "128:45:0",
              "symbolAliases": [
                {
                  "foreign": {
                    "id": 2,
                    "name": "Context",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 255,
                    "src": "136:7:0",
                    "typeDescriptions": {}
                  },
                  "nameLocation": "-1:-1:-1"
                }
              ],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 5,
                    "name": "Context",
                    "nameLocations": ["692:7:0"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 255,
                    "src": "692:7:0"
                  },
                  "id": 6,
                  "nodeType": "InheritanceSpecifier",
                  "src": "692:7:0"
                }
              ],
              "canonicalName": "Ownable",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 4,
                "nodeType": "StructuredDocumentation",
                "src": "175:487:0",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 147,
              "linearizedBaseContracts": [147, 255],
              "name": "Ownable",
              "nameLocation": "681:7:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 8,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "722:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 147,
                  "src": "706:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "706:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 9,
                    "nodeType": "StructuredDocumentation",
                    "src": "735:85:0",
                    "text": " @dev The caller account is not authorized to perform an operation."
                  },
                  "errorSelector": "118cdaa7",
                  "id": 13,
                  "name": "OwnableUnauthorizedAccount",
                  "nameLocation": "831:26:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 12,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 11,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "866:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 13,
                        "src": "858:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 10,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "858:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "857:17:0"
                  },
                  "src": "825:50:0"
                },
                {
                  "documentation": {
                    "id": 14,
                    "nodeType": "StructuredDocumentation",
                    "src": "881:82:0",
                    "text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
                  },
                  "errorSelector": "1e4fbdf7",
                  "id": 18,
                  "name": "OwnableInvalidOwner",
                  "nameLocation": "974:19:0",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 17,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 16,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1002:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 18,
                        "src": "994:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 15,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "994:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "993:15:0"
                  },
                  "src": "968:41:0"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
                  "id": 24,
                  "name": "OwnershipTransferred",
                  "nameLocation": "1021:20:0",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 23,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 20,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "1058:13:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1042:29:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 19,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1042:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 22,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "1089:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 24,
                        "src": "1073:24:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 21,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1073:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1041:57:0"
                  },
                  "src": "1015:84:0"
                },
                {
                  "body": {
                    "id": 49,
                    "nodeType": "Block",
                    "src": "1259:153:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 30,
                            "name": "initialOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "1273:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 33,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1297:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 32,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1289:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 31,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1289:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 34,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1289:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1273:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 44,
                        "nodeType": "IfStatement",
                        "src": "1269:95:0",
                        "trueBody": {
                          "id": 43,
                          "nodeType": "Block",
                          "src": "1301:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 39,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1350:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 38,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "1342:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 37,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1342:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 40,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1342:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 36,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "1322:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 41,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1322:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42,
                              "nodeType": "RevertStatement",
                              "src": "1315:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 46,
                              "name": "initialOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "1392:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "1373:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 47,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1373:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 48,
                        "nodeType": "ExpressionStatement",
                        "src": "1373:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "1105:115:0",
                    "text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
                  },
                  "id": 50,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 28,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 27,
                        "mutability": "mutable",
                        "name": "initialOwner",
                        "nameLocation": "1245:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 50,
                        "src": "1237:20:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 26,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1237:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1236:22:0"
                  },
                  "returnParameters": {
                    "id": 29,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1259:0:0"
                  },
                  "scope": 147,
                  "src": "1225:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 57,
                    "nodeType": "Block",
                    "src": "1521:41:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84,
                            "src": "1531:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1531:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 55,
                        "nodeType": "ExpressionStatement",
                        "src": "1531:13:0"
                      },
                      {
                        "id": 56,
                        "nodeType": "PlaceholderStatement",
                        "src": "1554:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 51,
                    "nodeType": "StructuredDocumentation",
                    "src": "1418:77:0",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 58,
                  "name": "onlyOwner",
                  "nameLocation": "1509:9:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 52,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1518:2:0"
                  },
                  "src": "1500:62:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 66,
                    "nodeType": "Block",
                    "src": "1693:30:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 64,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "1710:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 63,
                        "id": 65,
                        "nodeType": "Return",
                        "src": "1703:13:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 59,
                    "nodeType": "StructuredDocumentation",
                    "src": "1568:65:0",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 67,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1647:5:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 60,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1652:2:0"
                  },
                  "returnParameters": {
                    "id": 63,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 62,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 67,
                        "src": "1684:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 61,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1684:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1683:9:0"
                  },
                  "scope": 147,
                  "src": "1638:85:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 83,
                    "nodeType": "Block",
                    "src": "1841:117:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 71,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67,
                              "src": "1855:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 72,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1855:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 73,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 237,
                              "src": "1866:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 74,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1866:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1855:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 82,
                        "nodeType": "IfStatement",
                        "src": "1851:101:0",
                        "trueBody": {
                          "id": 81,
                          "nodeType": "Block",
                          "src": "1880:72:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 77,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 237,
                                      "src": "1928:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 78,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1928:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 76,
                                  "name": "OwnableUnauthorizedAccount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13,
                                  "src": "1901:26:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 79,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1901:40:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 80,
                              "nodeType": "RevertStatement",
                              "src": "1894:47:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 68,
                    "nodeType": "StructuredDocumentation",
                    "src": "1729:62:0",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 84,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1805:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 69,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1816:2:0"
                  },
                  "returnParameters": {
                    "id": 70,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1841:0:0"
                  },
                  "scope": 147,
                  "src": "1796:162:0",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 97,
                    "nodeType": "Block",
                    "src": "2347:47:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 93,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2384:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 92,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2376:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 91,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2376:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 94,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2376:10:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 90,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2357:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 95,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2357:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 96,
                        "nodeType": "ExpressionStatement",
                        "src": "2357:30:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 85,
                    "nodeType": "StructuredDocumentation",
                    "src": "1964:324:0",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 98,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 88,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 87,
                        "name": "onlyOwner",
                        "nameLocations": ["2337:9:0"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2337:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2337:9:0"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "2302:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 86,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2319:2:0"
                  },
                  "returnParameters": {
                    "id": 89,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2347:0:0"
                  },
                  "scope": 147,
                  "src": "2293:101:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 125,
                    "nodeType": "Block",
                    "src": "2613:145:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 106,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2627:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 109,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2647:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 108,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2639:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 107,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2639:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2639:10:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2627:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 120,
                        "nodeType": "IfStatement",
                        "src": "2623:91:0",
                        "trueBody": {
                          "id": 119,
                          "nodeType": "Block",
                          "src": "2651:63:0",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 115,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2700:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 114,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2692:7:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 113,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2692:7:0",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2692:10:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 112,
                                  "name": "OwnableInvalidOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "2672:19:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
                                    "typeString": "function (address) pure"
                                  }
                                },
                                "id": 117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2672:31:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 118,
                              "nodeType": "RevertStatement",
                              "src": "2665:38:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 122,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 101,
                              "src": "2742:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 121,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 146,
                            "src": "2723:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2723:28:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 124,
                        "nodeType": "ExpressionStatement",
                        "src": "2723:28:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 99,
                    "nodeType": "StructuredDocumentation",
                    "src": "2400:138:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 126,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 104,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 103,
                        "name": "onlyOwner",
                        "nameLocations": ["2603:9:0"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "2603:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2603:9:0"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2552:17:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 102,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 101,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2578:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "2570:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 100,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2570:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2569:18:0"
                  },
                  "returnParameters": {
                    "id": 105,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2613:0:0"
                  },
                  "scope": 147,
                  "src": "2543:215:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 145,
                    "nodeType": "Block",
                    "src": "2975:124:0",
                    "statements": [
                      {
                        "assignments": [133],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 133,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2993:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 145,
                            "src": "2985:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 132,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2985:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 135,
                        "initialValue": {
                          "id": 134,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8,
                          "src": "3004:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2985:25:0"
                      },
                      {
                        "expression": {
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 136,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8,
                            "src": "3020:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 137,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 129,
                            "src": "3029:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3020:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 139,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:17:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 141,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 133,
                              "src": "3073:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 142,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 129,
                              "src": "3083:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 140,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "3052:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3052:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 144,
                        "nodeType": "EmitStatement",
                        "src": "3047:45:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 127,
                    "nodeType": "StructuredDocumentation",
                    "src": "2764:143:0",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 146,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2921:18:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 130,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 129,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2948:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 146,
                        "src": "2940:16:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 128,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2940:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2939:18:0"
                  },
                  "returnParameters": {
                    "id": 131,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2975:0:0"
                  },
                  "scope": 147,
                  "src": "2912:187:0",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 148,
              "src": "663:2438:0",
              "usedErrors": [13, 18],
              "usedEvents": [24]
            }
          ],
          "src": "102:3000:0"
        },
        "id": 0
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "exportedSymbols": { "IERC20": [225] },
          "id": 226,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 149,
              "literals": ["solidity", ">=", "0.4", ".16"],
              "nodeType": "PragmaDirective",
              "src": "106:25:1"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "IERC20",
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 150,
                "nodeType": "StructuredDocumentation",
                "src": "133:71:1",
                "text": " @dev Interface of the ERC-20 standard as defined in the ERC."
              },
              "fullyImplemented": false,
              "id": 225,
              "linearizedBaseContracts": [225],
              "name": "IERC20",
              "nameLocation": "215:6:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 151,
                    "nodeType": "StructuredDocumentation",
                    "src": "228:158:1",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
                  "id": 159,
                  "name": "Transfer",
                  "nameLocation": "397:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 153,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "422:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "406:20:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 152,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "406:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 155,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "444:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "428:18:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 154,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "428:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 157,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "456:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 159,
                        "src": "448:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 156,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "448:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "405:57:1"
                  },
                  "src": "391:72:1"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 160,
                    "nodeType": "StructuredDocumentation",
                    "src": "469:148:1",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
                  "id": 168,
                  "name": "Approval",
                  "nameLocation": "628:8:1",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 167,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 162,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "653:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "637:21:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "637:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 164,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "676:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "660:23:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 163,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "660:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 166,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "693:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 168,
                        "src": "685:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "685:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "636:63:1"
                  },
                  "src": "622:78:1"
                },
                {
                  "documentation": {
                    "id": 169,
                    "nodeType": "StructuredDocumentation",
                    "src": "706:65:1",
                    "text": " @dev Returns the value of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 174,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "785:11:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 170,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "796:2:1"
                  },
                  "returnParameters": {
                    "id": 173,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 172,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 174,
                        "src": "822:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 171,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "822:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "821:9:1"
                  },
                  "scope": 225,
                  "src": "776:55:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 175,
                    "nodeType": "StructuredDocumentation",
                    "src": "837:71:1",
                    "text": " @dev Returns the value of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 182,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "922:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 178,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 177,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "940:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "932:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 176,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "932:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "931:17:1"
                  },
                  "returnParameters": {
                    "id": 181,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 180,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 182,
                        "src": "972:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "972:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "971:9:1"
                  },
                  "scope": 225,
                  "src": "913:68:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 183,
                    "nodeType": "StructuredDocumentation",
                    "src": "987:213:1",
                    "text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 192,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1214:8:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 188,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 185,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1231:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1223:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 184,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1223:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 187,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "1243:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1235:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 186,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1235:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1222:27:1"
                  },
                  "returnParameters": {
                    "id": 191,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 190,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 192,
                        "src": "1268:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 189,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1268:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1267:6:1"
                  },
                  "scope": 225,
                  "src": "1205:69:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1280:264:1",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 202,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1558:9:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 195,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1576:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1568:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 194,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1568:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 197,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1591:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1583:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 196,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1583:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1567:32:1"
                  },
                  "returnParameters": {
                    "id": 201,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 200,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 202,
                        "src": "1623:7:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 199,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1623:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1622:9:1"
                  },
                  "scope": 225,
                  "src": "1549:83:1",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 203,
                    "nodeType": "StructuredDocumentation",
                    "src": "1638:667:1",
                    "text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 212,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2319:7:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 208,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 205,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2335:7:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2327:15:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 204,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2327:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 207,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2352:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2344:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 206,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2344:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2326:32:1"
                  },
                  "returnParameters": {
                    "id": 211,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 210,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 212,
                        "src": "2377:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 209,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2377:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2376:6:1"
                  },
                  "scope": 225,
                  "src": "2310:73:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 213,
                    "nodeType": "StructuredDocumentation",
                    "src": "2389:297:1",
                    "text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 224,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2700:12:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 220,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 215,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2721:4:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2713:12:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 214,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2713:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 217,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2735:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2727:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 216,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2727:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 219,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2747:5:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2739:13:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 218,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2739:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2712:41:1"
                  },
                  "returnParameters": {
                    "id": 223,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 222,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 224,
                        "src": "2772:4:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 221,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2772:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2771:6:1"
                  },
                  "scope": 225,
                  "src": "2691:87:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 226,
              "src": "205:2575:1",
              "usedErrors": [],
              "usedEvents": [159, 168]
            }
          ],
          "src": "106:2675:1"
        },
        "id": 1
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/Context.sol",
          "exportedSymbols": { "Context": [255] },
          "id": 256,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 227,
              "literals": ["solidity", "^", "0.8", ".20"],
              "nodeType": "PragmaDirective",
              "src": "101:24:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "Context",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 228,
                "nodeType": "StructuredDocumentation",
                "src": "127:496:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 255,
              "linearizedBaseContracts": [255],
              "name": "Context",
              "nameLocation": "642:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 236,
                    "nodeType": "Block",
                    "src": "718:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 233,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "735:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 234,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "739:6:2",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "735:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 232,
                        "id": 235,
                        "nodeType": "Return",
                        "src": "728:17:2"
                      }
                    ]
                  },
                  "id": 237,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 229,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:2"
                  },
                  "returnParameters": {
                    "id": 232,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 231,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 237,
                        "src": "709:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:2"
                  },
                  "scope": 255,
                  "src": "656:96:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 245,
                    "nodeType": "Block",
                    "src": "825:32:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 242,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "842:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "846:4:2",
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "842:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 241,
                        "id": 244,
                        "nodeType": "Return",
                        "src": "835:15:2"
                      }
                    ]
                  },
                  "id": 246,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "767:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 238,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "775:2:2"
                  },
                  "returnParameters": {
                    "id": 241,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 240,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 246,
                        "src": "809:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 239,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "809:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "808:16:2"
                  },
                  "scope": 255,
                  "src": "758:99:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 253,
                    "nodeType": "Block",
                    "src": "935:25:2",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "952:1:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 250,
                        "id": 252,
                        "nodeType": "Return",
                        "src": "945:8:2"
                      }
                    ]
                  },
                  "id": 254,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_contextSuffixLength",
                  "nameLocation": "872:20:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 247,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "892:2:2"
                  },
                  "returnParameters": {
                    "id": 250,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 249,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 254,
                        "src": "926:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 248,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "926:7:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "925:9:2"
                  },
                  "scope": 255,
                  "src": "863:97:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 256,
              "src": "624:338:2",
              "usedErrors": [],
              "usedEvents": []
            }
          ],
          "src": "101:862:2"
        },
        "id": 2
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
          "exportedSymbols": { "ReentrancyGuard": [324] },
          "id": 325,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 257,
              "literals": ["solidity", "^", "0.8", ".20"],
              "nodeType": "PragmaDirective",
              "src": "109:24:3"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "canonicalName": "ReentrancyGuard",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 258,
                "nodeType": "StructuredDocumentation",
                "src": "135:894:3",
                "text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
              },
              "fullyImplemented": true,
              "id": 324,
              "linearizedBaseContracts": [324],
              "name": "ReentrancyGuard",
              "nameLocation": "1048:15:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": true,
                  "id": 261,
                  "mutability": "constant",
                  "name": "NOT_ENTERED",
                  "nameLocation": "1843:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1818:40:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1818:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "31",
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1857:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  "visibility": "private"
                },
                {
                  "constant": true,
                  "id": 264,
                  "mutability": "constant",
                  "name": "ENTERED",
                  "nameLocation": "1889:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1864:36:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 262,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": {
                    "hexValue": "32",
                    "id": 263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1899:1:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_2_by_1",
                      "typeString": "int_const 2"
                    },
                    "value": "2"
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "1923:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 324,
                  "src": "1907:23:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1907:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "documentation": {
                    "id": 267,
                    "nodeType": "StructuredDocumentation",
                    "src": "1937:52:3",
                    "text": " @dev Unauthorized reentrant call."
                  },
                  "errorSelector": "3ee5aeb5",
                  "id": 269,
                  "name": "ReentrancyGuardReentrantCall",
                  "nameLocation": "2000:28:3",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 268,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2028:2:3"
                  },
                  "src": "1994:37:3"
                },
                {
                  "body": {
                    "id": 276,
                    "nodeType": "Block",
                    "src": "2051:38:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 272,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "2061:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 273,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "2071:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2061:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "2061:21:3"
                      }
                    ]
                  },
                  "id": 277,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 270,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2048:2:3"
                  },
                  "returnParameters": {
                    "id": 271,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2051:0:3"
                  },
                  "scope": 324,
                  "src": "2037:52:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 287,
                    "nodeType": "Block",
                    "src": "2490:79:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 280,
                            "name": "_nonReentrantBefore",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 304,
                            "src": "2500:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2500:21:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "2500:21:3"
                      },
                      {
                        "id": 283,
                        "nodeType": "PlaceholderStatement",
                        "src": "2531:1:3"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 284,
                            "name": "_nonReentrantAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 312,
                            "src": "2542:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                              "typeString": "function ()"
                            }
                          },
                          "id": 285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2542:20:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 286,
                        "nodeType": "ExpressionStatement",
                        "src": "2542:20:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 278,
                    "nodeType": "StructuredDocumentation",
                    "src": "2095:366:3",
                    "text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
                  },
                  "id": 288,
                  "name": "nonReentrant",
                  "nameLocation": "2475:12:3",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 279,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2487:2:3"
                  },
                  "src": "2466:103:3",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 303,
                    "nodeType": "Block",
                    "src": "2614:268:3",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 291,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "2702:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 292,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "2713:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2702:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 298,
                        "nodeType": "IfStatement",
                        "src": "2698:86:3",
                        "trueBody": {
                          "id": 297,
                          "nodeType": "Block",
                          "src": "2722:62:3",
                          "statements": [
                            {
                              "errorCall": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 294,
                                  "name": "ReentrancyGuardReentrantCall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 269,
                                  "src": "2743:28:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                    "typeString": "function () pure"
                                  }
                                },
                                "id": 295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2743:30:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 296,
                              "nodeType": "RevertStatement",
                              "src": "2736:37:3"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 299,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "2858:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 300,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "2868:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2858:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 302,
                        "nodeType": "ExpressionStatement",
                        "src": "2858:17:3"
                      }
                    ]
                  },
                  "id": 304,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantBefore",
                  "nameLocation": "2584:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 289,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2603:2:3"
                  },
                  "returnParameters": {
                    "id": 290,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2614:0:3"
                  },
                  "scope": 324,
                  "src": "2575:307:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 311,
                    "nodeType": "Block",
                    "src": "2926:170:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 307,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3068:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 308,
                            "name": "NOT_ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 261,
                            "src": "3078:11:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3068:21:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "3068:21:3"
                      }
                    ]
                  },
                  "id": 312,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_nonReentrantAfter",
                  "nameLocation": "2897:18:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 305,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2915:2:3"
                  },
                  "returnParameters": {
                    "id": 306,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2926:0:3"
                  },
                  "scope": 324,
                  "src": "2888:208:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 322,
                    "nodeType": "Block",
                    "src": "3339:42:3",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 318,
                            "name": "_status",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 266,
                            "src": "3356:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 319,
                            "name": "ENTERED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "3367:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3356:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 317,
                        "id": 321,
                        "nodeType": "Return",
                        "src": "3349:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 313,
                    "nodeType": "StructuredDocumentation",
                    "src": "3102:168:3",
                    "text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
                  },
                  "id": 323,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_reentrancyGuardEntered",
                  "nameLocation": "3284:23:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 314,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3307:2:3"
                  },
                  "returnParameters": {
                    "id": 317,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 316,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 323,
                        "src": "3333:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 315,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3333:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3332:6:3"
                  },
                  "scope": 324,
                  "src": "3275:106:3",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 325,
              "src": "1030:2353:3",
              "usedErrors": [269],
              "usedEvents": []
            }
          ],
          "src": "109:3275:3"
        },
        "id": 3
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ast": {
          "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
          "exportedSymbols": { "ECDSA": [672] },
          "id": 673,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 326,
              "literals": ["solidity", "^", "0.8", ".20"],
              "nodeType": "PragmaDirective",
              "src": "112:24:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "canonicalName": "ECDSA",
              "contractDependencies": [],
              "contractKind": "library",
              "documentation": {
                "id": 327,
                "nodeType": "StructuredDocumentation",
                "src": "138:205:4",
                "text": " @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."
              },
              "fullyImplemented": true,
              "id": 672,
              "linearizedBaseContracts": [672],
              "name": "ECDSA",
              "nameLocation": "352:5:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "ECDSA.RecoverError",
                  "id": 332,
                  "members": [
                    {
                      "id": 328,
                      "name": "NoError",
                      "nameLocation": "392:7:4",
                      "nodeType": "EnumValue",
                      "src": "392:7:4"
                    },
                    {
                      "id": 329,
                      "name": "InvalidSignature",
                      "nameLocation": "409:16:4",
                      "nodeType": "EnumValue",
                      "src": "409:16:4"
                    },
                    {
                      "id": 330,
                      "name": "InvalidSignatureLength",
                      "nameLocation": "435:22:4",
                      "nodeType": "EnumValue",
                      "src": "435:22:4"
                    },
                    {
                      "id": 331,
                      "name": "InvalidSignatureS",
                      "nameLocation": "467:17:4",
                      "nodeType": "EnumValue",
                      "src": "467:17:4"
                    }
                  ],
                  "name": "RecoverError",
                  "nameLocation": "369:12:4",
                  "nodeType": "EnumDefinition",
                  "src": "364:126:4"
                },
                {
                  "documentation": {
                    "id": 333,
                    "nodeType": "StructuredDocumentation",
                    "src": "496:63:4",
                    "text": " @dev The signature derives the `address(0)`."
                  },
                  "errorSelector": "f645eedf",
                  "id": 335,
                  "name": "ECDSAInvalidSignature",
                  "nameLocation": "570:21:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 334,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "591:2:4"
                  },
                  "src": "564:30:4"
                },
                {
                  "documentation": {
                    "id": 336,
                    "nodeType": "StructuredDocumentation",
                    "src": "600:60:4",
                    "text": " @dev The signature has an invalid length."
                  },
                  "errorSelector": "fce698f7",
                  "id": 340,
                  "name": "ECDSAInvalidSignatureLength",
                  "nameLocation": "671:27:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 338,
                        "mutability": "mutable",
                        "name": "length",
                        "nameLocation": "707:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 340,
                        "src": "699:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "699:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "698:16:4"
                  },
                  "src": "665:50:4"
                },
                {
                  "documentation": {
                    "id": 341,
                    "nodeType": "StructuredDocumentation",
                    "src": "721:85:4",
                    "text": " @dev The signature has an S value that is in the upper half order."
                  },
                  "errorSelector": "d78bce0c",
                  "id": 345,
                  "name": "ECDSAInvalidSignatureS",
                  "nameLocation": "817:22:4",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 343,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "848:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 345,
                        "src": "840:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 342,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "840:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "839:11:4"
                  },
                  "src": "811:40:4"
                },
                {
                  "body": {
                    "id": 397,
                    "nodeType": "Block",
                    "src": "2285:622:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 360,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 350,
                              "src": "2299:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2309:6:4",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2299:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "3635",
                            "id": 362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2319:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "2299:22:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 395,
                          "nodeType": "Block",
                          "src": "2793:108:4",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 384,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "2823:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 383,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2815:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 382,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2815:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 385,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2815:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 386,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 332,
                                      "src": "2827:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "2840:22:4",
                                    "memberName": "InvalidSignatureLength",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 330,
                                    "src": "2827:35:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$332",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 390,
                                          "name": "signature",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 350,
                                          "src": "2872:9:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 391,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "2882:6:4",
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "2872:16:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 389,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2864:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 388,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2864:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 392,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2864:25:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 393,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "2814:76:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 359,
                              "id": 394,
                              "nodeType": "Return",
                              "src": "2807:83:4"
                            }
                          ]
                        },
                        "id": 396,
                        "nodeType": "IfStatement",
                        "src": "2295:606:4",
                        "trueBody": {
                          "id": 381,
                          "nodeType": "Block",
                          "src": "2323:464:4",
                          "statements": [
                            {
                              "assignments": [365],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 365,
                                  "mutability": "mutable",
                                  "name": "r",
                                  "nameLocation": "2345:1:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 381,
                                  "src": "2337:9:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 364,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2337:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 366,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2337:9:4"
                            },
                            {
                              "assignments": [368],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 368,
                                  "mutability": "mutable",
                                  "name": "s",
                                  "nameLocation": "2368:1:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 381,
                                  "src": "2360:9:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 367,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2360:7:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 369,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2360:9:4"
                            },
                            {
                              "assignments": [371],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 371,
                                  "mutability": "mutable",
                                  "name": "v",
                                  "nameLocation": "2389:1:4",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 381,
                                  "src": "2383:7:4",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  "typeName": {
                                    "id": 370,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2383:5:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 372,
                              "nodeType": "VariableDeclarationStatement",
                              "src": "2383:7:4"
                            },
                            {
                              "AST": {
                                "nodeType": "YulBlock",
                                "src": "2560:171:4",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2578:32:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2593:9:4"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2604:4:4",
                                              "type": "",
                                              "value": "0x20"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2589:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2589:20:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2583:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2583:27:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "r",
                                        "nodeType": "YulIdentifier",
                                        "src": "2578:1:4"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2627:32:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "signature",
                                              "nodeType": "YulIdentifier",
                                              "src": "2642:9:4"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2653:4:4",
                                              "type": "",
                                              "value": "0x40"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2638:3:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2638:20:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2632:5:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2632:27:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "s",
                                        "nodeType": "YulIdentifier",
                                        "src": "2627:1:4"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2676:41:4",
                                    "value": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2686:1:4",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "signature",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2699:9:4"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "2710:4:4",
                                                  "type": "",
                                                  "value": "0x60"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2695:3:4"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2695:20:4"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2689:5:4"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2689:27:4"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "byte",
                                        "nodeType": "YulIdentifier",
                                        "src": "2681:4:4"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2681:36:4"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "v",
                                        "nodeType": "YulIdentifier",
                                        "src": "2676:1:4"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "evmVersion": "paris",
                              "externalReferences": [
                                {
                                  "declaration": 365,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2578:1:4",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 368,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2627:1:4",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 350,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2593:9:4",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 350,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2642:9:4",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 350,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2699:9:4",
                                  "valueSize": 1
                                },
                                {
                                  "declaration": 371,
                                  "isOffset": false,
                                  "isSlot": false,
                                  "src": "2676:1:4",
                                  "valueSize": 1
                                }
                              ],
                              "flags": ["memory-safe"],
                              "id": 373,
                              "nodeType": "InlineAssembly",
                              "src": "2535:196:4"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 375,
                                    "name": "hash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 348,
                                    "src": "2762:4:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 376,
                                    "name": "v",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 371,
                                    "src": "2768:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  {
                                    "id": 377,
                                    "name": "r",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 365,
                                    "src": "2771:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 378,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 368,
                                    "src": "2774:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "id": 374,
                                  "name": "tryRecover",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [398, 478, 586],
                                  "referencedDeclaration": 586,
                                  "src": "2751:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                    "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                                  }
                                },
                                "id": 379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2751:25:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 359,
                              "id": 380,
                              "nodeType": "Return",
                              "src": "2744:32:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 346,
                    "nodeType": "StructuredDocumentation",
                    "src": "857:1267:4",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"
                  },
                  "id": 398,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "2138:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 351,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 348,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "2166:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2158:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2158:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 350,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "2193:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2180:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 349,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "2180:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2148:60:4"
                  },
                  "returnParameters": {
                    "id": 359,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "2240:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2232:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2232:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 356,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "2264:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2251:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$332",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 355,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 354,
                            "name": "RecoverError",
                            "nameLocations": ["2251:12:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 332,
                            "src": "2251:12:4"
                          },
                          "referencedDeclaration": 332,
                          "src": "2251:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$332",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 358,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "2277:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 398,
                        "src": "2269:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 357,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2269:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2231:53:4"
                  },
                  "scope": 672,
                  "src": "2129:778:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "3801:168:4",
                    "statements": [
                      {
                        "assignments": [409, 412, 414],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 409,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "3820:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "3812:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 408,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3812:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 412,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "3844:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "3831:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 411,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 410,
                                "name": "RecoverError",
                                "nameLocations": ["3831:12:4"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 332,
                                "src": "3831:12:4"
                              },
                              "referencedDeclaration": 332,
                              "src": "3831:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 414,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "3859:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 427,
                            "src": "3851:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 413,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "3851:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 419,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 416,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 401,
                              "src": "3882:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 417,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 403,
                              "src": "3888:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 415,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [398, 478, 586],
                            "referencedDeclaration": 398,
                            "src": "3871:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 418,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3871:27:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3811:87:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 421,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 412,
                              "src": "3920:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 422,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 414,
                              "src": "3927:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 420,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "3908:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$332_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3908:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "3908:28:4"
                      },
                      {
                        "expression": {
                          "id": 425,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "3953:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 407,
                        "id": 426,
                        "nodeType": "Return",
                        "src": "3946:16:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 399,
                    "nodeType": "StructuredDocumentation",
                    "src": "2913:796:4",
                    "text": " @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."
                  },
                  "id": 428,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "3723:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 404,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 401,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "3739:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "3731:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 400,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3731:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 403,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "3758:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "3745:22:4",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 402,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3745:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3730:38:4"
                  },
                  "returnParameters": {
                    "id": 407,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 406,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "3792:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 405,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3792:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3791:9:4"
                  },
                  "scope": 672,
                  "src": "3714:255:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 477,
                    "nodeType": "Block",
                    "src": "4348:342:4",
                    "statements": [
                      {
                        "id": 476,
                        "nodeType": "UncheckedBlock",
                        "src": "4358:326:4",
                        "statements": [
                          {
                            "assignments": [446],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 446,
                                "mutability": "mutable",
                                "name": "s",
                                "nameLocation": "4390:1:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 476,
                                "src": "4382:9:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                "typeName": {
                                  "id": 445,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4382:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 453,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 447,
                                "name": "vs",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 435,
                                "src": "4394:2:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666",
                                    "id": 450,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4407:66:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                      "typeString": "int_const 5789...(69 digits omitted)...9967"
                                    },
                                    "value": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1",
                                      "typeString": "int_const 5789...(69 digits omitted)...9967"
                                    }
                                  ],
                                  "id": 449,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "4399:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 448,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4399:7:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 451,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4399:75:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "4394:80:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4382:92:4"
                          },
                          {
                            "assignments": [455],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 455,
                                "mutability": "mutable",
                                "name": "v",
                                "nameLocation": "4591:1:4",
                                "nodeType": "VariableDeclaration",
                                "scope": 476,
                                "src": "4585:7:4",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                },
                                "typeName": {
                                  "id": 454,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4585:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 468,
                            "initialValue": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 466,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 463,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "arguments": [
                                            {
                                              "id": 460,
                                              "name": "vs",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 435,
                                              "src": "4610:2:4",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            ],
                                            "id": 459,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4602:7:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 458,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4602:7:4",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 461,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "nameLocations": [],
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "4602:11:4",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": ">>",
                                        "rightExpression": {
                                          "hexValue": "323535",
                                          "id": 462,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4617:3:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_255_by_1",
                                            "typeString": "int_const 255"
                                          },
                                          "value": "255"
                                        },
                                        "src": "4602:18:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 464,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "4601:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "hexValue": "3237",
                                    "id": 465,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4624:2:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_27_by_1",
                                      "typeString": "int_const 27"
                                    },
                                    "value": "27"
                                  },
                                  "src": "4601:25:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 457,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4595:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint8_$",
                                  "typeString": "type(uint8)"
                                },
                                "typeName": {
                                  "id": 456,
                                  "name": "uint8",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4595:5:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4595:32:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "4585:42:4"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 470,
                                  "name": "hash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 431,
                                  "src": "4659:4:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 471,
                                  "name": "v",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 455,
                                  "src": "4665:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "id": 472,
                                  "name": "r",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 433,
                                  "src": "4668:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "id": 473,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 446,
                                  "src": "4671:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "id": 469,
                                "name": "tryRecover",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [398, 478, 586],
                                "referencedDeclaration": 586,
                                "src": "4648:10:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                  "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "id": 474,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4648:25:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                              }
                            },
                            "functionReturnParameters": 444,
                            "id": 475,
                            "nodeType": "Return",
                            "src": "4641:32:4"
                          }
                        ]
                      }
                    ]
                  },
                  "documentation": {
                    "id": 429,
                    "nodeType": "StructuredDocumentation",
                    "src": "3975:205:4",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"
                  },
                  "id": 478,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "4194:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 436,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 431,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4222:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4214:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 430,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4214:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 433,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4244:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4236:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 432,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4236:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 435,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4263:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4255:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4255:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4204:67:4"
                  },
                  "returnParameters": {
                    "id": 444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 438,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "4303:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4295:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 437,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4295:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 441,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "4327:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4314:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$332",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 440,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 439,
                            "name": "RecoverError",
                            "nameLocations": ["4314:12:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 332,
                            "src": "4314:12:4"
                          },
                          "referencedDeclaration": 332,
                          "src": "4314:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$332",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 443,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "4340:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 478,
                        "src": "4332:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 442,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4332:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4294:53:4"
                  },
                  "scope": 672,
                  "src": "4185:505:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 510,
                    "nodeType": "Block",
                    "src": "4903:164:4",
                    "statements": [
                      {
                        "assignments": [491, 494, 496],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 491,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "4922:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 510,
                            "src": "4914:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 490,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4914:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 494,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "4946:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 510,
                            "src": "4933:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 493,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 492,
                                "name": "RecoverError",
                                "nameLocations": ["4933:12:4"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 332,
                                "src": "4933:12:4"
                              },
                              "referencedDeclaration": 332,
                              "src": "4933:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 496,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "4961:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 510,
                            "src": "4953:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 495,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4953:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 502,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 498,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 481,
                              "src": "4984:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 499,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 483,
                              "src": "4990:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 500,
                              "name": "vs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 485,
                              "src": "4993:2:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 497,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [398, 478, 586],
                            "referencedDeclaration": 478,
                            "src": "4973:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                              "typeString": "function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4973:23:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4913:83:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 504,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 494,
                              "src": "5018:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 505,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 496,
                              "src": "5025:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 503,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "5006:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$332_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5006:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 507,
                        "nodeType": "ExpressionStatement",
                        "src": "5006:28:4"
                      },
                      {
                        "expression": {
                          "id": 508,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 491,
                          "src": "5051:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 489,
                        "id": 509,
                        "nodeType": "Return",
                        "src": "5044:16:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 479,
                    "nodeType": "StructuredDocumentation",
                    "src": "4696:116:4",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."
                  },
                  "id": 511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "4826:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 486,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 481,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "4842:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "4834:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 480,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4834:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 483,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "4856:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "4848:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 482,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4848:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 485,
                        "mutability": "mutable",
                        "name": "vs",
                        "nameLocation": "4867:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "4859:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 484,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4859:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4833:37:4"
                  },
                  "returnParameters": {
                    "id": 489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 488,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 511,
                        "src": "4894:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 487,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4894:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4893:9:4"
                  },
                  "scope": 672,
                  "src": "4817:250:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 585,
                    "nodeType": "Block",
                    "src": "5382:1372:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 532,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 520,
                                "src": "6278:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 531,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6270:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 530,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "6270:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 533,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6270:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130",
                            "id": 534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6283:66:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1",
                              "typeString": "int_const 5789...(69 digits omitted)...7168"
                            },
                            "value": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"
                          },
                          "src": "6270:79:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 546,
                        "nodeType": "IfStatement",
                        "src": "6266:164:4",
                        "trueBody": {
                          "id": 545,
                          "nodeType": "Block",
                          "src": "6351:79:4",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 538,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6381:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 537,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6373:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 536,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6373:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 539,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6373:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 540,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 332,
                                      "src": "6385:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 541,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6398:17:4",
                                    "memberName": "InvalidSignatureS",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 331,
                                    "src": "6385:30:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$332",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "id": 542,
                                    "name": "s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 520,
                                    "src": "6417:1:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 543,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6372:47:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 529,
                              "id": 544,
                              "nodeType": "Return",
                              "src": "6365:54:4"
                            }
                          ]
                        }
                      },
                      {
                        "assignments": [548],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 548,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "6532:6:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 585,
                            "src": "6524:14:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 547,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6524:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 555,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 550,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 514,
                              "src": "6551:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 551,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 516,
                              "src": "6557:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 552,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 518,
                              "src": "6560:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 553,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 520,
                              "src": "6563:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 549,
                            "name": "ecrecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -6,
                            "src": "6541:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
                            }
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6541:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6524:41:4"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 556,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 548,
                            "src": "6579:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6597:1:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 558,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6589:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 557,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6589:7:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 560,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6589:10:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6579:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 575,
                        "nodeType": "IfStatement",
                        "src": "6575:113:4",
                        "trueBody": {
                          "id": 574,
                          "nodeType": "Block",
                          "src": "6601:87:4",
                          "statements": [
                            {
                              "expression": {
                                "components": [
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 564,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6631:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 563,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6623:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 562,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6623:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6623:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 566,
                                      "name": "RecoverError",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 332,
                                      "src": "6635:12:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                        "typeString": "type(enum ECDSA.RecoverError)"
                                      }
                                    },
                                    "id": 567,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberLocation": "6648:16:4",
                                    "memberName": "InvalidSignature",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 329,
                                    "src": "6635:29:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_RecoverError_$332",
                                      "typeString": "enum ECDSA.RecoverError"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "hexValue": "30",
                                        "id": 570,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "6674:1:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        }
                                      ],
                                      "id": 569,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "6666:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes32_$",
                                        "typeString": "type(bytes32)"
                                      },
                                      "typeName": {
                                        "id": 568,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "6666:7:4",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "6666:10:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "id": 572,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "6622:55:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                                  "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                                }
                              },
                              "functionReturnParameters": 529,
                              "id": 573,
                              "nodeType": "Return",
                              "src": "6615:62:4"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "components": [
                            {
                              "id": 576,
                              "name": "signer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 548,
                              "src": "6706:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 577,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "6714:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "6727:7:4",
                              "memberName": "NoError",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 328,
                              "src": "6714:20:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 581,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6744:1:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6736:7:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes32_$",
                                  "typeString": "type(bytes32)"
                                },
                                "typeName": {
                                  "id": 579,
                                  "name": "bytes32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6736:7:4",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6736:10:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "id": 583,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "6705:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "functionReturnParameters": 529,
                        "id": 584,
                        "nodeType": "Return",
                        "src": "6698:49:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 512,
                    "nodeType": "StructuredDocumentation",
                    "src": "5073:125:4",
                    "text": " @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 586,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "tryRecover",
                  "nameLocation": "5212:10:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 521,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 514,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "5240:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5232:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 513,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5232:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 516,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "5260:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5254:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 515,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "5254:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 518,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "5279:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5271:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 517,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5271:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 520,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "5298:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5290:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 519,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5290:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5222:83:4"
                  },
                  "returnParameters": {
                    "id": 529,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 523,
                        "mutability": "mutable",
                        "name": "recovered",
                        "nameLocation": "5337:9:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5329:17:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5329:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 526,
                        "mutability": "mutable",
                        "name": "err",
                        "nameLocation": "5361:3:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5348:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$332",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 525,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 524,
                            "name": "RecoverError",
                            "nameLocations": ["5348:12:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 332,
                            "src": "5348:12:4"
                          },
                          "referencedDeclaration": 332,
                          "src": "5348:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$332",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 528,
                        "mutability": "mutable",
                        "name": "errArg",
                        "nameLocation": "5374:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 586,
                        "src": "5366:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 527,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "5366:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5328:53:4"
                  },
                  "scope": 672,
                  "src": "5203:1551:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 621,
                    "nodeType": "Block",
                    "src": "6981:166:4",
                    "statements": [
                      {
                        "assignments": [601, 604, 606],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 601,
                            "mutability": "mutable",
                            "name": "recovered",
                            "nameLocation": "7000:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 621,
                            "src": "6992:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 600,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6992:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 604,
                            "mutability": "mutable",
                            "name": "error",
                            "nameLocation": "7024:5:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 621,
                            "src": "7011:18:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "typeName": {
                              "id": 603,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 602,
                                "name": "RecoverError",
                                "nameLocations": ["7011:12:4"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 332,
                                "src": "7011:12:4"
                              },
                              "referencedDeclaration": 332,
                              "src": "7011:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 606,
                            "mutability": "mutable",
                            "name": "errorArg",
                            "nameLocation": "7039:8:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 621,
                            "src": "7031:16:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 605,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7031:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 613,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 608,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 589,
                              "src": "7062:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 609,
                              "name": "v",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "7068:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "id": 610,
                              "name": "r",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 593,
                              "src": "7071:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 611,
                              "name": "s",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 595,
                              "src": "7074:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 607,
                            "name": "tryRecover",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [398, 478, 586],
                            "referencedDeclaration": 586,
                            "src": "7051:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                              "typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7051:25:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_address_$_t_enum$_RecoverError_$332_$_t_bytes32_$",
                            "typeString": "tuple(address,enum ECDSA.RecoverError,bytes32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6991:85:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 615,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 604,
                              "src": "7098:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            {
                              "id": 616,
                              "name": "errorArg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 606,
                              "src": "7105:8:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 614,
                            "name": "_throwError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 671,
                            "src": "7086:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_enum$_RecoverError_$332_$_t_bytes32_$returns$__$",
                              "typeString": "function (enum ECDSA.RecoverError,bytes32) pure"
                            }
                          },
                          "id": 617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7086:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 618,
                        "nodeType": "ExpressionStatement",
                        "src": "7086:28:4"
                      },
                      {
                        "expression": {
                          "id": 619,
                          "name": "recovered",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 601,
                          "src": "7131:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 599,
                        "id": 620,
                        "nodeType": "Return",
                        "src": "7124:16:4"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 587,
                    "nodeType": "StructuredDocumentation",
                    "src": "6760:122:4",
                    "text": " @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."
                  },
                  "id": 622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "recover",
                  "nameLocation": "6896:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 596,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 589,
                        "mutability": "mutable",
                        "name": "hash",
                        "nameLocation": "6912:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "6904:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 588,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6904:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 591,
                        "mutability": "mutable",
                        "name": "v",
                        "nameLocation": "6924:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "6918:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 590,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6918:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 593,
                        "mutability": "mutable",
                        "name": "r",
                        "nameLocation": "6935:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "6927:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 592,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6927:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 595,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "6946:1:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "6938:9:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 594,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "6938:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6903:45:4"
                  },
                  "returnParameters": {
                    "id": 599,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 598,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 622,
                        "src": "6972:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 597,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6972:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6971:9:4"
                  },
                  "scope": 672,
                  "src": "6887:260:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 670,
                    "nodeType": "Block",
                    "src": "7352:460:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_RecoverError_$332",
                            "typeString": "enum ECDSA.RecoverError"
                          },
                          "id": 634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 631,
                            "name": "error",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 626,
                            "src": "7366:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 632,
                              "name": "RecoverError",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 332,
                              "src": "7375:12:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                "typeString": "type(enum ECDSA.RecoverError)"
                              }
                            },
                            "id": 633,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "7388:7:4",
                            "memberName": "NoError",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 328,
                            "src": "7375:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            }
                          },
                          "src": "7366:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_RecoverError_$332",
                              "typeString": "enum ECDSA.RecoverError"
                            },
                            "id": 640,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 637,
                              "name": "error",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 626,
                              "src": "7462:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 638,
                                "name": "RecoverError",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 332,
                                "src": "7471:12:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                  "typeString": "type(enum ECDSA.RecoverError)"
                                }
                              },
                              "id": 639,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "7484:16:4",
                              "memberName": "InvalidSignature",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 329,
                              "src": "7471:29:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              }
                            },
                            "src": "7462:38:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_RecoverError_$332",
                                "typeString": "enum ECDSA.RecoverError"
                              },
                              "id": 648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 645,
                                "name": "error",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 626,
                                "src": "7567:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$332",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 646,
                                  "name": "RecoverError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 332,
                                  "src": "7576:12:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                    "typeString": "type(enum ECDSA.RecoverError)"
                                  }
                                },
                                "id": 647,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "7589:22:4",
                                "memberName": "InvalidSignatureLength",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 330,
                                "src": "7576:35:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_RecoverError_$332",
                                  "typeString": "enum ECDSA.RecoverError"
                                }
                              },
                              "src": "7567:44:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_RecoverError_$332",
                                  "typeString": "enum ECDSA.RecoverError"
                                },
                                "id": 660,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 657,
                                  "name": "error",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 626,
                                  "src": "7701:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$332",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 658,
                                    "name": "RecoverError",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 332,
                                    "src": "7710:12:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_RecoverError_$332_$",
                                      "typeString": "type(enum ECDSA.RecoverError)"
                                    }
                                  },
                                  "id": 659,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberLocation": "7723:17:4",
                                  "memberName": "InvalidSignatureS",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 331,
                                  "src": "7710:30:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_RecoverError_$332",
                                    "typeString": "enum ECDSA.RecoverError"
                                  }
                                },
                                "src": "7701:39:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 666,
                              "nodeType": "IfStatement",
                              "src": "7697:109:4",
                              "trueBody": {
                                "id": 665,
                                "nodeType": "Block",
                                "src": "7742:64:4",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [
                                        {
                                          "id": 662,
                                          "name": "errorArg",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 628,
                                          "src": "7786:8:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        ],
                                        "id": 661,
                                        "name": "ECDSAInvalidSignatureS",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 345,
                                        "src": "7763:22:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
                                          "typeString": "function (bytes32) pure"
                                        }
                                      },
                                      "id": 663,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7763:32:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 664,
                                    "nodeType": "RevertStatement",
                                    "src": "7756:39:4"
                                  }
                                ]
                              }
                            },
                            "id": 667,
                            "nodeType": "IfStatement",
                            "src": "7563:243:4",
                            "trueBody": {
                              "id": 656,
                              "nodeType": "Block",
                              "src": "7613:78:4",
                              "statements": [
                                {
                                  "errorCall": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 652,
                                            "name": "errorArg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 628,
                                            "src": "7670:8:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          ],
                                          "id": 651,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "7662:7:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint256_$",
                                            "typeString": "type(uint256)"
                                          },
                                          "typeName": {
                                            "id": 650,
                                            "name": "uint256",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "7662:7:4",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 653,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "7662:17:4",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 649,
                                      "name": "ECDSAInvalidSignatureLength",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 340,
                                      "src": "7634:27:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
                                        "typeString": "function (uint256) pure"
                                      }
                                    },
                                    "id": 654,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "7634:46:4",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 655,
                                  "nodeType": "RevertStatement",
                                  "src": "7627:53:4"
                                }
                              ]
                            }
                          },
                          "id": 668,
                          "nodeType": "IfStatement",
                          "src": "7458:348:4",
                          "trueBody": {
                            "id": 644,
                            "nodeType": "Block",
                            "src": "7502:55:4",
                            "statements": [
                              {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 641,
                                    "name": "ECDSAInvalidSignature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 335,
                                    "src": "7523:21:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 642,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7523:23:4",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 643,
                                "nodeType": "RevertStatement",
                                "src": "7516:30:4"
                              }
                            ]
                          }
                        },
                        "id": 669,
                        "nodeType": "IfStatement",
                        "src": "7362:444:4",
                        "trueBody": {
                          "id": 636,
                          "nodeType": "Block",
                          "src": "7397:55:4",
                          "statements": [
                            {
                              "functionReturnParameters": 630,
                              "id": 635,
                              "nodeType": "Return",
                              "src": "7411:7:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 623,
                    "nodeType": "StructuredDocumentation",
                    "src": "7153:122:4",
                    "text": " @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."
                  },
                  "id": 671,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_throwError",
                  "nameLocation": "7289:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 629,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 626,
                        "mutability": "mutable",
                        "name": "error",
                        "nameLocation": "7314:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "7301:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_RecoverError_$332",
                          "typeString": "enum ECDSA.RecoverError"
                        },
                        "typeName": {
                          "id": 625,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 624,
                            "name": "RecoverError",
                            "nameLocations": ["7301:12:4"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 332,
                            "src": "7301:12:4"
                          },
                          "referencedDeclaration": 332,
                          "src": "7301:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_RecoverError_$332",
                            "typeString": "enum ECDSA.RecoverError"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 628,
                        "mutability": "mutable",
                        "name": "errorArg",
                        "nameLocation": "7329:8:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 671,
                        "src": "7321:16:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 627,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "7321:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7300:38:4"
                  },
                  "returnParameters": {
                    "id": 630,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7352:0:4"
                  },
                  "scope": 672,
                  "src": "7280:532:4",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "private"
                }
              ],
              "scope": 673,
              "src": "344:7470:4",
              "usedErrors": [335, 340, 345],
              "usedEvents": []
            }
          ],
          "src": "112:7703:4"
        },
        "id": 4
      },
      "contracts/ProfileVerification.sol": {
        "ast": {
          "absolutePath": "contracts/ProfileVerification.sol",
          "exportedSymbols": {
            "Context": [255],
            "ECDSA": [672],
            "IERC20": [225],
            "Ownable": [147],
            "ProfileVerification": [1772],
            "ReentrancyGuard": [324]
          },
          "id": 1773,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 674,
              "literals": ["solidity", "^", "0.8", ".19"],
              "nodeType": "PragmaDirective",
              "src": "33:24:5"
            },
            {
              "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
              "file": "@openzeppelin/contracts/access/Ownable.sol",
              "id": 675,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1773,
              "sourceUnit": 148,
              "src": "61:52:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
              "id": 676,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1773,
              "sourceUnit": 325,
              "src": "115:59:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
              "id": 677,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1773,
              "sourceUnit": 673,
              "src": "176:62:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
              "id": 678,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1773,
              "sourceUnit": 226,
              "src": "240:56:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 680,
                    "name": "Ownable",
                    "nameLocations": ["598:7:5"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 147,
                    "src": "598:7:5"
                  },
                  "id": 681,
                  "nodeType": "InheritanceSpecifier",
                  "src": "598:7:5"
                },
                {
                  "baseName": {
                    "id": 682,
                    "name": "ReentrancyGuard",
                    "nameLocations": ["607:15:5"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 324,
                    "src": "607:15:5"
                  },
                  "id": 683,
                  "nodeType": "InheritanceSpecifier",
                  "src": "607:15:5"
                }
              ],
              "canonicalName": "ProfileVerification",
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 679,
                "nodeType": "StructuredDocumentation",
                "src": "298:266:5",
                "text": " @title ProfileVerification\n @dev Smart contract for profile verification with email whitelist and one-wallet-per-user enforcement\n @notice Implements restrictive wallet creation with email verification and allocation tracking for mainnet migration"
              },
              "fullyImplemented": true,
              "id": 1772,
              "linearizedBaseContracts": [1772, 324, 147, 255],
              "name": "ProfileVerification",
              "nameLocation": "575:19:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "global": false,
                  "id": 686,
                  "libraryName": {
                    "id": 684,
                    "name": "ECDSA",
                    "nameLocations": ["636:5:5"],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 672,
                    "src": "636:5:5"
                  },
                  "nodeType": "UsingForDirective",
                  "src": "630:24:5",
                  "typeName": {
                    "id": 685,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "646:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  }
                },
                {
                  "anonymous": false,
                  "eventSelector": "7fe370a25dc2a72737d82c7b84942440b8d587d9ff700505d16c1abe20ada980",
                  "id": 694,
                  "name": "EmailWhitelisted",
                  "nameLocation": "683:16:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 693,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 688,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "715:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "700:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 687,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "700:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 690,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "738:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "722:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 689,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "722:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 692,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "753:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 694,
                        "src": "745:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 691,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "745:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "699:64:5"
                  },
                  "src": "677:87:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "8514a3441f6e99c8150799dac43140a550e8ae54631e6bb831a24667a64677fb",
                  "id": 702,
                  "name": "EmailRemovedFromWhitelist",
                  "nameLocation": "776:25:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 701,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 696,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "817:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "802:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 695,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "802:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 698,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "admin",
                        "nameLocation": "840:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "824:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 697,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "824:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 700,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "855:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 702,
                        "src": "847:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 699,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "847:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "801:64:5"
                  },
                  "src": "770:96:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "13f42ee0de0ac9236ad9fd1edd06fb6b07f3e2423a2c0b6cb6dc732822fec14c",
                  "id": 712,
                  "name": "UserVerified",
                  "nameLocation": "878:12:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 711,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 704,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "906:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "891:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 703,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "891:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 706,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "929:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "913:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 705,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "913:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 708,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "userId",
                        "nameLocation": "953:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "937:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 707,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "937:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 710,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "969:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 712,
                        "src": "961:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 709,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "961:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "890:89:5"
                  },
                  "src": "872:108:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "6265c4408ac5b7c9b18d37b72535be33a793f145417cbbf3fd5ad07aa2184cc1",
                  "id": 722,
                  "name": "AllocationRecorded",
                  "nameLocation": "992:18:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 721,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 714,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1027:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1011:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 713,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1011:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 716,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1041:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1033:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 715,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1033:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 718,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "allocationId",
                        "nameLocation": "1057:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1049:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 717,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1049:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 720,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1079:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 722,
                        "src": "1071:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 719,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1071:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1010:79:5"
                  },
                  "src": "986:104:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "9923b4306c6c030f2bdfbf156517d5983b87e15b96176da122cd4f2effa4ba7b",
                  "id": 730,
                  "name": "TokensClaimed",
                  "nameLocation": "1102:13:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 729,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 724,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "1132:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1116:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 723,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1116:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 726,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1146:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1138:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 725,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1138:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 728,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1162:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 730,
                        "src": "1154:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 727,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1154:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1115:57:5"
                  },
                  "src": "1096:77:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "90dec1f4ffcc94b09eb3739c1c9d43f199bb65196004104dfb39a3da25c9afd9",
                  "id": 738,
                  "name": "WalletLinked",
                  "nameLocation": "1185:12:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 737,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 732,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "1213:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "1198:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 731,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1198:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 734,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "1236:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "1220:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 733,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1220:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 736,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1252:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 738,
                        "src": "1244:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 735,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1244:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1197:65:5"
                  },
                  "src": "1179:84:5"
                },
                {
                  "anonymous": false,
                  "eventSelector": "22a19fd46d17f548b3dd51bc0e67e4d62ef6dbb21a3a825788a80b1cdcada8f8",
                  "id": 746,
                  "name": "WalletUnlinked",
                  "nameLocation": "1275:14:5",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 745,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 740,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "1305:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "1290:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 739,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "1290:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 742,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "1328:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "1312:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 741,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1312:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 744,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "timestamp",
                        "nameLocation": "1344:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 746,
                        "src": "1336:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 743,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1336:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1289:65:5"
                  },
                  "src": "1269:86:5"
                },
                {
                  "canonicalName": "ProfileVerification.UserVerification",
                  "id": 761,
                  "members": [
                    {
                      "constant": false,
                      "id": 748,
                      "mutability": "mutable",
                      "name": "email",
                      "nameLocation": "1421:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1414:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 747,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1414:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 750,
                      "mutability": "mutable",
                      "name": "wallet",
                      "nameLocation": "1445:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1437:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 749,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1437:7:5",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 752,
                      "mutability": "mutable",
                      "name": "userId",
                      "nameLocation": "1470:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1462:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 751,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1462:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 754,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "1495:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1487:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 753,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1487:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 756,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "1520:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1515:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 755,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1515:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 758,
                      "mutability": "mutable",
                      "name": "hasReceivedTokens",
                      "nameLocation": "1544:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1539:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 757,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1539:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 760,
                      "mutability": "mutable",
                      "name": "tokenAllocation",
                      "nameLocation": "1580:15:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 761,
                      "src": "1572:23:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 759,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1572:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "UserVerification",
                  "nameLocation": "1386:16:5",
                  "nodeType": "StructDefinition",
                  "scope": 1772,
                  "src": "1379:224:5",
                  "visibility": "public"
                },
                {
                  "canonicalName": "ProfileVerification.AllocationConfig",
                  "id": 770,
                  "members": [
                    {
                      "constant": false,
                      "id": 763,
                      "mutability": "mutable",
                      "name": "totalAllocated",
                      "nameLocation": "1654:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "1646:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 762,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1646:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 765,
                      "mutability": "mutable",
                      "name": "maxAllocations",
                      "nameLocation": "1687:14:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "1679:22:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 764,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1679:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 767,
                      "mutability": "mutable",
                      "name": "allocationPerUser",
                      "nameLocation": "1720:17:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "1712:25:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 766,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1712:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 769,
                      "mutability": "mutable",
                      "name": "isActive",
                      "nameLocation": "1753:8:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 770,
                      "src": "1748:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 768,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1748:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "AllocationConfig",
                  "nameLocation": "1618:16:5",
                  "nodeType": "StructDefinition",
                  "scope": 1772,
                  "src": "1611:158:5",
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "59d61e45",
                  "id": 774,
                  "mutability": "mutable",
                  "name": "emailHashWhitelist",
                  "nameLocation": "1833:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "1801:50:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                    "typeString": "mapping(bytes32 => bool)"
                  },
                  "typeName": {
                    "id": 773,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 771,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "1809:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1801:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                      "typeString": "mapping(bytes32 => bool)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 772,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "1820:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "85f3683b",
                  "id": 778,
                  "mutability": "mutable",
                  "name": "walletToEmail",
                  "nameLocation": "1928:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "1894:47:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                    "typeString": "mapping(address => string)"
                  },
                  "typeName": {
                    "id": 777,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 775,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1902:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1894:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                      "typeString": "mapping(address => string)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 776,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1913:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "07bb4ee3",
                  "id": 782,
                  "mutability": "mutable",
                  "name": "emailToWallet",
                  "nameLocation": "1982:13:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "1948:47:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                    "typeString": "mapping(string => address)"
                  },
                  "typeName": {
                    "id": 781,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 779,
                      "name": "string",
                      "nodeType": "ElementaryTypeName",
                      "src": "1956:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage_ptr",
                        "typeString": "string"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1948:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                      "typeString": "mapping(string => address)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 780,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1966:7:5",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "46616268",
                  "id": 787,
                  "mutability": "mutable",
                  "name": "userVerifications",
                  "nameLocation": "2046:17:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2002:61:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                    "typeString": "mapping(address => struct ProfileVerification.UserVerification)"
                  },
                  "typeName": {
                    "id": 786,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 783,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2010:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2002:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                      "typeString": "mapping(address => struct ProfileVerification.UserVerification)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 785,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 784,
                        "name": "UserVerification",
                        "nameLocations": ["2021:16:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 761,
                        "src": "2021:16:5"
                      },
                      "referencedDeclaration": 761,
                      "src": "2021:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                        "typeString": "struct ProfileVerification.UserVerification"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "2b099994",
                  "id": 792,
                  "mutability": "mutable",
                  "name": "userIdToVerification",
                  "nameLocation": "2114:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2070:64:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserVerification_$761_storage_$",
                    "typeString": "mapping(uint256 => struct ProfileVerification.UserVerification)"
                  },
                  "typeName": {
                    "id": 791,
                    "keyName": "",
                    "keyNameLocation": "-1:-1:-1",
                    "keyType": {
                      "id": 788,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "2078:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2070:36:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserVerification_$761_storage_$",
                      "typeString": "mapping(uint256 => struct ProfileVerification.UserVerification)"
                    },
                    "valueName": "",
                    "valueNameLocation": "-1:-1:-1",
                    "valueType": {
                      "id": 790,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 789,
                        "name": "UserVerification",
                        "nameLocations": ["2089:16:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 761,
                        "src": "2089:16:5"
                      },
                      "referencedDeclaration": 761,
                      "src": "2089:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                        "typeString": "struct ProfileVerification.UserVerification"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "21c01deb",
                  "id": 795,
                  "mutability": "mutable",
                  "name": "allocationConfig",
                  "nameLocation": "2171:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2147:40:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                    "typeString": "struct ProfileVerification.AllocationConfig"
                  },
                  "typeName": {
                    "id": 794,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 793,
                      "name": "AllocationConfig",
                      "nameLocations": ["2147:16:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 770,
                      "src": "2147:16:5"
                    },
                    "referencedDeclaration": 770,
                    "src": "2147:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AllocationConfig_$770_storage_ptr",
                      "typeString": "struct ProfileVerification.AllocationConfig"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "34627dea",
                  "id": 797,
                  "mutability": "mutable",
                  "name": "mainnetMigrationContract",
                  "nameLocation": "2209:24:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2194:39:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c6b0ac85",
                  "id": 800,
                  "mutability": "mutable",
                  "name": "healthToken",
                  "nameLocation": "2254:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2240:25:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$225",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 799,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 798,
                      "name": "IERC20",
                      "nameLocations": ["2240:6:5"],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 225,
                      "src": "2240:6:5"
                    },
                    "referencedDeclaration": 225,
                    "src": "2240:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$225",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "0b3d0887",
                  "id": 802,
                  "mutability": "mutable",
                  "name": "totalVerifiedUsers",
                  "nameLocation": "2293:18:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2278:33:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 801,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2278:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "a1e6a255",
                  "id": 804,
                  "mutability": "mutable",
                  "name": "nextUserId",
                  "nameLocation": "2333:10:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2318:25:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2318:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c9dbabe9",
                  "id": 807,
                  "mutability": "mutable",
                  "name": "verificationEnabled",
                  "nameLocation": "2362:19:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1772,
                  "src": "2350:38:5",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 805,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": {
                    "hexValue": "74727565",
                    "id": 806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2384:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 825,
                    "nodeType": "Block",
                    "src": "2470:142:5",
                    "statements": [
                      {
                        "assignments": [812],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 812,
                            "mutability": "mutable",
                            "name": "emailHash",
                            "nameLocation": "2489:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 825,
                            "src": "2481:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 811,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "2481:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 816,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 814,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 809,
                              "src": "2512:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 813,
                            "name": "_hashEmail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "2501:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2501:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2481:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 818,
                                "name": "emailHashWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 774,
                                "src": "2537:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 820,
                              "indexExpression": {
                                "id": 819,
                                "name": "emailHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 812,
                                "src": "2556:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2537:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456d61696c206e6f742077686974656c6973746564",
                              "id": 821,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2568:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_51a5dc8d093320dcfe33c4f3a3bd03c6b9bdae61c40ca4e94ad794f0077c9740",
                                "typeString": "literal_string \"Email not whitelisted\""
                              },
                              "value": "Email not whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_51a5dc8d093320dcfe33c4f3a3bd03c6b9bdae61c40ca4e94ad794f0077c9740",
                                "typeString": "literal_string \"Email not whitelisted\""
                              }
                            ],
                            "id": 817,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "2529:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2529:63:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 823,
                        "nodeType": "ExpressionStatement",
                        "src": "2529:63:5"
                      },
                      {
                        "id": 824,
                        "nodeType": "PlaceholderStatement",
                        "src": "2603:1:5"
                      }
                    ]
                  },
                  "id": 826,
                  "name": "onlyWhitelistedEmail",
                  "nameLocation": "2428:20:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 810,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 809,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "2463:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 826,
                        "src": "2449:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 808,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2449:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2448:21:5"
                  },
                  "src": "2419:193:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 843,
                    "nodeType": "Block",
                    "src": "2861:70:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 838,
                                      "name": "email",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 829,
                                      "src": "2915:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_memory_ptr",
                                        "typeString": "string memory"
                                      }
                                    ],
                                    "id": 837,
                                    "name": "_toLower",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 932,
                                    "src": "2906:8:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                                      "typeString": "function (string memory) pure returns (string memory)"
                                    }
                                  },
                                  "id": 839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2906:15:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                ],
                                "expression": {
                                  "id": 835,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "2889:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 836,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "2893:12:5",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "2889:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 840,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2889:33:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 834,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "2879:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2879:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 833,
                        "id": 842,
                        "nodeType": "Return",
                        "src": "2872:51:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 827,
                    "nodeType": "StructuredDocumentation",
                    "src": "2624:158:5",
                    "text": " @dev Internal function to hash email consistently\n @param email Email address to hash\n @return Hash of the lowercased email"
                  },
                  "id": 844,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_hashEmail",
                  "nameLocation": "2797:10:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 830,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 829,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "2822:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "2808:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 828,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2808:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2807:21:5"
                  },
                  "returnParameters": {
                    "id": 833,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 844,
                        "src": "2852:7:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2852:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2851:9:5"
                  },
                  "scope": 1772,
                  "src": "2788:143:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 931,
                    "nodeType": "Block",
                    "src": "3183:441:5",
                    "statements": [
                      {
                        "assignments": [853],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 853,
                            "mutability": "mutable",
                            "name": "bStr",
                            "nameLocation": "3207:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 931,
                            "src": "3194:17:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 852,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3194:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 858,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 856,
                              "name": "str",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 847,
                              "src": "3220:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 855,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3214:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 854,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3214:5:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3214:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3194:30:5"
                      },
                      {
                        "assignments": [860],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 860,
                            "mutability": "mutable",
                            "name": "bLower",
                            "nameLocation": "3248:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 931,
                            "src": "3235:19:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 859,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3235:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 866,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 863,
                                "name": "bStr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 853,
                                "src": "3267:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3272:6:5",
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3267:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 862,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "3257:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (bytes memory)"
                            },
                            "typeName": {
                              "id": 861,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "3261:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            }
                          },
                          "id": 865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3257:22:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3235:44:5"
                      },
                      {
                        "body": {
                          "id": 924,
                          "nodeType": "Block",
                          "src": "3329:256:5",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 896,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 885,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 880,
                                              "name": "bStr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 853,
                                              "src": "3397:4:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            "id": 882,
                                            "indexExpression": {
                                              "id": 881,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 868,
                                              "src": "3402:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3397:7:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes1",
                                              "typeString": "bytes1"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes1",
                                              "typeString": "bytes1"
                                            }
                                          ],
                                          "id": 879,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3391:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 878,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3391:5:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 883,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3391:14:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": ">=",
                                      "rightExpression": {
                                        "hexValue": "3635",
                                        "id": 884,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3409:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_65_by_1",
                                          "typeString": "int_const 65"
                                        },
                                        "value": "65"
                                      },
                                      "src": "3391:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 886,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3390:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      },
                                      "id": 894,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 889,
                                              "name": "bStr",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 853,
                                              "src": "3423:4:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes_memory_ptr",
                                                "typeString": "bytes memory"
                                              }
                                            },
                                            "id": 891,
                                            "indexExpression": {
                                              "id": 890,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 868,
                                              "src": "3428:1:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3423:7:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes1",
                                              "typeString": "bytes1"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes1",
                                              "typeString": "bytes1"
                                            }
                                          ],
                                          "id": 888,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3417:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_uint8_$",
                                            "typeString": "type(uint8)"
                                          },
                                          "typeName": {
                                            "id": 887,
                                            "name": "uint8",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3417:5:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 892,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3417:14:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<=",
                                      "rightExpression": {
                                        "hexValue": "3930",
                                        "id": 893,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3435:2:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_90_by_1",
                                          "typeString": "int_const 90"
                                        },
                                        "value": "90"
                                      },
                                      "src": "3417:20:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    }
                                  ],
                                  "id": 895,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3416:22:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "3390:48:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 922,
                                "nodeType": "Block",
                                "src": "3520:54:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 920,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 914,
                                          "name": "bLower",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 860,
                                          "src": "3539:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 916,
                                        "indexExpression": {
                                          "id": 915,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 868,
                                          "src": "3546:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "3539:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 917,
                                          "name": "bStr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 853,
                                          "src": "3551:4:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 919,
                                        "indexExpression": {
                                          "id": 918,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 868,
                                          "src": "3556:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "3551:7:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "src": "3539:19:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "id": 921,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3539:19:5"
                                  }
                                ]
                              },
                              "id": 923,
                              "nodeType": "IfStatement",
                              "src": "3386:188:5",
                              "trueBody": {
                                "id": 913,
                                "nodeType": "Block",
                                "src": "3440:74:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 911,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 897,
                                          "name": "bLower",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 860,
                                          "src": "3459:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        "id": 899,
                                        "indexExpression": {
                                          "id": 898,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 868,
                                          "src": "3466:1:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "3459:9:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            },
                                            "id": 909,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "arguments": [
                                                {
                                                  "baseExpression": {
                                                    "id": 904,
                                                    "name": "bStr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 853,
                                                    "src": "3484:4:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_bytes_memory_ptr",
                                                      "typeString": "bytes memory"
                                                    }
                                                  },
                                                  "id": 906,
                                                  "indexExpression": {
                                                    "id": 905,
                                                    "name": "i",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 868,
                                                    "src": "3489:1:5",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_uint256",
                                                      "typeString": "uint256"
                                                    }
                                                  },
                                                  "isConstant": false,
                                                  "isLValue": true,
                                                  "isPure": false,
                                                  "lValueRequested": false,
                                                  "nodeType": "IndexAccess",
                                                  "src": "3484:7:5",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes1",
                                                    "typeString": "bytes1"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_bytes1",
                                                    "typeString": "bytes1"
                                                  }
                                                ],
                                                "id": 903,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3478:5:5",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint8_$",
                                                  "typeString": "type(uint8)"
                                                },
                                                "typeName": {
                                                  "id": 902,
                                                  "name": "uint8",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3478:5:5",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 907,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "nameLocations": [],
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3478:14:5",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "+",
                                            "rightExpression": {
                                              "hexValue": "3332",
                                              "id": 908,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3495:2:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_32_by_1",
                                                "typeString": "int_const 32"
                                              },
                                              "value": "32"
                                            },
                                            "src": "3478:19:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          ],
                                          "id": 901,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3471:6:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes1_$",
                                            "typeString": "type(bytes1)"
                                          },
                                          "typeName": {
                                            "id": 900,
                                            "name": "bytes1",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3471:6:5",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 910,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3471:27:5",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes1",
                                          "typeString": "bytes1"
                                        }
                                      },
                                      "src": "3459:39:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes1",
                                        "typeString": "bytes1"
                                      }
                                    },
                                    "id": 912,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3459:39:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 871,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 868,
                            "src": "3307:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 872,
                              "name": "bStr",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 853,
                              "src": "3311:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3316:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3311:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3307:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 925,
                        "initializationExpression": {
                          "assignments": [868],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 868,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3300:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 925,
                              "src": "3295:6:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 867,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3295:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 870,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3304:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3295:10:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 876,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3324:3:5",
                            "subExpression": {
                              "id": 875,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 868,
                              "src": "3324:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 877,
                          "nodeType": "ExpressionStatement",
                          "src": "3324:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "3290:295:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 928,
                              "name": "bLower",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 860,
                              "src": "3609:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 927,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3602:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                              "typeString": "type(string storage pointer)"
                            },
                            "typeName": {
                              "id": 926,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "3602:6:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3602:14:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        },
                        "functionReturnParameters": 851,
                        "id": 930,
                        "nodeType": "Return",
                        "src": "3595:21:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 845,
                    "nodeType": "StructuredDocumentation",
                    "src": "2943:159:5",
                    "text": " @dev Internal function to convert string to lowercase\n @param str String to convert\n @return Lowercase version of the string"
                  },
                  "id": 932,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_toLower",
                  "nameLocation": "3117:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 848,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 847,
                        "mutability": "mutable",
                        "name": "str",
                        "nameLocation": "3140:3:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "3126:17:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 846,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3126:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3125:19:5"
                  },
                  "returnParameters": {
                    "id": 851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 850,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 932,
                        "src": "3168:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 849,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3168:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3167:15:5"
                  },
                  "scope": 1772,
                  "src": "3108:516:5",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 949,
                    "nodeType": "Block",
                    "src": "3682:98:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 937,
                                  "name": "emailToWallet",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 782,
                                  "src": "3701:13:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                    "typeString": "mapping(string memory => address)"
                                  }
                                },
                                "id": 939,
                                "indexExpression": {
                                  "id": 938,
                                  "name": "email",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 934,
                                  "src": "3715:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3701:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 942,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "3733:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 941,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3725:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 940,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3725:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 943,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3725:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "3701:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456d61696c20616c726561647920696e20757365",
                              "id": 945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3737:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cec53ba2988bed19dddd8443c33545ef2a705798ff897f474df3d63aeab0685b",
                                "typeString": "literal_string \"Email already in use\""
                              },
                              "value": "Email already in use"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cec53ba2988bed19dddd8443c33545ef2a705798ff897f474df3d63aeab0685b",
                                "typeString": "literal_string \"Email already in use\""
                              }
                            ],
                            "id": 936,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3693:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3693:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 947,
                        "nodeType": "ExpressionStatement",
                        "src": "3693:67:5"
                      },
                      {
                        "id": 948,
                        "nodeType": "PlaceholderStatement",
                        "src": "3771:1:5"
                      }
                    ]
                  },
                  "id": 950,
                  "name": "onlyUnusedEmail",
                  "nameLocation": "3645:15:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 935,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 934,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "3675:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 950,
                        "src": "3661:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 933,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3661:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3660:21:5"
                  },
                  "src": "3636:144:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 968,
                    "nodeType": "Block",
                    "src": "3834:105:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 963,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 957,
                                        "name": "walletToEmail",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 778,
                                        "src": "3859:13:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                          "typeString": "mapping(address => string storage ref)"
                                        }
                                      },
                                      "id": 959,
                                      "indexExpression": {
                                        "id": 958,
                                        "name": "wallet",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 952,
                                        "src": "3873:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3859:21:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_string_storage",
                                        "typeString": "string storage ref"
                                      }
                                    ],
                                    "id": 956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3853:5:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 955,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3853:5:5",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 960,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3853:28:5",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_storage_ptr",
                                    "typeString": "bytes storage pointer"
                                  }
                                },
                                "id": 961,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3882:6:5",
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "3853:35:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 962,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3892:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "3853:40:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "57616c6c657420616c726561647920696e20757365",
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3895:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ca8d93cc1c52ed607cd27cd7b5a33f9e9e6a54f2bfb27d48de91fc521b36d7ac",
                                "typeString": "literal_string \"Wallet already in use\""
                              },
                              "value": "Wallet already in use"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ca8d93cc1c52ed607cd27cd7b5a33f9e9e6a54f2bfb27d48de91fc521b36d7ac",
                                "typeString": "literal_string \"Wallet already in use\""
                              }
                            ],
                            "id": 954,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3845:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 965,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3845:74:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 966,
                        "nodeType": "ExpressionStatement",
                        "src": "3845:74:5"
                      },
                      {
                        "id": 967,
                        "nodeType": "PlaceholderStatement",
                        "src": "3930:1:5"
                      }
                    ]
                  },
                  "id": 969,
                  "name": "onlyUnusedWallet",
                  "nameLocation": "3801:16:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 953,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 952,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "3826:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 969,
                        "src": "3818:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 951,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3818:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3817:16:5"
                  },
                  "src": "3792:147:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "3981:87:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 972,
                              "name": "verificationEnabled",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 807,
                              "src": "4000:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "566572696669636174696f6e2069732064697361626c6564",
                              "id": 973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4021:26:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f0db12b76609b1e57cae053ab2c6a952047560e1f7641c32494e13a4a7981fd4",
                                "typeString": "literal_string \"Verification is disabled\""
                              },
                              "value": "Verification is disabled"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f0db12b76609b1e57cae053ab2c6a952047560e1f7641c32494e13a4a7981fd4",
                                "typeString": "literal_string \"Verification is disabled\""
                              }
                            ],
                            "id": 971,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "3992:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3992:56:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 975,
                        "nodeType": "ExpressionStatement",
                        "src": "3992:56:5"
                      },
                      {
                        "id": 976,
                        "nodeType": "PlaceholderStatement",
                        "src": "4059:1:5"
                      }
                    ]
                  },
                  "id": 978,
                  "name": "verificationActive",
                  "nameLocation": "3960:18:5",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 970,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3978:2:5"
                  },
                  "src": "3951:117:5",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 998,
                    "nodeType": "Block",
                    "src": "4110:308:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 985,
                            "name": "allocationConfig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "4191:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                              "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 987,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4258:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              {
                                "hexValue": "35303030",
                                "id": 988,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4290:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                "value": "5000"
                              },
                              {
                                "commonType": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "hexValue": "31303030",
                                  "id": 989,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4328:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000_by_1",
                                    "typeString": "int_const 1000"
                                  },
                                  "value": "1000"
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 990,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4335:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 991,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4339:2:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "4335:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                },
                                "src": "4328:13:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              },
                              {
                                "hexValue": "74727565",
                                "id": 994,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4394:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                {
                                  "typeIdentifier": "t_rational_5000_by_1",
                                  "typeString": "int_const 5000"
                                },
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "id": 986,
                              "name": "AllocationConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 770,
                              "src": "4210:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_AllocationConfig_$770_storage_ptr_$",
                                "typeString": "type(struct ProfileVerification.AllocationConfig storage pointer)"
                              }
                            },
                            "id": 995,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "nameLocations": [
                              "4242:14:5",
                              "4274:14:5",
                              "4309:17:5",
                              "4384:8:5"
                            ],
                            "names": [
                              "totalAllocated",
                              "maxAllocations",
                              "allocationPerUser",
                              "isActive"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "4210:200:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_AllocationConfig_$770_memory_ptr",
                              "typeString": "struct ProfileVerification.AllocationConfig memory"
                            }
                          },
                          "src": "4191:219:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                            "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                          }
                        },
                        "id": 997,
                        "nodeType": "ExpressionStatement",
                        "src": "4191:219:5"
                      }
                    ]
                  },
                  "id": 999,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 981,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4098:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 982,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4102:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4098:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 983,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 980,
                        "name": "Ownable",
                        "nameLocations": ["4090:7:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 147,
                        "src": "4090:7:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4090:19:5"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 979,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4087:2:5"
                  },
                  "returnParameters": {
                    "id": 984,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4110:0:5"
                  },
                  "scope": 1772,
                  "src": "4076:342:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1035,
                    "nodeType": "Block",
                    "src": "4632:250:5",
                    "statements": [
                      {
                        "assignments": [1008],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1008,
                            "mutability": "mutable",
                            "name": "emailHash",
                            "nameLocation": "4651:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1035,
                            "src": "4643:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1007,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4643:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1012,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1010,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "4674:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1009,
                            "name": "_hashEmail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "4663:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1011,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4663:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4643:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "4699:30:5",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 1014,
                                  "name": "emailHashWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 774,
                                  "src": "4700:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 1016,
                                "indexExpression": {
                                  "id": 1015,
                                  "name": "emailHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1008,
                                  "src": "4719:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4700:29:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456d61696c20616c72656164792077686974656c6973746564",
                              "id": 1018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4731:27:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_3ee96f563823b48ab15318af34481b27fd41d459a1b536c3efb82855f51e6fc0",
                                "typeString": "literal_string \"Email already whitelisted\""
                              },
                              "value": "Email already whitelisted"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_3ee96f563823b48ab15318af34481b27fd41d459a1b536c3efb82855f51e6fc0",
                                "typeString": "literal_string \"Email already whitelisted\""
                              }
                            ],
                            "id": 1013,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "4691:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4691:68:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1020,
                        "nodeType": "ExpressionStatement",
                        "src": "4691:68:5"
                      },
                      {
                        "expression": {
                          "id": 1025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1021,
                              "name": "emailHashWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "4770:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 1023,
                            "indexExpression": {
                              "id": 1022,
                              "name": "emailHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1008,
                              "src": "4789:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4770:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4802:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4770:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1026,
                        "nodeType": "ExpressionStatement",
                        "src": "4770:36:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1028,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1002,
                              "src": "4839:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1029,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4846:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1030,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4850:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4846:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1031,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4858:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1032,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4864:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4858:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1027,
                            "name": "EmailWhitelisted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 694,
                            "src": "4822:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 1033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4822:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1034,
                        "nodeType": "EmitStatement",
                        "src": "4817:57:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1000,
                    "nodeType": "StructuredDocumentation",
                    "src": "4426:131:5",
                    "text": " @dev Add email to whitelist (only owner)\n @param email Email address to whitelist (hash will be stored)"
                  },
                  "functionSelector": "372dfc49",
                  "id": 1036,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1005,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1004,
                        "name": "onlyOwner",
                        "nameLocations": ["4622:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "4622:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "4622:9:5"
                    }
                  ],
                  "name": "addEmailToWhitelist",
                  "nameLocation": "4572:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1002,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "4606:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1036,
                        "src": "4592:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1001,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "4592:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4591:21:5"
                  },
                  "returnParameters": {
                    "id": 1006,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4632:0:5"
                  },
                  "scope": 1772,
                  "src": "4563:319:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1088,
                    "nodeType": "Block",
                    "src": "5124:331:5",
                    "statements": [
                      {
                        "body": {
                          "id": 1086,
                          "nodeType": "Block",
                          "src": "5179:269:5",
                          "statements": [
                            {
                              "assignments": [1057],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1057,
                                  "mutability": "mutable",
                                  "name": "emailHash",
                                  "nameLocation": "5202:9:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1086,
                                  "src": "5194:17:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  "typeName": {
                                    "id": 1056,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5194:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1063,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 1059,
                                      "name": "emails",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1040,
                                      "src": "5225:6:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 1061,
                                    "indexExpression": {
                                      "id": 1060,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1046,
                                      "src": "5232:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5225:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 1058,
                                  "name": "_hashEmail",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 844,
                                  "src": "5214:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (string memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 1062,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5214:21:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "5194:41:5"
                            },
                            {
                              "condition": {
                                "id": 1067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "5254:30:5",
                                "subExpression": {
                                  "baseExpression": {
                                    "id": 1064,
                                    "name": "emailHashWhitelist",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 774,
                                    "src": "5255:18:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                      "typeString": "mapping(bytes32 => bool)"
                                    }
                                  },
                                  "id": 1066,
                                  "indexExpression": {
                                    "id": 1065,
                                    "name": "emailHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1057,
                                    "src": "5274:9:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5255:29:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1085,
                              "nodeType": "IfStatement",
                              "src": "5250:187:5",
                              "trueBody": {
                                "id": 1084,
                                "nodeType": "Block",
                                "src": "5286:151:5",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 1072,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 1068,
                                          "name": "emailHashWhitelist",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 774,
                                          "src": "5305:18:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                            "typeString": "mapping(bytes32 => bool)"
                                          }
                                        },
                                        "id": 1070,
                                        "indexExpression": {
                                          "id": 1069,
                                          "name": "emailHash",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1057,
                                          "src": "5324:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "5305:29:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "74727565",
                                        "id": 1071,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "5337:4:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "true"
                                      },
                                      "src": "5305:36:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1073,
                                    "nodeType": "ExpressionStatement",
                                    "src": "5305:36:5"
                                  },
                                  {
                                    "eventCall": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 1075,
                                            "name": "emails",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1040,
                                            "src": "5382:6:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                              "typeString": "string memory[] memory"
                                            }
                                          },
                                          "id": 1077,
                                          "indexExpression": {
                                            "id": 1076,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 1046,
                                            "src": "5389:1:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "5382:9:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 1078,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "5393:3:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 1079,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5397:6:5",
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "5393:10:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 1080,
                                            "name": "block",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -4,
                                            "src": "5405:5:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_block",
                                              "typeString": "block"
                                            }
                                          },
                                          "id": 1081,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberLocation": "5411:9:5",
                                          "memberName": "timestamp",
                                          "nodeType": "MemberAccess",
                                          "src": "5405:15:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_string_memory_ptr",
                                            "typeString": "string memory"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 1074,
                                        "name": "EmailWhitelisted",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 694,
                                        "src": "5365:16:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (string memory,address,uint256)"
                                        }
                                      },
                                      "id": 1082,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "nameLocations": [],
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5365:56:5",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1083,
                                    "nodeType": "EmitStatement",
                                    "src": "5360:61:5"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1052,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1049,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1046,
                            "src": "5155:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 1050,
                              "name": "emails",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1040,
                              "src": "5159:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5166:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "5159:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5155:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1087,
                        "initializationExpression": {
                          "assignments": [1046],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1046,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "5148:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1087,
                              "src": "5140:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1045,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "5140:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1048,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 1047,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5152:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "5140:13:5"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 1054,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "5174:3:5",
                            "subExpression": {
                              "id": 1053,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1046,
                              "src": "5174:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1055,
                          "nodeType": "ExpressionStatement",
                          "src": "5174:3:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "5135:313:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1037,
                    "nodeType": "StructuredDocumentation",
                    "src": "4890:155:5",
                    "text": " @dev Add multiple emails to whitelist (only owner)\n @param emails Array of email addresses to whitelist (hashes will be stored)"
                  },
                  "functionSelector": "018763e9",
                  "id": 1089,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1043,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1042,
                        "name": "onlyOwner",
                        "nameLocations": ["5114:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5114:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5114:9:5"
                    }
                  ],
                  "name": "addEmailsToWhitelist",
                  "nameLocation": "5060:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1041,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1040,
                        "mutability": "mutable",
                        "name": "emails",
                        "nameLocation": "5097:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1089,
                        "src": "5081:22:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 1038,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "5081:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 1039,
                          "nodeType": "ArrayTypeName",
                          "src": "5081:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5080:24:5"
                  },
                  "returnParameters": {
                    "id": 1044,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5124:0:5"
                  },
                  "scope": 1772,
                  "src": "5051:404:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1124,
                    "nodeType": "Block",
                    "src": "5669:256:5",
                    "statements": [
                      {
                        "assignments": [1098],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1098,
                            "mutability": "mutable",
                            "name": "emailHash",
                            "nameLocation": "5688:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1124,
                            "src": "5680:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1097,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "5680:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1102,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1100,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "5711:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1099,
                            "name": "_hashEmail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "5700:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1101,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5700:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5680:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1104,
                                "name": "emailHashWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 774,
                                "src": "5736:18:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 1106,
                              "indexExpression": {
                                "id": 1105,
                                "name": "emailHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1098,
                                "src": "5755:9:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5736:29:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456d61696c206e6f7420696e2077686974656c697374",
                              "id": 1107,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5767:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_afbf1d0b13ec9b764798be94a22e072dfb239d0483237e4237274046b76394a6",
                                "typeString": "literal_string \"Email not in whitelist\""
                              },
                              "value": "Email not in whitelist"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_afbf1d0b13ec9b764798be94a22e072dfb239d0483237e4237274046b76394a6",
                                "typeString": "literal_string \"Email not in whitelist\""
                              }
                            ],
                            "id": 1103,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "5728:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5728:64:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1109,
                        "nodeType": "ExpressionStatement",
                        "src": "5728:64:5"
                      },
                      {
                        "expression": {
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1110,
                              "name": "emailHashWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 774,
                              "src": "5803:18:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 1112,
                            "indexExpression": {
                              "id": 1111,
                              "name": "emailHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1098,
                              "src": "5822:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5803:29:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5835:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5803:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1115,
                        "nodeType": "ExpressionStatement",
                        "src": "5803:37:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1117,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1092,
                              "src": "5882:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1118,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5889:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1119,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5893:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5889:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1120,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "5901:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5907:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "5901:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1116,
                            "name": "EmailRemovedFromWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 702,
                            "src": "5856:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 1122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5856:61:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1123,
                        "nodeType": "EmitStatement",
                        "src": "5851:66:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1090,
                    "nodeType": "StructuredDocumentation",
                    "src": "5463:126:5",
                    "text": " @dev Remove email from whitelist (only owner)\n @param email Email address to remove from whitelist"
                  },
                  "functionSelector": "efa4ae00",
                  "id": 1125,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1095,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1094,
                        "name": "onlyOwner",
                        "nameLocations": ["5659:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "5659:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "5659:9:5"
                    }
                  ],
                  "name": "removeEmailFromWhitelist",
                  "nameLocation": "5604:24:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1093,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1092,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "5643:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1125,
                        "src": "5629:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1091,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5629:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5628:21:5"
                  },
                  "returnParameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5669:0:5"
                  },
                  "scope": 1772,
                  "src": "5595:330:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1190,
                    "nodeType": "Block",
                    "src": "6414:439:5",
                    "statements": [
                      {
                        "assignments": [1148],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1148,
                            "mutability": "mutable",
                            "name": "messageHash",
                            "nameLocation": "6462:11:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1190,
                            "src": "6454:19:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1147,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6454:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1157,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1152,
                                  "name": "email",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1128,
                                  "src": "6503:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 1153,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "6510:3:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 1154,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6514:6:5",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "6510:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string memory"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 1150,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6486:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1151,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6490:12:5",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6486:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1155,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6486:35:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1149,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6476:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6476:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6454:68:5"
                      },
                      {
                        "assignments": [1159],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1159,
                            "mutability": "mutable",
                            "name": "ethSignedMessageHash",
                            "nameLocation": "6541:20:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1190,
                            "src": "6533:28:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1158,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "6533:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1167,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                  "id": 1163,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "6591:34:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  "value": "\u0019Ethereum Signed Message:\n32"
                                },
                                {
                                  "id": 1164,
                                  "name": "messageHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1148,
                                  "src": "6627:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                    "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 1161,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "6574:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1162,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "6578:12:5",
                                "memberName": "encodePacked",
                                "nodeType": "MemberAccess",
                                "src": "6574:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6574:65:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 1160,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "6564:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6564:76:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6533:107:5"
                      },
                      {
                        "assignments": [1169],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1169,
                            "mutability": "mutable",
                            "name": "signer",
                            "nameLocation": "6659:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1190,
                            "src": "6651:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1168,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6651:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1175,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1172,
                              "name": "ethSignedMessageHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1159,
                              "src": "6682:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 1173,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "6704:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1170,
                              "name": "ECDSA",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 672,
                              "src": "6668:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ECDSA_$672_$",
                                "typeString": "type(library ECDSA)"
                              }
                            },
                            "id": 1171,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6674:7:5",
                            "memberName": "recover",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 428,
                            "src": "6668:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (bytes32,bytes memory) pure returns (address)"
                            }
                          },
                          "id": 1174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6668:46:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6651:63:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1177,
                                "name": "signer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1169,
                                "src": "6743:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 1178,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "6753:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1179,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6757:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "6753:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "6743:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964207369676e6174757265",
                              "id": 1181,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6765:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                                "typeString": "literal_string \"Invalid signature\""
                              },
                              "value": "Invalid signature"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7",
                                "typeString": "literal_string \"Invalid signature\""
                              }
                            ],
                            "id": 1176,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "6735:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1182,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6735:50:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1183,
                        "nodeType": "ExpressionStatement",
                        "src": "6735:50:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1185,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1128,
                              "src": "6827:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6834:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6838:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6834:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1184,
                            "name": "_processVerification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "6806:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 1188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6806:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1189,
                        "nodeType": "ExpressionStatement",
                        "src": "6806:39:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1126,
                    "nodeType": "StructuredDocumentation",
                    "src": "5933:207:5",
                    "text": " @dev Verify user profile with email and wallet (with signature verification)\n @param email Whitelisted email address\n @param signature Signature proving ownership of wallet"
                  },
                  "functionSelector": "739709b6",
                  "id": 1191,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1133,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1132,
                        "name": "nonReentrant",
                        "nameLocations": ["6258:12:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 288,
                        "src": "6258:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6258:12:5"
                    },
                    {
                      "id": 1135,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1134,
                        "name": "verificationActive",
                        "nameLocations": ["6281:18:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 978,
                        "src": "6281:18:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6281:18:5"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1137,
                          "name": "email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "6331:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1138,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1136,
                        "name": "onlyWhitelistedEmail",
                        "nameLocations": ["6310:20:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 826,
                        "src": "6310:20:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6310:27:5"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1140,
                          "name": "email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "6363:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1141,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1139,
                        "name": "onlyUnusedEmail",
                        "nameLocations": ["6347:15:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "6347:15:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6347:22:5"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1143,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6396:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6400:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6396:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1145,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1142,
                        "name": "onlyUnusedWallet",
                        "nameLocations": ["6379:16:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 969,
                        "src": "6379:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6379:28:5"
                    }
                  ],
                  "name": "verifyProfile",
                  "nameLocation": "6155:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1131,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1128,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "6193:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1191,
                        "src": "6179:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1127,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6179:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1130,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "6222:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1191,
                        "src": "6209:22:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1129,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "6209:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6168:70:5"
                  },
                  "returnParameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6414:0:5"
                  },
                  "scope": 1772,
                  "src": "6146:707:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1214,
                    "nodeType": "Block",
                    "src": "7243:215:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1209,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1194,
                              "src": "7432:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 1210,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7439:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7443:6:5",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "7439:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1208,
                            "name": "_processVerification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1337,
                            "src": "7411:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
                              "typeString": "function (string memory,address)"
                            }
                          },
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7411:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1213,
                        "nodeType": "ExpressionStatement",
                        "src": "7411:39:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1192,
                    "nodeType": "StructuredDocumentation",
                    "src": "6861:172:5",
                    "text": " @dev Verify user profile for ZKsync SSO (without signature verification)\n @param email Email address (whitelist check handled by admin database)"
                  },
                  "functionSelector": "3793438d",
                  "id": 1215,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1197,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1196,
                        "name": "nonReentrant",
                        "nameLocations": ["7124:12:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 288,
                        "src": "7124:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7124:12:5"
                    },
                    {
                      "id": 1199,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1198,
                        "name": "verificationActive",
                        "nameLocations": ["7147:18:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 978,
                        "src": "7147:18:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7147:18:5"
                    },
                    {
                      "arguments": [
                        {
                          "id": 1201,
                          "name": "email",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1194,
                          "src": "7192:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "id": 1202,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1200,
                        "name": "onlyUnusedEmail",
                        "nameLocations": ["7176:15:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 950,
                        "src": "7176:15:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7176:22:5"
                    },
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1204,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7225:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "7229:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7225:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1206,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1203,
                        "name": "onlyUnusedWallet",
                        "nameLocations": ["7208:16:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 969,
                        "src": "7208:16:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7208:28:5"
                    }
                  ],
                  "name": "verifyProfileZKsync",
                  "nameLocation": "7048:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1195,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1194,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "7092:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1215,
                        "src": "7078:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1193,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7078:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7067:37:5"
                  },
                  "returnParameters": {
                    "id": 1207,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7243:0:5"
                  },
                  "scope": 1772,
                  "src": "7039:419:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1336,
                    "nodeType": "Block",
                    "src": "7704:1582:5",
                    "statements": [
                      {
                        "assignments": [1224],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1224,
                            "mutability": "mutable",
                            "name": "userId",
                            "nameLocation": "7770:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1336,
                            "src": "7762:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1223,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7762:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1227,
                        "initialValue": {
                          "id": 1226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7779:12:5",
                          "subExpression": {
                            "id": 1225,
                            "name": "nextUserId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 804,
                            "src": "7779:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7762:29:5"
                      },
                      {
                        "assignments": [1230],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1230,
                            "mutability": "mutable",
                            "name": "verification",
                            "nameLocation": "7826:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1336,
                            "src": "7802:36:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                              "typeString": "struct ProfileVerification.UserVerification"
                            },
                            "typeName": {
                              "id": 1229,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1228,
                                "name": "UserVerification",
                                "nameLocations": ["7802:16:5"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 761,
                                "src": "7802:16:5"
                              },
                              "referencedDeclaration": 761,
                              "src": "7802:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                "typeString": "struct ProfileVerification.UserVerification"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1241,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1232,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "7880:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1233,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "7908:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1234,
                              "name": "userId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1224,
                              "src": "7937:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1235,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "7969:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1236,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "7975:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "7969:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 1237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8009:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 1238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8047:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "hexValue": "30",
                              "id": 1239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8084:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1231,
                            "name": "UserVerification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 761,
                            "src": "7841:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_UserVerification_$761_storage_ptr_$",
                              "typeString": "type(struct ProfileVerification.UserVerification storage pointer)"
                            }
                          },
                          "id": 1240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "nameLocations": [
                            "7873:5:5",
                            "7900:6:5",
                            "7929:6:5",
                            "7958:9:5",
                            "7999:8:5",
                            "8028:17:5",
                            "8067:15:5"
                          ],
                          "names": [
                            "email",
                            "wallet",
                            "userId",
                            "timestamp",
                            "isActive",
                            "hasReceivedTokens",
                            "tokenAllocation"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "7841:256:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                            "typeString": "struct ProfileVerification.UserVerification memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7802:295:5"
                      },
                      {
                        "expression": {
                          "id": 1246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1242,
                              "name": "userVerifications",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "8145:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                              }
                            },
                            "id": 1244,
                            "indexExpression": {
                              "id": 1243,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "8163:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8145:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                              "typeString": "struct ProfileVerification.UserVerification storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1245,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "8173:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                              "typeString": "struct ProfileVerification.UserVerification memory"
                            }
                          },
                          "src": "8145:40:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "id": 1247,
                        "nodeType": "ExpressionStatement",
                        "src": "8145:40:5"
                      },
                      {
                        "expression": {
                          "id": 1252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1248,
                              "name": "userIdToVerification",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "8196:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserVerification_$761_storage_$",
                                "typeString": "mapping(uint256 => struct ProfileVerification.UserVerification storage ref)"
                              }
                            },
                            "id": 1250,
                            "indexExpression": {
                              "id": 1249,
                              "name": "userId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1224,
                              "src": "8217:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8196:28:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                              "typeString": "struct ProfileVerification.UserVerification storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1251,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1230,
                            "src": "8227:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                              "typeString": "struct ProfileVerification.UserVerification memory"
                            }
                          },
                          "src": "8196:43:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "id": 1253,
                        "nodeType": "ExpressionStatement",
                        "src": "8196:43:5"
                      },
                      {
                        "expression": {
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1254,
                              "name": "walletToEmail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "8250:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 1256,
                            "indexExpression": {
                              "id": 1255,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "8264:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8250:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1257,
                            "name": "email",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1218,
                            "src": "8274:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "8250:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1259,
                        "nodeType": "ExpressionStatement",
                        "src": "8250:29:5"
                      },
                      {
                        "expression": {
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1260,
                              "name": "emailToWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "8290:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1262,
                            "indexExpression": {
                              "id": 1261,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "8304:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8290:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1263,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1220,
                            "src": "8313:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8290:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1265,
                        "nodeType": "ExpressionStatement",
                        "src": "8290:29:5"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1266,
                              "name": "allocationConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "8420:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                              }
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "8437:8:5",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 769,
                            "src": "8420:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1268,
                                "name": "allocationConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "8463:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                  "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                                }
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8480:14:5",
                              "memberName": "totalAllocated",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 763,
                              "src": "8463:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 1270,
                                "name": "allocationConfig",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 795,
                                "src": "8497:16:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                  "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                                }
                              },
                              "id": 1271,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "8514:14:5",
                              "memberName": "maxAllocations",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 765,
                              "src": "8497:31:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8463:65:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "8420:108:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1317,
                        "nodeType": "IfStatement",
                        "src": "8416:684:5",
                        "trueBody": {
                          "id": 1316,
                          "nodeType": "Block",
                          "src": "8530:570:5",
                          "statements": [
                            {
                              "assignments": [1275],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 1275,
                                  "mutability": "mutable",
                                  "name": "allocationAmount",
                                  "nameLocation": "8567:16:5",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1316,
                                  "src": "8559:24:5",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 1274,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8559:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 1278,
                              "initialValue": {
                                "expression": {
                                  "id": 1276,
                                  "name": "allocationConfig",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 795,
                                  "src": "8586:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                    "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                                  }
                                },
                                "id": 1277,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "8603:17:5",
                                "memberName": "allocationPerUser",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 767,
                                "src": "8586:34:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "8559:61:5"
                            },
                            {
                              "expression": {
                                "id": 1283,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1279,
                                    "name": "verification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1230,
                                    "src": "8635:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                                      "typeString": "struct ProfileVerification.UserVerification memory"
                                    }
                                  },
                                  "id": 1281,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8648:15:5",
                                  "memberName": "tokenAllocation",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 760,
                                  "src": "8635:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1282,
                                  "name": "allocationAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1275,
                                  "src": "8666:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8635:47:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1284,
                              "nodeType": "ExpressionStatement",
                              "src": "8635:47:5"
                            },
                            {
                              "expression": {
                                "id": 1289,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "id": 1285,
                                    "name": "verification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1230,
                                    "src": "8697:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                                      "typeString": "struct ProfileVerification.UserVerification memory"
                                    }
                                  },
                                  "id": 1287,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8710:17:5",
                                  "memberName": "hasReceivedTokens",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 758,
                                  "src": "8697:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 1288,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8730:5:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "8697:38:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1290,
                              "nodeType": "ExpressionStatement",
                              "src": "8697:38:5"
                            },
                            {
                              "expression": {
                                "id": 1294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "8839:33:5",
                                "subExpression": {
                                  "expression": {
                                    "id": 1291,
                                    "name": "allocationConfig",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 795,
                                    "src": "8839:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                      "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                                    }
                                  },
                                  "id": 1293,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberLocation": "8856:14:5",
                                  "memberName": "totalAllocated",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 763,
                                  "src": "8839:31:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1295,
                              "nodeType": "ExpressionStatement",
                              "src": "8839:33:5"
                            },
                            {
                              "expression": {
                                "id": 1300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1296,
                                    "name": "userVerifications",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 787,
                                    "src": "8887:17:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                      "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                                    }
                                  },
                                  "id": 1298,
                                  "indexExpression": {
                                    "id": 1297,
                                    "name": "wallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1220,
                                    "src": "8905:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8887:25:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                    "typeString": "struct ProfileVerification.UserVerification storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1299,
                                  "name": "verification",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "8915:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                                    "typeString": "struct ProfileVerification.UserVerification memory"
                                  }
                                },
                                "src": "8887:40:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                  "typeString": "struct ProfileVerification.UserVerification storage ref"
                                }
                              },
                              "id": 1301,
                              "nodeType": "ExpressionStatement",
                              "src": "8887:40:5"
                            },
                            {
                              "expression": {
                                "id": 1306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 1302,
                                    "name": "userIdToVerification",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 792,
                                    "src": "8942:20:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserVerification_$761_storage_$",
                                      "typeString": "mapping(uint256 => struct ProfileVerification.UserVerification storage ref)"
                                    }
                                  },
                                  "id": 1304,
                                  "indexExpression": {
                                    "id": 1303,
                                    "name": "userId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1224,
                                    "src": "8963:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "8942:28:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                    "typeString": "struct ProfileVerification.UserVerification storage ref"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1305,
                                  "name": "verification",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1230,
                                  "src": "8973:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                                    "typeString": "struct ProfileVerification.UserVerification memory"
                                  }
                                },
                                "src": "8942:43:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                  "typeString": "struct ProfileVerification.UserVerification storage ref"
                                }
                              },
                              "id": 1307,
                              "nodeType": "ExpressionStatement",
                              "src": "8942:43:5"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1309,
                                    "name": "wallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1220,
                                    "src": "9038:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1310,
                                    "name": "allocationAmount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1275,
                                    "src": "9046:16:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1311,
                                    "name": "userId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1224,
                                    "src": "9064:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "expression": {
                                      "id": 1312,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "9072:5:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 1313,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "9078:9:5",
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "9072:15:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1308,
                                  "name": "AllocationRecorded",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 722,
                                  "src": "9019:18:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256,uint256,uint256)"
                                  }
                                },
                                "id": 1314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9019:69:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1315,
                              "nodeType": "EmitStatement",
                              "src": "9014:74:5"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "9120:20:5",
                          "subExpression": {
                            "id": 1318,
                            "name": "totalVerifiedUsers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 802,
                            "src": "9120:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1320,
                        "nodeType": "ExpressionStatement",
                        "src": "9120:20:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1322,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "9179:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1323,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "9186:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1324,
                              "name": "userId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1224,
                              "src": "9194:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1325,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9202:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1326,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9208:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9202:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1321,
                            "name": "UserVerified",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 712,
                            "src": "9166:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256,uint256)"
                            }
                          },
                          "id": 1327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9166:52:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1328,
                        "nodeType": "EmitStatement",
                        "src": "9161:57:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1330,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1218,
                              "src": "9247:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1331,
                              "name": "wallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1220,
                              "src": "9254:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1332,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "9262:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1333,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9268:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "9262:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1329,
                            "name": "WalletLinked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 738,
                            "src": "9234:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 1334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9234:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1335,
                        "nodeType": "EmitStatement",
                        "src": "9229:49:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1216,
                    "nodeType": "StructuredDocumentation",
                    "src": "7468:154:5",
                    "text": " @dev Internal function to process verification (shared logic)\n @param email Email address\n @param wallet Wallet address"
                  },
                  "id": 1337,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_processVerification",
                  "nameLocation": "7637:20:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1218,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "7672:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "7658:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1217,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "7658:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1220,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "7687:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1337,
                        "src": "7679:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1219,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7679:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7657:37:5"
                  },
                  "returnParameters": {
                    "id": 1222,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7704:0:5"
                  },
                  "scope": 1772,
                  "src": "7628:1658:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1360,
                    "nodeType": "Block",
                    "src": "9527:106:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 1345,
                                "name": "userVerifications",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 787,
                                "src": "9545:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                  "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                                }
                              },
                              "id": 1347,
                              "indexExpression": {
                                "id": 1346,
                                "name": "user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1340,
                                "src": "9563:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9545:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                "typeString": "struct ProfileVerification.UserVerification storage ref"
                              }
                            },
                            "id": 1348,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9569:8:5",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 756,
                            "src": "9545:32:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 1357,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1349,
                                  "name": "userVerifications",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "9581:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                    "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                                  }
                                },
                                "id": 1351,
                                "indexExpression": {
                                  "id": 1350,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1340,
                                  "src": "9599:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "9581:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                  "typeString": "struct ProfileVerification.UserVerification storage ref"
                                }
                              },
                              "id": 1352,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "9605:6:5",
                              "memberName": "wallet",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 750,
                              "src": "9581:30:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1355,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9623:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1354,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9615:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1353,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9615:7:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1356,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9615:10:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "9581:44:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "9545:80:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1344,
                        "id": 1359,
                        "nodeType": "Return",
                        "src": "9538:87:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1338,
                    "nodeType": "StructuredDocumentation",
                    "src": "9294:149:5",
                    "text": " @dev Check if user is verified\n @param user User address to check\n @return isVerified Whether the user is verified"
                  },
                  "functionSelector": "ace417e0",
                  "id": 1361,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isUserVerified",
                  "nameLocation": "9458:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1341,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1340,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "9481:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "9473:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1339,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9473:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9472:14:5"
                  },
                  "returnParameters": {
                    "id": 1344,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1343,
                        "mutability": "mutable",
                        "name": "isVerified",
                        "nameLocation": "9515:10:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1361,
                        "src": "9510:15:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1342,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9510:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9509:17:5"
                  },
                  "scope": 1772,
                  "src": "9449:184:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1374,
                    "nodeType": "Block",
                    "src": "9888:49:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1370,
                            "name": "userVerifications",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "9906:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                              "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                            }
                          },
                          "id": 1372,
                          "indexExpression": {
                            "id": 1371,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1364,
                            "src": "9924:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9906:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "functionReturnParameters": 1369,
                        "id": 1373,
                        "nodeType": "Return",
                        "src": "9899:30:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1362,
                    "nodeType": "StructuredDocumentation",
                    "src": "9641:137:5",
                    "text": " @dev Get user verification data\n @param user User address\n @return verification User verification data"
                  },
                  "functionSelector": "b36c6d1f",
                  "id": 1375,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getUserVerification",
                  "nameLocation": "9793:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1365,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1364,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "9821:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "9813:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1363,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9813:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9812:14:5"
                  },
                  "returnParameters": {
                    "id": 1369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1368,
                        "mutability": "mutable",
                        "name": "verification",
                        "nameLocation": "9874:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1375,
                        "src": "9850:36:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                          "typeString": "struct ProfileVerification.UserVerification"
                        },
                        "typeName": {
                          "id": 1367,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1366,
                            "name": "UserVerification",
                            "nameLocations": ["9850:16:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 761,
                            "src": "9850:16:5"
                          },
                          "referencedDeclaration": 761,
                          "src": "9850:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                            "typeString": "struct ProfileVerification.UserVerification"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9849:38:5"
                  },
                  "scope": 1772,
                  "src": "9784:153:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1404,
                    "nodeType": "Block",
                    "src": "10208:161:5",
                    "statements": [
                      {
                        "assignments": [1385],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1385,
                            "mutability": "mutable",
                            "name": "wallet",
                            "nameLocation": "10227:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1404,
                            "src": "10219:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1384,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10219:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1389,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1386,
                            "name": "emailToWallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 782,
                            "src": "10236:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                              "typeString": "mapping(string memory => address)"
                            }
                          },
                          "id": 1388,
                          "indexExpression": {
                            "id": 1387,
                            "name": "email",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1378,
                            "src": "10250:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10236:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10219:37:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1396,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1391,
                                "name": "wallet",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1385,
                                "src": "10275:6:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1394,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10293:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10285:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1392,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10285:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10285:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10275:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "456d61696c206e6f74207665726966696564",
                              "id": 1397,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10297:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fae6115c28d80da154a08639f8e56a90d7b6412f7bcd8962b78156e848495a68",
                                "typeString": "literal_string \"Email not verified\""
                              },
                              "value": "Email not verified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fae6115c28d80da154a08639f8e56a90d7b6412f7bcd8962b78156e848495a68",
                                "typeString": "literal_string \"Email not verified\""
                              }
                            ],
                            "id": 1390,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "10267:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10267:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1399,
                        "nodeType": "ExpressionStatement",
                        "src": "10267:51:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1400,
                            "name": "userVerifications",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "10336:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                              "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                            }
                          },
                          "id": 1402,
                          "indexExpression": {
                            "id": 1401,
                            "name": "wallet",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "10354:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10336:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "functionReturnParameters": 1383,
                        "id": 1403,
                        "nodeType": "Return",
                        "src": "10329:32:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1376,
                    "nodeType": "StructuredDocumentation",
                    "src": "9945:143:5",
                    "text": " @dev Get verification data by email\n @param email Email address\n @return verification User verification data"
                  },
                  "functionSelector": "21918829",
                  "id": 1405,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getVerificationByEmail",
                  "nameLocation": "10103:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1379,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1378,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "10140:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1405,
                        "src": "10126:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1377,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10126:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10125:21:5"
                  },
                  "returnParameters": {
                    "id": 1383,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1382,
                        "mutability": "mutable",
                        "name": "verification",
                        "nameLocation": "10194:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1405,
                        "src": "10170:36:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_UserVerification_$761_memory_ptr",
                          "typeString": "struct ProfileVerification.UserVerification"
                        },
                        "typeName": {
                          "id": 1381,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1380,
                            "name": "UserVerification",
                            "nameLocations": ["10170:16:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 761,
                            "src": "10170:16:5"
                          },
                          "referencedDeclaration": 761,
                          "src": "10170:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                            "typeString": "struct ProfileVerification.UserVerification"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10169:38:5"
                  },
                  "scope": 1772,
                  "src": "10094:275:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1423,
                    "nodeType": "Block",
                    "src": "10651:103:5",
                    "statements": [
                      {
                        "assignments": [1414],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1414,
                            "mutability": "mutable",
                            "name": "emailHash",
                            "nameLocation": "10670:9:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1423,
                            "src": "10662:17:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 1413,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "10662:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1418,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1416,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1408,
                              "src": "10693:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 1415,
                            "name": "_hashEmail",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 844,
                            "src": "10682:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (string memory) pure returns (bytes32)"
                            }
                          },
                          "id": 1417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10682:17:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10662:37:5"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1419,
                            "name": "emailHashWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "10717:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1421,
                          "indexExpression": {
                            "id": 1420,
                            "name": "emailHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1414,
                            "src": "10736:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10717:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1412,
                        "id": 1422,
                        "nodeType": "Return",
                        "src": "10710:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1406,
                    "nodeType": "StructuredDocumentation",
                    "src": "10377:176:5",
                    "text": " @dev Check if email is whitelisted (checks hash)\n @param email Email address to check\n @return isWhitelisted Whether the email is whitelisted"
                  },
                  "functionSelector": "85db9d2c",
                  "id": 1424,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmailWhitelisted",
                  "nameLocation": "10568:18:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1409,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1408,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "10601:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "10587:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1407,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "10587:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10586:21:5"
                  },
                  "returnParameters": {
                    "id": 1412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1411,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "10636:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1424,
                        "src": "10631:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1410,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "10631:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10630:20:5"
                  },
                  "scope": 1772,
                  "src": "10559:195:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1436,
                    "nodeType": "Block",
                    "src": "11064:55:5",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1432,
                            "name": "emailHashWhitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 774,
                            "src": "11082:18:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 1434,
                          "indexExpression": {
                            "id": 1433,
                            "name": "emailHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1427,
                            "src": "11101:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11082:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1431,
                        "id": 1435,
                        "nodeType": "Return",
                        "src": "11075:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1425,
                    "nodeType": "StructuredDocumentation",
                    "src": "10766:198:5",
                    "text": " @dev Check if email hash is whitelisted (for frontend use)\n @param emailHash Hash of the email address\n @return isWhitelisted Whether the email hash is whitelisted"
                  },
                  "functionSelector": "e792b124",
                  "id": 1437,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmailHashWhitelisted",
                  "nameLocation": "10979:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1428,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1427,
                        "mutability": "mutable",
                        "name": "emailHash",
                        "nameLocation": "11010:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1437,
                        "src": "11002:17:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1426,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "11002:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11001:19:5"
                  },
                  "returnParameters": {
                    "id": 1431,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1430,
                        "mutability": "mutable",
                        "name": "isWhitelisted",
                        "nameLocation": "11049:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1437,
                        "src": "11044:18:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1429,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11044:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11043:20:5"
                  },
                  "scope": 1772,
                  "src": "10970:149:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1454,
                    "nodeType": "Block",
                    "src": "11375:60:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1445,
                              "name": "emailToWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "11393:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1447,
                            "indexExpression": {
                              "id": 1446,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1440,
                              "src": "11407:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11393:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1450,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11425:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1449,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11417:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1448,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11417:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11417:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "11393:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1444,
                        "id": 1453,
                        "nodeType": "Return",
                        "src": "11386:41:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1438,
                    "nodeType": "StructuredDocumentation",
                    "src": "11127:162:5",
                    "text": " @dev Check if email is already in use\n @param email Email address to check\n @return isInUse Whether the email is already in use"
                  },
                  "functionSelector": "9d139d7d",
                  "id": 1455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isEmailInUse",
                  "nameLocation": "11304:12:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1440,
                        "mutability": "mutable",
                        "name": "email",
                        "nameLocation": "11331:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1455,
                        "src": "11317:19:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1439,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "11317:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11316:21:5"
                  },
                  "returnParameters": {
                    "id": 1444,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1443,
                        "mutability": "mutable",
                        "name": "isInUse",
                        "nameLocation": "11366:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1455,
                        "src": "11361:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1442,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11361:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11360:14:5"
                  },
                  "scope": 1772,
                  "src": "11295:140:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1473,
                    "nodeType": "Block",
                    "src": "11691:65:5",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 1465,
                                    "name": "walletToEmail",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 778,
                                    "src": "11715:13:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                      "typeString": "mapping(address => string storage ref)"
                                    }
                                  },
                                  "id": 1467,
                                  "indexExpression": {
                                    "id": 1466,
                                    "name": "wallet",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1458,
                                    "src": "11729:6:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11715:21:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_string_storage",
                                    "typeString": "string storage ref"
                                  }
                                ],
                                "id": 1464,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11709:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 1463,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11709:5:5",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1468,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11709:28:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes storage pointer"
                              }
                            },
                            "id": 1469,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "11738:6:5",
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "11709:35:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1470,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11747:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11709:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 1462,
                        "id": 1472,
                        "nodeType": "Return",
                        "src": "11702:46:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1456,
                    "nodeType": "StructuredDocumentation",
                    "src": "11443:166:5",
                    "text": " @dev Check if wallet is already in use\n @param wallet Wallet address to check\n @return isInUse Whether the wallet is already in use"
                  },
                  "functionSelector": "bf9c1b1b",
                  "id": 1474,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "isWalletInUse",
                  "nameLocation": "11624:13:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1459,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1458,
                        "mutability": "mutable",
                        "name": "wallet",
                        "nameLocation": "11646:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1474,
                        "src": "11638:14:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1457,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11638:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11637:16:5"
                  },
                  "returnParameters": {
                    "id": 1462,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1461,
                        "mutability": "mutable",
                        "name": "isInUse",
                        "nameLocation": "11682:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1474,
                        "src": "11677:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1460,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "11677:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11676:14:5"
                  },
                  "scope": 1772,
                  "src": "11615:141:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1483,
                    "nodeType": "Block",
                    "src": "11970:42:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1481,
                          "name": "allocationConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 795,
                          "src": "11988:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                            "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                          }
                        },
                        "functionReturnParameters": 1480,
                        "id": 1482,
                        "nodeType": "Return",
                        "src": "11981:23:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1475,
                    "nodeType": "StructuredDocumentation",
                    "src": "11764:114:5",
                    "text": " @dev Get allocation configuration status\n @return config Allocation configuration data"
                  },
                  "functionSelector": "0b236953",
                  "id": 1484,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getAllocationConfig",
                  "nameLocation": "11893:19:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1476,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11912:2:5"
                  },
                  "returnParameters": {
                    "id": 1480,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1479,
                        "mutability": "mutable",
                        "name": "config",
                        "nameLocation": "11962:6:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1484,
                        "src": "11938:30:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AllocationConfig_$770_memory_ptr",
                          "typeString": "struct ProfileVerification.AllocationConfig"
                        },
                        "typeName": {
                          "id": 1478,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 1477,
                            "name": "AllocationConfig",
                            "nameLocations": ["11938:16:5"],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 770,
                            "src": "11938:16:5"
                          },
                          "referencedDeclaration": 770,
                          "src": "11938:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AllocationConfig_$770_storage_ptr",
                            "typeString": "struct ProfileVerification.AllocationConfig"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11937:32:5"
                  },
                  "scope": 1772,
                  "src": "11884:128:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1492,
                    "nodeType": "Block",
                    "src": "12206:44:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1490,
                          "name": "totalVerifiedUsers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 802,
                          "src": "12224:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1489,
                        "id": 1491,
                        "nodeType": "Return",
                        "src": "12217:25:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1485,
                    "nodeType": "StructuredDocumentation",
                    "src": "12020:109:5",
                    "text": " @dev Get total verified users count\n @return count Total number of verified users"
                  },
                  "functionSelector": "8c1f3a8c",
                  "id": 1493,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getTotalVerifiedUsers",
                  "nameLocation": "12144:21:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1486,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12165:2:5"
                  },
                  "returnParameters": {
                    "id": 1489,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1488,
                        "mutability": "mutable",
                        "name": "count",
                        "nameLocation": "12199:5:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1493,
                        "src": "12191:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1487,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12191:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12190:15:5"
                  },
                  "scope": 1772,
                  "src": "12135:115:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1523,
                    "nodeType": "Block",
                    "src": "12680:179:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1505,
                              "name": "allocationConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "12691:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                              }
                            },
                            "id": 1507,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12708:14:5",
                            "memberName": "maxAllocations",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 765,
                            "src": "12691:31:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1508,
                            "name": "maxAllocations",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1496,
                            "src": "12725:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12691:48:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1510,
                        "nodeType": "ExpressionStatement",
                        "src": "12691:48:5"
                      },
                      {
                        "expression": {
                          "id": 1515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1511,
                              "name": "allocationConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "12750:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                              }
                            },
                            "id": 1513,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12767:17:5",
                            "memberName": "allocationPerUser",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 767,
                            "src": "12750:34:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1514,
                            "name": "allocationPerUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1498,
                            "src": "12787:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12750:54:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1516,
                        "nodeType": "ExpressionStatement",
                        "src": "12750:54:5"
                      },
                      {
                        "expression": {
                          "id": 1521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1517,
                              "name": "allocationConfig",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "12815:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AllocationConfig_$770_storage",
                                "typeString": "struct ProfileVerification.AllocationConfig storage ref"
                              }
                            },
                            "id": 1519,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "12832:8:5",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 769,
                            "src": "12815:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1520,
                            "name": "isActive",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1500,
                            "src": "12843:8:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12815:36:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1522,
                        "nodeType": "ExpressionStatement",
                        "src": "12815:36:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1494,
                    "nodeType": "StructuredDocumentation",
                    "src": "12258:265:5",
                    "text": " @dev Update allocation configuration parameters (only owner)\n @param maxAllocations Maximum number of token allocations\n @param allocationPerUser Tokens allocated per user\n @param isActive Whether token allocation is active"
                  },
                  "functionSelector": "5a1420df",
                  "id": 1524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1503,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1502,
                        "name": "onlyOwner",
                        "nameLocations": ["12670:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "12670:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12670:9:5"
                    }
                  ],
                  "name": "updateAllocationConfig",
                  "nameLocation": "12538:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1501,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1496,
                        "mutability": "mutable",
                        "name": "maxAllocations",
                        "nameLocation": "12579:14:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1524,
                        "src": "12571:22:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1495,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12571:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1498,
                        "mutability": "mutable",
                        "name": "allocationPerUser",
                        "nameLocation": "12612:17:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1524,
                        "src": "12604:25:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1497,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12604:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1500,
                        "mutability": "mutable",
                        "name": "isActive",
                        "nameLocation": "12645:8:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1524,
                        "src": "12640:13:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1499,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "12640:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12560:100:5"
                  },
                  "returnParameters": {
                    "id": 1504,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12680:0:5"
                  },
                  "scope": 1772,
                  "src": "12529:330:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1536,
                    "nodeType": "Block",
                    "src": "13120:71:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1534,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1532,
                            "name": "mainnetMigrationContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 797,
                            "src": "13131:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1533,
                            "name": "_mainnetMigrationContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1527,
                            "src": "13158:25:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13131:52:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1535,
                        "nodeType": "ExpressionStatement",
                        "src": "13131:52:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1525,
                    "nodeType": "StructuredDocumentation",
                    "src": "12867:156:5",
                    "text": " @dev Set mainnet migration contract address (only owner)\n @param _mainnetMigrationContract Address of mainnet migration contract"
                  },
                  "functionSelector": "3f5f2acd",
                  "id": 1537,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1530,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1529,
                        "name": "onlyOwner",
                        "nameLocations": ["13110:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13110:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13110:9:5"
                    }
                  ],
                  "name": "setMainnetMigrationContract",
                  "nameLocation": "13038:27:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1527,
                        "mutability": "mutable",
                        "name": "_mainnetMigrationContract",
                        "nameLocation": "13074:25:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1537,
                        "src": "13066:33:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1526,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13066:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13065:35:5"
                  },
                  "returnParameters": {
                    "id": 1531,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13120:0:5"
                  },
                  "scope": 1772,
                  "src": "13029:162:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1551,
                    "nodeType": "Block",
                    "src": "13403:53:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1545,
                            "name": "healthToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 800,
                            "src": "13414:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1547,
                                "name": "_healthToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1540,
                                "src": "13435:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1546,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 225,
                              "src": "13428:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 1548,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13428:20:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$225",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "13414:34:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$225",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 1550,
                        "nodeType": "ExpressionStatement",
                        "src": "13414:34:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1538,
                    "nodeType": "StructuredDocumentation",
                    "src": "13199:133:5",
                    "text": " @dev Set health token contract address (only owner)\n @param _healthToken Address of health token contract"
                  },
                  "functionSelector": "b5856eac",
                  "id": 1552,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1543,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1542,
                        "name": "onlyOwner",
                        "nameLocations": ["13393:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13393:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13393:9:5"
                    }
                  ],
                  "name": "setHealthToken",
                  "nameLocation": "13347:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1541,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1540,
                        "mutability": "mutable",
                        "name": "_healthToken",
                        "nameLocation": "13370:12:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1552,
                        "src": "13362:20:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1539,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13362:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13361:22:5"
                  },
                  "returnParameters": {
                    "id": 1544,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13403:0:5"
                  },
                  "scope": 1772,
                  "src": "13338:118:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1564,
                    "nodeType": "Block",
                    "src": "13655:48:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 1562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1560,
                            "name": "verificationEnabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 807,
                            "src": "13666:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1561,
                            "name": "enabled",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1555,
                            "src": "13688:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13666:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1563,
                        "nodeType": "ExpressionStatement",
                        "src": "13666:29:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1553,
                    "nodeType": "StructuredDocumentation",
                    "src": "13464:120:5",
                    "text": " @dev Toggle verification system (only owner)\n @param enabled Whether verification is enabled"
                  },
                  "functionSelector": "4737a250",
                  "id": 1565,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1558,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1557,
                        "name": "onlyOwner",
                        "nameLocations": ["13645:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13645:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13645:9:5"
                    }
                  ],
                  "name": "setVerificationEnabled",
                  "nameLocation": "13599:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1556,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1555,
                        "mutability": "mutable",
                        "name": "enabled",
                        "nameLocation": "13627:7:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1565,
                        "src": "13622:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1554,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "13622:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13621:14:5"
                  },
                  "returnParameters": {
                    "id": 1559,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13655:0:5"
                  },
                  "scope": 1772,
                  "src": "13590:113:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1621,
                    "nodeType": "Block",
                    "src": "13897:440:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1574,
                                  "name": "userVerifications",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "13916:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                    "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                                  }
                                },
                                "id": 1576,
                                "indexExpression": {
                                  "id": 1575,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1568,
                                  "src": "13934:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13916:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                  "typeString": "struct ProfileVerification.UserVerification storage ref"
                                }
                              },
                              "id": 1577,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "13940:8:5",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 756,
                              "src": "13916:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "55736572206e6f7420616374697665",
                              "id": 1578,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13950:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_62906b4e82321b2cea691e4e8088b41f65fbd95ff33eb7e1426e8b87a37b6e37",
                                "typeString": "literal_string \"User not active\""
                              },
                              "value": "User not active"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_62906b4e82321b2cea691e4e8088b41f65fbd95ff33eb7e1426e8b87a37b6e37",
                                "typeString": "literal_string \"User not active\""
                              }
                            ],
                            "id": 1573,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "13908:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13908:60:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1580,
                        "nodeType": "ExpressionStatement",
                        "src": "13908:60:5"
                      },
                      {
                        "assignments": [1583],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1583,
                            "mutability": "mutable",
                            "name": "verification",
                            "nameLocation": "14014:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "13989:37:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification"
                            },
                            "typeName": {
                              "id": 1582,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1581,
                                "name": "UserVerification",
                                "nameLocations": ["13989:16:5"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 761,
                                "src": "13989:16:5"
                              },
                              "referencedDeclaration": 761,
                              "src": "13989:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                "typeString": "struct ProfileVerification.UserVerification"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1587,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1584,
                            "name": "userVerifications",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "14029:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                              "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                            }
                          },
                          "id": 1586,
                          "indexExpression": {
                            "id": 1585,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1568,
                            "src": "14047:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "14029:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13989:63:5"
                      },
                      {
                        "expression": {
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1588,
                              "name": "verification",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1583,
                              "src": "14063:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                "typeString": "struct ProfileVerification.UserVerification storage pointer"
                              }
                            },
                            "id": 1590,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "14076:8:5",
                            "memberName": "isActive",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 756,
                            "src": "14063:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 1591,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14087:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "14063:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1593,
                        "nodeType": "ExpressionStatement",
                        "src": "14063:29:5"
                      },
                      {
                        "assignments": [1595],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1595,
                            "mutability": "mutable",
                            "name": "email",
                            "nameLocation": "14154:5:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1621,
                            "src": "14140:19:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string"
                            },
                            "typeName": {
                              "id": 1594,
                              "name": "string",
                              "nodeType": "ElementaryTypeName",
                              "src": "14140:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage_ptr",
                                "typeString": "string"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1598,
                        "initialValue": {
                          "expression": {
                            "id": 1596,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1583,
                            "src": "14162:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification storage pointer"
                            }
                          },
                          "id": 1597,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14175:5:5",
                          "memberName": "email",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 748,
                          "src": "14162:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14140:40:5"
                      },
                      {
                        "expression": {
                          "id": 1603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1599,
                              "name": "walletToEmail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 778,
                              "src": "14191:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 1601,
                            "indexExpression": {
                              "id": 1600,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1568,
                              "src": "14205:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14191:19:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "",
                            "id": 1602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "14213:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          },
                          "src": "14191:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1604,
                        "nodeType": "ExpressionStatement",
                        "src": "14191:24:5"
                      },
                      {
                        "expression": {
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1605,
                              "name": "emailToWallet",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 782,
                              "src": "14226:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
                                "typeString": "mapping(string memory => address)"
                              }
                            },
                            "id": 1607,
                            "indexExpression": {
                              "id": 1606,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1595,
                              "src": "14240:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "14226:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 1610,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14257:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 1609,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14249:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1608,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14249:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14249:10:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14226:33:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1613,
                        "nodeType": "ExpressionStatement",
                        "src": "14226:33:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1615,
                              "name": "email",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1595,
                              "src": "14300:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 1616,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1568,
                              "src": "14307:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1617,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "14313:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1618,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14319:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "14313:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1614,
                            "name": "WalletUnlinked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 746,
                            "src": "14285:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (string memory,address,uint256)"
                            }
                          },
                          "id": 1619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14285:44:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1620,
                        "nodeType": "EmitStatement",
                        "src": "14280:49:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1566,
                    "nodeType": "StructuredDocumentation",
                    "src": "13711:123:5",
                    "text": " @dev Emergency function to deactivate user (only owner)\n @param user User address to deactivate"
                  },
                  "functionSelector": "1a47767b",
                  "id": 1622,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1571,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1570,
                        "name": "onlyOwner",
                        "nameLocations": ["13887:9:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 58,
                        "src": "13887:9:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13887:9:5"
                    }
                  ],
                  "name": "deactivateUser",
                  "nameLocation": "13849:14:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1569,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1568,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "13872:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1622,
                        "src": "13864:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1567,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "13864:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13863:14:5"
                  },
                  "returnParameters": {
                    "id": 1572,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13897:0:5"
                  },
                  "scope": 1772,
                  "src": "13840:497:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1677,
                    "nodeType": "Block",
                    "src": "14719:539:5",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "id": 1633,
                                  "name": "userVerifications",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 787,
                                  "src": "14738:17:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                    "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                                  }
                                },
                                "id": 1635,
                                "indexExpression": {
                                  "id": 1634,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1625,
                                  "src": "14756:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "14738:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                                  "typeString": "struct ProfileVerification.UserVerification storage ref"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14762:8:5",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 756,
                              "src": "14738:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "55736572206e6f74207665726966696564",
                              "id": 1637,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14772:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf",
                                "typeString": "literal_string \"User not verified\""
                              },
                              "value": "User not verified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf",
                                "typeString": "literal_string \"User not verified\""
                              }
                            ],
                            "id": 1632,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14730:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14730:62:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1639,
                        "nodeType": "ExpressionStatement",
                        "src": "14730:62:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1646,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1641,
                                "name": "mainnetMigrationContract",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 797,
                                "src": "14811:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1644,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14847:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1643,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "14839:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1642,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "14839:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1645,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14839:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14811:38:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6967726174696f6e20636f6e7472616374206e6f7420736574",
                              "id": 1647,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14851:28:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_60de3889a5b52e49c87917d958b2a4b2f9146a238f4c8c2e22811b5781fc4a62",
                                "typeString": "literal_string \"Migration contract not set\""
                              },
                              "value": "Migration contract not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_60de3889a5b52e49c87917d958b2a4b2f9146a238f4c8c2e22811b5781fc4a62",
                                "typeString": "literal_string \"Migration contract not set\""
                              }
                            ],
                            "id": 1640,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "14803:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14803:77:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1649,
                        "nodeType": "ExpressionStatement",
                        "src": "14803:77:5"
                      },
                      {
                        "assignments": [1651, 1653],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1651,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "14957:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1677,
                            "src": "14952:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1650,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "14952:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 1653,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "14979:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1677,
                            "src": "14966:17:5",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes"
                            },
                            "typeName": {
                              "id": 1652,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "14966:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage_ptr",
                                "typeString": "bytes"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1663,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "67656e65726174654d6967726174696f6e50726f6f6628616464726573732c627974657329",
                                  "id": 1658,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "15063:39:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_ad5aea4cbfc8206b80f0a36522e76ba0046896d4ddfd30fd9688d2cff2832a89",
                                    "typeString": "literal_string \"generateMigrationProof(address,bytes)\""
                                  },
                                  "value": "generateMigrationProof(address,bytes)"
                                },
                                {
                                  "id": 1659,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1625,
                                  "src": "15104:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1660,
                                  "name": "signature",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1627,
                                  "src": "15110:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_ad5aea4cbfc8206b80f0a36522e76ba0046896d4ddfd30fd9688d2cff2832a89",
                                    "typeString": "literal_string \"generateMigrationProof(address,bytes)\""
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "id": 1656,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "15039:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 1657,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "15043:19:5",
                                "memberName": "encodeWithSignature",
                                "nodeType": "MemberAccess",
                                "src": "15039:23:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function (string memory) pure returns (bytes memory)"
                                }
                              },
                              "id": 1661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15039:81:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 1654,
                              "name": "mainnetMigrationContract",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 797,
                              "src": "14987:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1655,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "15012:12:5",
                            "memberName": "delegatecall",
                            "nodeType": "MemberAccess",
                            "src": "14987:37:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                              "typeString": "function (bytes memory) returns (bool,bytes memory)"
                            }
                          },
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14987:144:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "14951:180:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1665,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1651,
                              "src": "15160:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4d6967726174696f6e2070726f6f662067656e65726174696f6e206661696c6564",
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15169:35:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_21752e5fb30f2e3d9a07de7f3a59379f03aa04cdf0ed3702f1fc6081df206483",
                                "typeString": "literal_string \"Migration proof generation failed\""
                              },
                              "value": "Migration proof generation failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_21752e5fb30f2e3d9a07de7f3a59379f03aa04cdf0ed3702f1fc6081df206483",
                                "typeString": "literal_string \"Migration proof generation failed\""
                              }
                            ],
                            "id": 1664,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15152:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15152:53:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1668,
                        "nodeType": "ExpressionStatement",
                        "src": "15152:53:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1671,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1653,
                              "src": "15234:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            {
                              "components": [
                                {
                                  "id": 1673,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15241:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_bytes32_$",
                                    "typeString": "type(bytes32)"
                                  },
                                  "typeName": {
                                    "id": 1672,
                                    "name": "bytes32",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15241:7:5",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "id": 1674,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "15240:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              },
                              {
                                "typeIdentifier": "t_type$_t_bytes32_$",
                                "typeString": "type(bytes32)"
                              }
                            ],
                            "expression": {
                              "id": 1669,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "15223:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 1670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "15227:6:5",
                            "memberName": "decode",
                            "nodeType": "MemberAccess",
                            "src": "15223:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15223:27:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "functionReturnParameters": 1631,
                        "id": 1676,
                        "nodeType": "Return",
                        "src": "15216:34:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1623,
                    "nodeType": "StructuredDocumentation",
                    "src": "14345:232:5",
                    "text": " @dev Generate migration proof for user (for mainnet migration)\n @param user User address\n @param signature User signature proving ownership\n @return migrationHash Hash of the migration proof"
                  },
                  "functionSelector": "ad5aea4c",
                  "id": 1678,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "generateMigrationProof",
                  "nameLocation": "14592:22:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1628,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1625,
                        "mutability": "mutable",
                        "name": "user",
                        "nameLocation": "14633:4:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "14625:12:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1624,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "14625:7:5",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1627,
                        "mutability": "mutable",
                        "name": "signature",
                        "nameLocation": "14661:9:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "14648:22:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1626,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "14648:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14614:63:5"
                  },
                  "returnParameters": {
                    "id": 1631,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1630,
                        "mutability": "mutable",
                        "name": "migrationHash",
                        "nameLocation": "14704:13:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 1678,
                        "src": "14696:21:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "typeName": {
                          "id": 1629,
                          "name": "bytes32",
                          "nodeType": "ElementaryTypeName",
                          "src": "14696:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "14695:23:5"
                  },
                  "scope": 1772,
                  "src": "14583:675:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "body": {
                    "id": 1770,
                    "nodeType": "Block",
                    "src": "15466:922:5",
                    "statements": [
                      {
                        "assignments": [1685],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1685,
                            "mutability": "mutable",
                            "name": "user",
                            "nameLocation": "15485:4:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "15477:12:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1684,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15477:7:5",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1688,
                        "initialValue": {
                          "expression": {
                            "id": 1686,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15492:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15496:6:5",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "15492:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15477:25:5"
                      },
                      {
                        "assignments": [1691],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1691,
                            "mutability": "mutable",
                            "name": "verification",
                            "nameLocation": "15538:12:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "15513:37:5",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification"
                            },
                            "typeName": {
                              "id": 1690,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 1689,
                                "name": "UserVerification",
                                "nameLocations": ["15513:16:5"],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 761,
                                "src": "15513:16:5"
                              },
                              "referencedDeclaration": 761,
                              "src": "15513:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                "typeString": "struct ProfileVerification.UserVerification"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1695,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1692,
                            "name": "userVerifications",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 787,
                            "src": "15553:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                              "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                            }
                          },
                          "id": 1694,
                          "indexExpression": {
                            "id": 1693,
                            "name": "user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1685,
                            "src": "15571:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "15553:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15513:63:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1697,
                                "name": "verification",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1691,
                                "src": "15605:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                  "typeString": "struct ProfileVerification.UserVerification storage pointer"
                                }
                              },
                              "id": 1698,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "15618:8:5",
                              "memberName": "isActive",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 756,
                              "src": "15605:21:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "55736572206e6f74207665726966696564",
                              "id": 1699,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15628:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf",
                                "typeString": "literal_string \"User not verified\""
                              },
                              "value": "User not verified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf",
                                "typeString": "literal_string \"User not verified\""
                              }
                            ],
                            "id": 1696,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15597:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1700,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15597:51:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1701,
                        "nodeType": "ExpressionStatement",
                        "src": "15597:51:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1703,
                                  "name": "verification",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "15667:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                    "typeString": "struct ProfileVerification.UserVerification storage pointer"
                                  }
                                },
                                "id": 1704,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15680:15:5",
                                "memberName": "tokenAllocation",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 760,
                                "src": "15667:28:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 1705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "15698:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "15667:32:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f20616c6c6f636174696f6e20617661696c61626c65",
                              "id": 1707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15701:25:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_af1a393559512be6c55d6978c619b46ee67fad8e3bbc89007ccdda693aa2422a",
                                "typeString": "literal_string \"No allocation available\""
                              },
                              "value": "No allocation available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_af1a393559512be6c55d6978c619b46ee67fad8e3bbc89007ccdda693aa2422a",
                                "typeString": "literal_string \"No allocation available\""
                              }
                            ],
                            "id": 1702,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15659:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15659:68:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1709,
                        "nodeType": "ExpressionStatement",
                        "src": "15659:68:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1713,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "15746:31:5",
                              "subExpression": {
                                "expression": {
                                  "id": 1711,
                                  "name": "verification",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1691,
                                  "src": "15747:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                    "typeString": "struct ProfileVerification.UserVerification storage pointer"
                                  }
                                },
                                "id": 1712,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "15760:17:5",
                                "memberName": "hasReceivedTokens",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 758,
                                "src": "15747:30:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e7320616c726561647920636c61696d6564",
                              "id": 1714,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15779:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b",
                                "typeString": "literal_string \"Tokens already claimed\""
                              },
                              "value": "Tokens already claimed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b",
                                "typeString": "literal_string \"Tokens already claimed\""
                              }
                            ],
                            "id": 1710,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15738:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15738:66:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1716,
                        "nodeType": "ExpressionStatement",
                        "src": "15738:66:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1720,
                                    "name": "healthToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 800,
                                    "src": "15831:11:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$225",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "id": 1719,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15823:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1718,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15823:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1721,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15823:20:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1724,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "15855:1:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1723,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "15847:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1722,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "15847:7:5",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1725,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "15847:10:5",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "15823:34:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4865616c746820746f6b656e206e6f7420736574",
                              "id": 1727,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15859:22:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_90e93d5c0b6701c09679aa7793aa6d0dbef5cef46c639b627bd173fa717050f0",
                                "typeString": "literal_string \"Health token not set\""
                              },
                              "value": "Health token not set"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_90e93d5c0b6701c09679aa7793aa6d0dbef5cef46c639b627bd173fa717050f0",
                                "typeString": "literal_string \"Health token not set\""
                              }
                            ],
                            "id": 1717,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "15815:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15815:67:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1729,
                        "nodeType": "ExpressionStatement",
                        "src": "15815:67:5"
                      },
                      {
                        "assignments": [1731],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1731,
                            "mutability": "mutable",
                            "name": "allocationAmount",
                            "nameLocation": "15911:16:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1770,
                            "src": "15903:24:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1730,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "15903:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1734,
                        "initialValue": {
                          "expression": {
                            "id": 1732,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "15930:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification storage pointer"
                            }
                          },
                          "id": 1733,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15943:15:5",
                          "memberName": "tokenAllocation",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 760,
                          "src": "15930:28:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "15903:55:5"
                      },
                      {
                        "expression": {
                          "id": 1739,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 1735,
                              "name": "verification",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1691,
                              "src": "15969:12:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                "typeString": "struct ProfileVerification.UserVerification storage pointer"
                              }
                            },
                            "id": 1737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "15982:17:5",
                            "memberName": "hasReceivedTokens",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 758,
                            "src": "15969:30:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1738,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "16002:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "15969:37:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1740,
                        "nodeType": "ExpressionStatement",
                        "src": "15969:37:5"
                      },
                      {
                        "expression": {
                          "id": 1745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1741,
                              "name": "userVerifications",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 787,
                              "src": "16060:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserVerification_$761_storage_$",
                                "typeString": "mapping(address => struct ProfileVerification.UserVerification storage ref)"
                              }
                            },
                            "id": 1743,
                            "indexExpression": {
                              "id": 1742,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "16078:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16060:23:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                              "typeString": "struct ProfileVerification.UserVerification storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1744,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "16086:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification storage pointer"
                            }
                          },
                          "src": "16060:38:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "id": 1746,
                        "nodeType": "ExpressionStatement",
                        "src": "16060:38:5"
                      },
                      {
                        "expression": {
                          "id": 1752,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1747,
                              "name": "userIdToVerification",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 792,
                              "src": "16109:20:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_UserVerification_$761_storage_$",
                                "typeString": "mapping(uint256 => struct ProfileVerification.UserVerification storage ref)"
                              }
                            },
                            "id": 1750,
                            "indexExpression": {
                              "expression": {
                                "id": 1748,
                                "name": "verification",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1691,
                                "src": "16130:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                                  "typeString": "struct ProfileVerification.UserVerification storage pointer"
                                }
                              },
                              "id": 1749,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16143:6:5",
                              "memberName": "userId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 752,
                              "src": "16130:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16109:41:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                              "typeString": "struct ProfileVerification.UserVerification storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1751,
                            "name": "verification",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1691,
                            "src": "16153:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_UserVerification_$761_storage_ptr",
                              "typeString": "struct ProfileVerification.UserVerification storage pointer"
                            }
                          },
                          "src": "16109:56:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_UserVerification_$761_storage",
                            "typeString": "struct ProfileVerification.UserVerification storage ref"
                          }
                        },
                        "id": 1753,
                        "nodeType": "ExpressionStatement",
                        "src": "16109:56:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1757,
                                  "name": "user",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1685,
                                  "src": "16251:4:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1758,
                                  "name": "allocationAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1731,
                                  "src": "16257:16:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 1755,
                                  "name": "healthToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 800,
                                  "src": "16230:11:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$225",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 1756,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "16242:8:5",
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 192,
                                "src": "16230:20:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 1759,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16230:44:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "546f6b656e207472616e73666572206661696c6564",
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16276:23:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                                "typeString": "literal_string \"Token transfer failed\""
                              },
                              "value": "Token transfer failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
                                "typeString": "literal_string \"Token transfer failed\""
                              }
                            ],
                            "id": 1754,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [-18, -18],
                            "referencedDeclaration": -18,
                            "src": "16222:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16222:78:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1762,
                        "nodeType": "ExpressionStatement",
                        "src": "16222:78:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1764,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1685,
                              "src": "16340:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1765,
                              "name": "allocationAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1731,
                              "src": "16346:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 1766,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "16364:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1767,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "16370:9:5",
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "16364:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1763,
                            "name": "TokensClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "16326:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256)"
                            }
                          },
                          "id": 1768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16326:54:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1769,
                        "nodeType": "EmitStatement",
                        "src": "16321:59:5"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1679,
                    "nodeType": "StructuredDocumentation",
                    "src": "15266:145:5",
                    "text": " @dev Claim allocated tokens for verified user\n @notice Users can claim their allocated tokens once after verification"
                  },
                  "functionSelector": "d2d1fb25",
                  "id": 1771,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1682,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1681,
                        "name": "nonReentrant",
                        "nameLocations": ["15453:12:5"],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 288,
                        "src": "15453:12:5"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "15453:12:5"
                    }
                  ],
                  "name": "claimAllocation",
                  "nameLocation": "15426:15:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1680,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15441:2:5"
                  },
                  "returnParameters": {
                    "id": 1683,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "15466:0:5"
                  },
                  "scope": 1772,
                  "src": "15417:971:5",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1773,
              "src": "566:15825:5",
              "usedErrors": [13, 18, 269, 335, 340, 345],
              "usedEvents": [24, 694, 702, 712, 722, 730, 738, 746]
            }
          ],
          "src": "33:16360:5"
        },
        "id": 5
      }
    },
    "contracts": {
      "@openzeppelin/contracts/access/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                { "internalType": "address", "name": "to", "type": "address" },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/Context.sol": {
        "Context": {
          "abi": [],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/ReentrancyGuard.sol": {
        "ReentrancyGuard": {
          "abi": [
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}"
        }
      },
      "@openzeppelin/contracts/utils/cryptography/ECDSA.sol": {
        "ECDSA": {
          "abi": [
            { "inputs": [], "name": "ECDSAInvalidSignature", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "name": "ECDSAInvalidSignatureLength",
              "type": "error"
            },
            {
              "inputs": [
                { "internalType": "bytes32", "name": "s", "type": "bytes32" }
              ],
              "name": "ECDSAInvalidSignatureS",
              "type": "error"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ",
              "sourceMap": "344:7470:4:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;344:7470:4;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {},
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122048a43252f2e3f7e56df7ad0e9342522ab81bd116770e6f383d4910f0bef2746d64736f6c63430008140033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BASEFEE LOG4 ORIGIN MSTORE CALLCODE 0xE3 0xF7 0xE5 PUSH14 0xF7AD0E9342522AB81BD116770E6F CODESIZE RETURNDATASIZE 0x49 LT CREATE 0xBE CALLCODE PUSH21 0x6D64736F6C63430008140033000000000000000000 ",
              "sourceMap": "344:7470:4:-:0;;;;;;;;"
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]}},\"version\":1}"
        }
      },
      "contracts/ProfileVerification.sol": {
        "ProfileVerification": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            { "inputs": [], "name": "ECDSAInvalidSignature", "type": "error" },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "length",
                  "type": "uint256"
                }
              ],
              "name": "ECDSAInvalidSignatureLength",
              "type": "error"
            },
            {
              "inputs": [
                { "internalType": "bytes32", "name": "s", "type": "bytes32" }
              ],
              "name": "ECDSAInvalidSignatureS",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "name": "OwnableInvalidOwner",
              "type": "error"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "OwnableUnauthorizedAccount",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "ReentrancyGuardReentrantCall",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "allocationId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "AllocationRecorded",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "EmailRemovedFromWhitelist",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "admin",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "EmailWhitelisted",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "TokensClaimed",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "UserVerified",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "WalletLinked",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "string",
                  "name": "email",
                  "type": "string"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                }
              ],
              "name": "WalletUnlinked",
              "type": "event"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "addEmailToWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string[]",
                  "name": "emails",
                  "type": "string[]"
                }
              ],
              "name": "addEmailsToWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "allocationConfig",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "totalAllocated",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "maxAllocations",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allocationPerUser",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "claimAllocation",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "user", "type": "address" }
              ],
              "name": "deactivateUser",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "bytes32", "name": "", "type": "bytes32" }
              ],
              "name": "emailHashWhitelist",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "", "type": "string" }
              ],
              "name": "emailToWallet",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "generateMigrationProof",
              "outputs": [
                {
                  "internalType": "bytes32",
                  "name": "migrationHash",
                  "type": "bytes32"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getAllocationConfig",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "totalAllocated",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "maxAllocations",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "allocationPerUser",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    }
                  ],
                  "internalType": "struct ProfileVerification.AllocationConfig",
                  "name": "config",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "getTotalVerifiedUsers",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "count",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "user", "type": "address" }
              ],
              "name": "getUserVerification",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "email",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "wallet",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "hasReceivedTokens",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAllocation",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ProfileVerification.UserVerification",
                  "name": "verification",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "getVerificationByEmail",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "string",
                      "name": "email",
                      "type": "string"
                    },
                    {
                      "internalType": "address",
                      "name": "wallet",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "userId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "timestamp",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "isActive",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "hasReceivedTokens",
                      "type": "bool"
                    },
                    {
                      "internalType": "uint256",
                      "name": "tokenAllocation",
                      "type": "uint256"
                    }
                  ],
                  "internalType": "struct ProfileVerification.UserVerification",
                  "name": "verification",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "healthToken",
              "outputs": [
                {
                  "internalType": "contract IERC20",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "bytes32",
                  "name": "emailHash",
                  "type": "bytes32"
                }
              ],
              "name": "isEmailHashWhitelisted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "isEmailInUse",
              "outputs": [
                { "internalType": "bool", "name": "isInUse", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "isEmailWhitelisted",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "isWhitelisted",
                  "type": "bool"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "user", "type": "address" }
              ],
              "name": "isUserVerified",
              "outputs": [
                { "internalType": "bool", "name": "isVerified", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                }
              ],
              "name": "isWalletInUse",
              "outputs": [
                { "internalType": "bool", "name": "isInUse", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "mainnetMigrationContract",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "nextUserId",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "removeEmailFromWhitelist",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_healthToken",
                  "type": "address"
                }
              ],
              "name": "setHealthToken",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_mainnetMigrationContract",
                  "type": "address"
                }
              ],
              "name": "setMainnetMigrationContract",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "bool", "name": "enabled", "type": "bool" }
              ],
              "name": "setVerificationEnabled",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalVerifiedUsers",
              "outputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "maxAllocations",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "allocationPerUser",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" }
              ],
              "name": "updateAllocationConfig",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "uint256", "name": "", "type": "uint256" }
              ],
              "name": "userIdToVerification",
              "outputs": [
                { "internalType": "string", "name": "email", "type": "string" },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" },
                {
                  "internalType": "bool",
                  "name": "hasReceivedTokens",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAllocation",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "name": "userVerifications",
              "outputs": [
                { "internalType": "string", "name": "email", "type": "string" },
                {
                  "internalType": "address",
                  "name": "wallet",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "userId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "timestamp",
                  "type": "uint256"
                },
                { "internalType": "bool", "name": "isActive", "type": "bool" },
                {
                  "internalType": "bool",
                  "name": "hasReceivedTokens",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "tokenAllocation",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "verificationEnabled",
              "outputs": [
                { "internalType": "bool", "name": "", "type": "bool" }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ],
              "name": "verifyProfile",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "string", "name": "email", "type": "string" }
              ],
              "name": "verifyProfileZKsync",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                { "internalType": "address", "name": "", "type": "address" }
              ],
              "name": "walletToEmail",
              "outputs": [
                { "internalType": "string", "name": "", "type": "string" }
              ],
              "stateMutability": "view",
              "type": "function"
            }
          ],
          "evm": {
            "bytecode": {
              "functionDebugData": {
                "@_277": {
                  "entryPoint": null,
                  "id": 277,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_50": {
                  "entryPoint": null,
                  "id": 50,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@_999": {
                  "entryPoint": null,
                  "id": 999,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_transferOwnership_146": {
                  "entryPoint": 159,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:219:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "115:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "125:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "137:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "148:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "133:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "133:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "125:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "167:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "182:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "198:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "203:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "194:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "194:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "207:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "190:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "190:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "178:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "178:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "160:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "160:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "160:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "84:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "95:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "106:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14:203:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER DUP1 PUSH2 0x44 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4D DUP2 PUSH2 0x9F JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP1 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH2 0x1388 PUSH1 0x20 DUP4 ADD DUP2 SWAP1 MSTORE PUSH9 0x3635C9ADC5DEA00000 SWAP4 DUP4 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x7 SSTORE PUSH1 0x8 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xEF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2A2C DUP1 PUSH3 0xFF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x739709B6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xB36C6D1F GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC9DBABE9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC9DBABE9 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xD2D1FB25 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xE792B124 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xEFA4AE00 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB36C6D1F EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xB5856EAC EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xBF9C1B1B EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xC6B0AC85 EQ PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x9D139D7D EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xA1E6A255 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xACE417E0 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xAD5AEA4C EQ PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x739709B6 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x85DB9D2C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x85F3683B EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8C1F3A8C EQ PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34627DEA GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x46616268 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x46616268 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x4737A250 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x59D61E45 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x5A1420DF EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34627DEA EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x372DFC49 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x3793438D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x3F5F2ACD EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A47767B GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x1A47767B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x21918829 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x21C01DEB EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x2B099994 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18763E9 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x7BB4EE3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB236953 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB3D0887 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x4 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x31C SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x25F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x351 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x25BD JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x265A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25F JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x2C2 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1482 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x25F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x3F9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x187D JUMP JUMPDEST PUSH2 0x229 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1947 JUMP JUMPDEST PUSH2 0x577 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 PUSH2 0x5A7 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x63F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 MLOAD CALLER SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x7FE370A25DC2A72737D82C7B84942440B8D587D9FF700505D16C1ABE20ADA980 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP DUP1 PUSH2 0x64A DUP2 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x683 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x753 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP6 POP PUSH2 0x805 SWAP4 POP SWAP2 POP DUP4 SWAP1 POP PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 DUP5 AND SWAP1 PUSH2 0x852 SWAP1 DUP4 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x22A19FD46D17F548B3DD51BC0E67E4D62EF6DBB21A3A825788A80B1CDCADA8F8 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x899 PUSH2 0x222A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115B585A5B081B9BDD081D995C9A599A5959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x93A SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x988 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x996 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xA2F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP8 JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D61696C20616C72656164792077686974656C697374656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH2 0xB86 SWAP1 DUP5 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x7FE370A25DC2A72737D82C7B84942440B8D587D9FF700505D16C1ABE20ADA980 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x15995C9A599A58D85D1A5BDB881A5CC8191A5CD8589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D61696C20616C726561647920696E20757365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCAD SWAP1 PUSH2 0x2712 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x57616C6C657420616C726561647920696E20757365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0xCFE DUP4 CALLER PUSH2 0x1A11 JUMP JUMPDEST POP POP PUSH2 0xD09 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD14 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xA2F SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x8 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD98 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xDA2 PUSH1 0x0 PUSH2 0x1E78 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x15995C9A599A58D85D1A5BDB881A5CC8191A5CD8589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0xE05 DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115B585A5B081B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D61696C20616C726561647920696E20757365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEF1 SWAP1 PUSH2 0x2712 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x57616C6C657420616C726561647920696E20757365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP7 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF4D SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA4 SWAP2 SWAP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFC8 DUP3 DUP10 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x1016 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0x1020 DUP10 CALLER PUSH2 0x1A11 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x652 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x103C DUP4 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x106E SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x109A SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1173 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD081D995C9A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6967726174696F6E20636F6E7472616374206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1257 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2B56BA93 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6967726174696F6E2070726F6F662067656E65726174696F6E206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x716 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x134D PUSH2 0x222A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x137F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1460 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x14A8 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x19E7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD081D995C9A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT PUSH2 0x1565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616C6C6F636174696F6E20617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B9CC8185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1219585B1D1A081D1BDAD95B881B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 SWAP1 DUP1 PUSH2 0x1645 DUP4 DUP3 PUSH2 0x28CF JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD DUP2 DUP4 ADD SSTORE PUSH1 0x3 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP5 ADD DUP1 SLOAD SWAP2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x5 SWAP3 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 DUP1 PUSH2 0x16EE DUP4 DUP3 PUSH2 0x28CF JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x3 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP5 ADD DUP1 SLOAD DUP3 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO SWAP1 DUP2 OR DUP4 SSTORE SWAP4 SLOAD PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH2 0x100 SWAP4 DUP5 SWAP1 DIV SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 SWAP3 MUL OR SWAP1 SSTORE PUSH1 0x5 SWAP4 DUP5 ADD SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17EA SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x182E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x9923B4306C6C030F2BDFBF156517D5983B87E15B96176DA122CD4F2EFFA4BA7B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xDA2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x18EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115B585A5B081B9BDD081A5B881DDA1A5D195B1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH2 0x1910 SWAP1 DUP5 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x8514A3441F6E99C8150799DAC43140A550E8AE54631E6BB831A24667A64677FB SWAP1 PUSH1 0x20 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x194F PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1979 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP3 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19CA SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x1A22 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1A89 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1B22 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP10 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP1 MSTORE SWAP1 KECCAK256 PUSH2 0x1BB6 DUP6 DUP3 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1C0C JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x9 SLOAD PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 PUSH2 0x1C32 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP4 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1C60 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP3 MLOAD DUP4 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1CF9 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP10 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE TIMESTAMP SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP7 AND SWAP2 PUSH32 0x6265C4408AC5B7C9B18D37B72535BE33A793F145417CBBF3FD5AD07AA2184CC1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1DC8 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x13F42EE0DE0AC9236AD9FD1EDD06FB6B07F3E2423A2C0B6CB6DC732822FEC14C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x90DEC1F4FFCC94B09EB3739C1C9D43F199BB65196004104DFB39A3DA25C9AFD9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1ED8 DUP7 DUP7 PUSH2 0x2055 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EE8 DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1F15 PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x204D JUMPI PUSH1 0x41 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F62 JUMPI PUSH2 0x1F62 PUSH2 0x26B1 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR LT DUP1 ISZERO SWAP1 PUSH2 0x1F92 JUMPI POP PUSH1 0x5A DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x26B1 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR GT ISZERO JUMPDEST ISZERO PUSH2 0x1FF4 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1FA9 JUMPI PUSH2 0x1FA9 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0x20 PUSH2 0x1FC3 SWAP2 SWAP1 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x203B JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2023 JUMPI PUSH2 0x2023 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP1 PUSH2 0x2045 DUP2 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F45 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x208F JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x2081 DUP9 DUP3 DUP6 DUP6 PUSH2 0x215B JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x209B JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B6 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x20BF JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D3 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x20F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2105 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x2126 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213A JUMPI PUSH2 0x213A PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2196 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2216 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x2220 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B3 PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x228A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x230E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x236A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH2 0x237C PUSH2 0x2274 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x238B DUP6 DUP3 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x23E1 JUMPI DUP3 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x23D1 DUP12 DUP10 DUP4 DUP11 ADD ADD PUSH2 0x22BB JUMP JUMPDEST DUP4 MSTORE POP SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2423 DUP5 DUP3 DUP6 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2462 DUP3 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2484 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x246C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x24A5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24D6 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x248D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2556 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2462 DUP2 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x25EB DUP2 PUSH2 0x2592 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x262D DUP7 DUP4 DUP8 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2650 DUP6 DUP3 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2462 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2689 DUP4 PUSH2 0x242B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2650 DUP6 DUP3 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2469 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x270B JUMPI PUSH2 0x270B PUSH2 0x26E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2726 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2773 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2792 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x277F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B5 JUMPI PUSH2 0x27B5 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x27C9 DUP2 PUSH2 0x27C3 DUP5 SLOAD PUSH2 0x2712 JUMP JUMPDEST DUP5 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27FE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x27E6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x282D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x280E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x284B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x286D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2423 SWAP1 DUP4 ADD DUP5 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x28DA JUMPI POP POP JUMP JUMPDEST PUSH2 0x28E4 DUP3 SLOAD PUSH2 0x2712 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FC PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x290A DUP2 PUSH2 0x27C3 DUP5 SLOAD PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x293E JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2926 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2978 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2958 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2996 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2462 DUP2 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x26E3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5CC520889C270FDF7C6A1702E115C7FB12CC77B9573FB7 CREATE2 0x26 0x2A 0xBC 0xBB EXTCODESIZE CALLDATASIZE 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "566:15825:5:-:0;;;2350:38;;;-1:-1:-1;;2350:38:5;2384:4;2350:38;;;4076:342;;;;;;;;;-1:-1:-1;4098:10:5;;1269:95:0;;1322:31;;-1:-1:-1;;;1322:31:0;;1350:1;1322:31;;;160:51:6;133:18;;1322:31:0;;;;;;;1269:95;1373:32;1392:12;1373:18;:32::i;:::-;-1:-1:-1;1857:1:3;2061:21;;;4210:200:5::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;4210:200:5;;;4290:4:::1;4210:200;::::0;::::1;::::0;;;4328:13:::1;4210:200:::0;;;;;;;;;;;;;4191:16:::1;:219:::0;;;;;;;;-1:-1:-1;;4191:219:5::1;::::0;;::::1;::::0;;566:15825;;2912:187:0;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;14:203:6:-;566:15825:5;;;;;;"
            },
            "deployedBytecode": {
              "functionDebugData": {
                "@_checkOwner_84": {
                  "entryPoint": 6530,
                  "id": 84,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_hashEmail_844": {
                  "entryPoint": 6575,
                  "id": 844,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@_msgSender_237": {
                  "entryPoint": null,
                  "id": 237,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@_nonReentrantAfter_312": {
                  "entryPoint": null,
                  "id": 312,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_nonReentrantBefore_304": {
                  "entryPoint": 6631,
                  "id": 304,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@_processVerification_1337": {
                  "entryPoint": 6673,
                  "id": 1337,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_throwError_671": {
                  "entryPoint": 8354,
                  "id": 671,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@_toLower_932": {
                  "entryPoint": 7922,
                  "id": 932,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@_transferOwnership_146": {
                  "entryPoint": 7800,
                  "id": 146,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@addEmailToWhitelist_1036": {
                  "entryPoint": 2792,
                  "id": 1036,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@addEmailsToWhitelist_1089": {
                  "entryPoint": 1391,
                  "id": 1089,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@allocationConfig_795": {
                  "entryPoint": null,
                  "id": 795,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@claimAllocation_1771": {
                  "entryPoint": 5298,
                  "id": 1771,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@deactivateUser_1622": {
                  "entryPoint": 1717,
                  "id": 1622,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@emailHashWhitelist_774": {
                  "entryPoint": null,
                  "id": 774,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@emailToWallet_782": {
                  "entryPoint": null,
                  "id": 782,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@generateMigrationProof_1678": {
                  "entryPoint": 4473,
                  "id": 1678,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@getAllocationConfig_1484": {
                  "entryPoint": 1622,
                  "id": 1484,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getTotalVerifiedUsers_1493": {
                  "entryPoint": null,
                  "id": 1493,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@getUserVerification_1375": {
                  "entryPoint": 4933,
                  "id": 1375,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@getVerificationByEmail_1405": {
                  "entryPoint": 2193,
                  "id": 1405,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@healthToken_800": {
                  "entryPoint": null,
                  "id": 800,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@isEmailHashWhitelisted_1437": {
                  "entryPoint": null,
                  "id": 1437,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isEmailInUse_1455": {
                  "entryPoint": 4335,
                  "id": 1455,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isEmailWhitelisted_1424": {
                  "entryPoint": 4144,
                  "id": 1424,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isUserVerified_1361": {
                  "entryPoint": 4396,
                  "id": 1361,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@isWalletInUse_1474": {
                  "entryPoint": 5250,
                  "id": 1474,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "@mainnetMigrationContract_797": {
                  "entryPoint": null,
                  "id": 797,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@nextUserId_804": {
                  "entryPoint": null,
                  "id": 804,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@owner_67": {
                  "entryPoint": null,
                  "id": 67,
                  "parameterSlots": 0,
                  "returnSlots": 1
                },
                "@recover_428": {
                  "entryPoint": 7880,
                  "id": 428,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "@removeEmailFromWhitelist_1125": {
                  "entryPoint": 6269,
                  "id": 1125,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@renounceOwnership_98": {
                  "entryPoint": 3472,
                  "id": 98,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@setHealthToken_1552": {
                  "entryPoint": 5208,
                  "id": 1552,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setMainnetMigrationContract_1537": {
                  "entryPoint": 3340,
                  "id": 1537,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@setVerificationEnabled_1565": {
                  "entryPoint": 3409,
                  "id": 1565,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@totalVerifiedUsers_802": {
                  "entryPoint": null,
                  "id": 802,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@transferOwnership_126": {
                  "entryPoint": 6471,
                  "id": 126,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@tryRecover_398": {
                  "entryPoint": 8277,
                  "id": 398,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "@tryRecover_586": {
                  "entryPoint": 8539,
                  "id": 586,
                  "parameterSlots": 4,
                  "returnSlots": 3
                },
                "@updateAllocationConfig_1524": {
                  "entryPoint": 3436,
                  "id": 1524,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "@userIdToVerification_792": {
                  "entryPoint": 2580,
                  "id": 792,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@userVerifications_787": {
                  "entryPoint": 3382,
                  "id": 787,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@verificationEnabled_807": {
                  "entryPoint": null,
                  "id": 807,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "@verifyProfileZKsync_1215": {
                  "entryPoint": 3013,
                  "id": 1215,
                  "parameterSlots": 1,
                  "returnSlots": 0
                },
                "@verifyProfile_1191": {
                  "entryPoint": 3492,
                  "id": 1191,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "@walletToEmail_778": {
                  "entryPoint": 4181,
                  "id": 778,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "abi_decode_address": {
                  "entryPoint": 9259,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_decode_string": {
                  "entryPoint": 8891,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_address": {
                  "entryPoint": 9287,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_addresst_bytes_memory_ptr": {
                  "entryPoint": 9837,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr": {
                  "entryPoint": 9003,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool": {
                  "entryPoint": 9632,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bool_fromMemory": {
                  "entryPoint": 10666,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_bytes32_fromMemory": {
                  "entryPoint": 10422,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_memory_ptr": {
                  "entryPoint": 9198,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr": {
                  "entryPoint": 9718,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 2
                },
                "abi_decode_tuple_t_uint256": {
                  "entryPoint": 9514,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_decode_tuple_t_uint256t_uint256t_bool": {
                  "entryPoint": 9661,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 3
                },
                "abi_encode_string": {
                  "entryPoint": 9357,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 9927,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": 10331,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed": {
                  "entryPoint": 10386,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9818,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed": {
                  "entryPoint": 9539,
                  "id": null,
                  "parameterSlots": 8,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_21752e5fb30f2e3d9a07de7f3a59379f03aa04cdf0ed3702f1fc6081df206483__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_3ee96f563823b48ab15318af34481b27fd41d459a1b536c3efb82855f51e6fc0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_51a5dc8d093320dcfe33c4f3a3bd03c6b9bdae61c40ca4e94ad794f0077c9740__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_60de3889a5b52e49c87917d958b2a4b2f9146a238f4c8c2e22811b5781fc4a62__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_62906b4e82321b2cea691e4e8088b41f65fbd95ff33eb7e1426e8b87a37b6e37__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_90e93d5c0b6701c09679aa7793aa6d0dbef5cef46c639b627bd173fa717050f0__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_af1a393559512be6c55d6978c619b46ee67fad8e3bbc89007ccdda693aa2422a__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_afbf1d0b13ec9b764798be94a22e072dfb239d0483237e4237274046b76394a6__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_ca8d93cc1c52ed607cd27cd7b5a33f9e9e6a54f2bfb27d48de91fc521b36d7ac__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_cec53ba2988bed19dddd8443c33545ef2a705798ff897f474df3d63aeab0685b__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_f0db12b76609b1e57cae053ab2c6a952047560e1f7641c32494e13a4a7981fd4__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_stringliteral_fae6115c28d80da154a08639f8e56a90d7b6412f7bcd8962b78156e848495a68__to_t_string_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_AllocationConfig_$770_memory_ptr__to_t_struct$_AllocationConfig_$770_memory_ptr__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_struct$_UserVerification_$761_memory_ptr__to_t_struct$_UserVerification_$761_memory_ptr__fromStack_reversed": {
                  "entryPoint": 9401,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 4,
                  "returnSlots": 1
                },
                "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 5,
                  "returnSlots": 1
                },
                "allocate_memory": {
                  "entryPoint": 8842,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "array_dataslot_string_storage": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "checked_add_t_uint8": {
                  "entryPoint": 10695,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "clean_up_bytearray_end_slots_string_storage": {
                  "entryPoint": 10060,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
                  "entryPoint": 10139,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage": {
                  "entryPoint": 10447,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 0
                },
                "copy_memory_to_memory_with_cleanup": {
                  "entryPoint": 9321,
                  "id": null,
                  "parameterSlots": 3,
                  "returnSlots": 0
                },
                "extract_byte_array_length": {
                  "entryPoint": 10002,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "extract_used_part_and_set_length_of_short_byte_array": {
                  "entryPoint": null,
                  "id": null,
                  "parameterSlots": 2,
                  "returnSlots": 1
                },
                "increment_t_uint256": {
                  "entryPoint": 9977,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 1
                },
                "panic_error_0x11": {
                  "entryPoint": 9955,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x21": {
                  "entryPoint": 10720,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x32": {
                  "entryPoint": 9905,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "panic_error_0x41": {
                  "entryPoint": 8820,
                  "id": null,
                  "parameterSlots": 0,
                  "returnSlots": 0
                },
                "validator_revert_bool": {
                  "entryPoint": 9618,
                  "id": null,
                  "parameterSlots": 1,
                  "returnSlots": 0
                }
              },
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:22803:6",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:6",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "46:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "63:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "70:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "75:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "66:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "66:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "56:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "56:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "56:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "103:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "106:4:6",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "96:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "96:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "96:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "127:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "130:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "120:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "120:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "120:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "14:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "191:230:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "201:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "217:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "211:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "211:9:6"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "201:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "229:58:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "251:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "267:4:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "273:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "263:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "263:13:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "282:2:6",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "278:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "278:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "259:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "259:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "247:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "247:40:6"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "233:10:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "362:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "364:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "364:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "364:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "305:10:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "317:18:6",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "302:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "302:34:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "341:10:6"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "353:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "338:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "338:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "299:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "299:62:6"
                              },
                              "nodeType": "YulIf",
                              "src": "296:88:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "400:2:6",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "404:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "393:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "393:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "393:22:6"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "171:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "180:6:6",
                            "type": ""
                          }
                        ],
                        "src": "146:275:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "479:478:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "528:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "537:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "540:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "530:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "530:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "530:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "507:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "515:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "503:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "503:17:6"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "522:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "499:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "499:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "492:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "492:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "489:55:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "553:30:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "576:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "563:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "563:20:6"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "557:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "622:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "624:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "624:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "624:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "598:2:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "595:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "595:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "592:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "653:70:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "696:2:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "700:4:6",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "692:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "692:13:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "711:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "707:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "707:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "688:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "688:27:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "717:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "684:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "684:38:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "668:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "668:55:6"
                              },
                              "variables": [
                                {
                                  "name": "array_1",
                                  "nodeType": "YulTypedName",
                                  "src": "657:7:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "739:7:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "748:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "732:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "732:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "732:19:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "799:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "808:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "811:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "801:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "801:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "801:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "774:6:6"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "782:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "770:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "770:15:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "787:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "766:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "766:26:6"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "794:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "763:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "763:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "760:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "841:7:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "850:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "837:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "837:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "861:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "869:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "857:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "857:17:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "876:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "824:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "824:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "824:55:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "903:7:6"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "912:2:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "899:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "899:16:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "917:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "895:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "895:27:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "924:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "888:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "888:38:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "888:38:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "935:16:6",
                              "value": {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "944:7:6"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "935:5:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "453:6:6",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "461:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "469:5:6",
                            "type": ""
                          }
                        ],
                        "src": "426:531:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1067:1062:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1077:12:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1087:2:6",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1081:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1134:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1143:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1146:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1136:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1136:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1136:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1109:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1118:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1105:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1105:23:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1130:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1101:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1101:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1098:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1159:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1186:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1173:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1173:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1163:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1205:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1215:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1209:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1260:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1269:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1272:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1262:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1262:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1262:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1248:6:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1256:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1245:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1245:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1242:34:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1285:32:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1299:9:6"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1310:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1295:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1295:22:6"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1289:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1365:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1374:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1377:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1367:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1367:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1367:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1344:2:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1348:4:6",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1340:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1340:13:6"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1355:7:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1336:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1336:27:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1329:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1329:35:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1326:55:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1390:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1413:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1400:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1400:16:6"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1394:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1439:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "1441:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1441:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1441:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1431:2:6"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1435:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1428:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1428:10:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1425:36:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1470:20:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1484:1:6",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1487:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1480:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1480:10:6"
                              },
                              "variables": [
                                {
                                  "name": "_5",
                                  "nodeType": "YulTypedName",
                                  "src": "1474:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1499:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "1530:2:6"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1534:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1526:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1526:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1510:15:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1510:28:6"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1503:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1547:16:6",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1560:3:6"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1551:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1579:3:6"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1584:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1572:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1572:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1572:15:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1596:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1607:3:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1612:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1603:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1603:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "1596:3:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1624:34:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1646:2:6"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "1650:2:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1642:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1642:11:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1655:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1638:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1638:20:6"
                              },
                              "variables": [
                                {
                                  "name": "srcEnd",
                                  "nodeType": "YulTypedName",
                                  "src": "1628:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1690:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1699:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1702:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1692:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1692:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1692:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1673:6:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1681:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1670:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1670:19:6"
                              },
                              "nodeType": "YulIf",
                              "src": "1667:39:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1715:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1730:2:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1734:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1726:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1726:11:6"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "1719:3:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1802:297:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "1816:36:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1848:3:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "1835:12:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1835:17:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "innerOffset",
                                        "nodeType": "YulTypedName",
                                        "src": "1820:11:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "1900:74:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulVariableDeclaration",
                                          "src": "1918:11:6",
                                          "value": {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1928:1:6",
                                            "type": "",
                                            "value": "0"
                                          },
                                          "variables": [
                                            {
                                              "name": "_6",
                                              "nodeType": "YulTypedName",
                                              "src": "1922:2:6",
                                              "type": ""
                                            }
                                          ]
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "_6",
                                                "nodeType": "YulIdentifier",
                                                "src": "1953:2:6"
                                              },
                                              {
                                                "name": "_6",
                                                "nodeType": "YulIdentifier",
                                                "src": "1957:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "1946:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1946:14:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "1946:14:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "innerOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "1871:11:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "1884:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "1868:2:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1868:19:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "1865:109:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "1994:3:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_3",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2025:2:6"
                                                    },
                                                    {
                                                      "name": "innerOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2029:11:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2021:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2021:20:6"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2043:2:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2017:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2017:29:6"
                                            },
                                            {
                                              "name": "dataEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "2048:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_string",
                                            "nodeType": "YulIdentifier",
                                            "src": "1999:17:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1999:57:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1987:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1987:70:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1987:70:6"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2070:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2081:3:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2086:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2077:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2077:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2070:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "1757:3:6"
                                  },
                                  {
                                    "name": "srcEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1762:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1754:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1754:15:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1770:23:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1772:19:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "1783:3:6"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1788:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1779:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1779:12:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "1772:3:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1750:3:6",
                                "statements": []
                              },
                              "src": "1746:353:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2108:15:6",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "2118:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1033:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1044:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1056:6:6",
                            "type": ""
                          }
                        ],
                        "src": "962:1167:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2214:242:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2260:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2269:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2272:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2262:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2262:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2262:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2235:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2244:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2231:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2231:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2256:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2227:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2227:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2224:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2285:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2312:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2299:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2299:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "2289:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2365:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2374:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2377:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2367:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2367:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2367:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "2337:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2345:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2334:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2334:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "2331:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2390:60:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2422:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "2433:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2418:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2418:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2442:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "2400:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2400:50:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2390:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2180:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2191:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2203:6:6",
                            "type": ""
                          }
                        ],
                        "src": "2134:322:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2562:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2572:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2584:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2595:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2580:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2580:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2572:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2614:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2629:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2645:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2650:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2641:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2641:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2654:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "2637:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2637:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "2625:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2625:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2607:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2607:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2607:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2531:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2542:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2553:4:6",
                            "type": ""
                          }
                        ],
                        "src": "2461:203:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2836:289:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "2846:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2858:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2869:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2854:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2854:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2846:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2889:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "2906:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2900:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2900:13:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2882:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2882:32:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2882:32:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2934:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2945:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2930:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2930:20:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "2962:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "2970:4:6",
                                            "type": "",
                                            "value": "0x20"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2958:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2958:17:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2952:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2952:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2923:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2923:54:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2923:54:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2997:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3008:4:6",
                                        "type": "",
                                        "value": "0x40"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2993:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2993:20:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "3025:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "3033:4:6",
                                            "type": "",
                                            "value": "0x40"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "3021:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3021:17:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "3015:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3015:24:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2986:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2986:54:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2986:54:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3060:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3071:4:6",
                                        "type": "",
                                        "value": "0x60"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3056:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3056:20:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "3102:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3110:4:6",
                                                    "type": "",
                                                    "value": "0x60"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3098:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3098:17:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "3092:5:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3092:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "3085:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3085:32:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "3078:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3078:40:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3049:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3049:70:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3049:70:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_AllocationConfig_$770_memory_ptr__to_t_struct$_AllocationConfig_$770_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2805:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2816:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2827:4:6",
                            "type": ""
                          }
                        ],
                        "src": "2669:456:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3231:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3241:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3253:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3264:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3249:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3249:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3241:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3283:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "3294:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3276:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3276:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3276:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3200:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3211:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3222:4:6",
                            "type": ""
                          }
                        ],
                        "src": "3130:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3361:124:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "3371:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3393:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3380:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3380:20:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "3371:5:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3463:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3472:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3475:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3465:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3465:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3465:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3422:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "3433:5:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3448:3:6",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "3453:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3444:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "3444:11:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "3457:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "3440:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "3440:19:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "3429:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "3429:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "3419:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3419:42:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3412:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3412:50:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3409:70:6"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "3340:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3351:5:6",
                            "type": ""
                          }
                        ],
                        "src": "3312:173:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3560:116:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3606:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3615:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3618:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3608:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3608:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3608:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3581:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3590:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3577:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3577:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3602:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3573:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3573:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "3570:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3631:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3660:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "3641:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3641:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3631:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3526:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3537:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3549:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3490:186:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3747:184:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3757:10:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3766:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "3761:1:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3826:63:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "3851:3:6"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "3856:1:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "3847:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3847:11:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3870:3:6"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "3875:1:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "3866:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "3866:11:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "3860:5:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "3860:18:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "3840:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3840:39:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3840:39:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "3787:1:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "3790:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3784:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3784:13:6"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "3798:19:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "3800:15:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "3809:1:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "3812:2:6",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "3805:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3805:10:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "3800:1:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "3780:3:6",
                                "statements": []
                              },
                              "src": "3776:113:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "3909:3:6"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "3914:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3905:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3905:16:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3923:1:6",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3898:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3898:27:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3898:27:6"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory_with_cleanup",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "3725:3:6",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "3730:3:6",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "3735:6:6",
                            "type": ""
                          }
                        ],
                        "src": "3681:250:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3986:221:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3996:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4016:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4010:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4010:12:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "4000:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "4038:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4043:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4031:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4031:19:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4031:19:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "4098:5:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4105:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4094:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4094:16:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4116:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4121:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4112:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4112:14:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "4128:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "4059:34:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4059:76:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4059:76:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4144:57:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "4159:3:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "4172:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4180:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4168:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4168:15:6"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4189:2:6",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "4185:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4185:7:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "4164:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4164:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4155:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4155:39:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4196:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4151:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4151:50:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "4144:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "3963:5:6",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "3970:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "3978:3:6",
                            "type": ""
                          }
                        ],
                        "src": "3936:271:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4379:638:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4396:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4407:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4389:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4389:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4389:21:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4419:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4445:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4439:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4439:13:6"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "4423:12:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4472:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4483:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4468:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4468:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4488:4:6",
                                    "type": "",
                                    "value": "0xe0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4461:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4461:32:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4461:32:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4502:66:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4534:12:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4552:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4563:3:6",
                                        "type": "",
                                        "value": "256"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4548:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4548:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "4516:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4516:52:6"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4506:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4588:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4599:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4584:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4584:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value0",
                                                "nodeType": "YulIdentifier",
                                                "src": "4618:6:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4626:2:6",
                                                "type": "",
                                                "value": "32"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "4614:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4614:15:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "4608:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4608:22:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4640:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "4645:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "4636:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4636:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4649:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "4632:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4632:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "4604:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4604:48:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4577:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4577:76:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4577:76:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4673:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4684:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4669:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4669:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "4699:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4707:2:6",
                                            "type": "",
                                            "value": "64"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4695:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4695:15:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4689:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4689:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4662:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4662:50:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4662:50:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4732:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4743:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4728:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4728:19:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "4759:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4767:2:6",
                                            "type": "",
                                            "value": "96"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4755:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4755:15:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4749:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4749:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4721:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4721:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4721:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4792:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4803:3:6",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4788:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4788:19:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4833:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4841:3:6",
                                                    "type": "",
                                                    "value": "128"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4829:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4829:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "4823:5:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4823:23:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4816:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4816:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4809:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4809:39:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4781:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4781:68:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4781:68:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4869:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4880:3:6",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4865:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4865:19:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "4910:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "4918:3:6",
                                                    "type": "",
                                                    "value": "160"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "4906:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "4906:16:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "4900:5:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "4900:23:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "4893:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4893:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "4886:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4886:39:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4858:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4858:68:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4858:68:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4946:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4957:4:6",
                                        "type": "",
                                        "value": "0xe0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4942:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4942:20:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "4974:6:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "4982:3:6",
                                            "type": "",
                                            "value": "192"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "4970:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "4970:16:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "4964:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4964:23:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4935:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4935:53:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4935:53:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4997:14:6",
                              "value": {
                                "name": "tail_1",
                                "nodeType": "YulIdentifier",
                                "src": "5005:6:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4997:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_UserVerification_$761_memory_ptr__to_t_struct$_UserVerification_$761_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4348:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4359:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4370:4:6",
                            "type": ""
                          }
                        ],
                        "src": "4212:805:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5201:222:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5211:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5223:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5234:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5219:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5219:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5211:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5254:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5265:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5247:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5247:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5247:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5292:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5303:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5288:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5288:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5308:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5281:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5281:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5281:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5335:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5346:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5331:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5331:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5351:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5324:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5324:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5324:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5378:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5389:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5374:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5374:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value3",
                                            "nodeType": "YulIdentifier",
                                            "src": "5408:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "5401:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5401:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "5394:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5394:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5367:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5367:50:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5367:50:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5146:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5157:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5165:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5173:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5181:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5192:4:6",
                            "type": ""
                          }
                        ],
                        "src": "5022:401:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5498:110:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5544:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5553:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5556:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5546:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5546:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5546:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5519:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5528:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5515:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5515:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5540:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5511:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5511:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "5508:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5569:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5592:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5579:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5579:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5569:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5464:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5475:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5487:6:6",
                            "type": ""
                          }
                        ],
                        "src": "5428:180:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5890:420:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5907:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5918:3:6",
                                    "type": "",
                                    "value": "224"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5900:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5900:22:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5900:22:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5931:54:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5957:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5969:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5980:3:6",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5965:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5965:19:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "5939:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5939:46:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5931:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6005:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6016:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6001:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6001:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "6025:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6041:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "6046:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "6037:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6037:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "6050:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "6033:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6033:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "6021:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6021:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5994:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5994:60:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5994:60:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6074:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6085:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6070:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6070:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "6090:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6063:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6063:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6063:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6117:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6128:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6113:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6113:18:6"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "6133:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6106:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6106:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6106:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6160:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6171:3:6",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6156:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6156:19:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value4",
                                            "nodeType": "YulIdentifier",
                                            "src": "6191:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6184:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6184:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6177:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6177:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6149:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6149:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6149:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6220:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6231:3:6",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6216:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6216:19:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value5",
                                            "nodeType": "YulIdentifier",
                                            "src": "6251:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6244:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6244:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "6237:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6237:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6209:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6209:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6209:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6280:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6291:3:6",
                                        "type": "",
                                        "value": "192"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6276:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6276:19:6"
                                  },
                                  {
                                    "name": "value6",
                                    "nodeType": "YulIdentifier",
                                    "src": "6297:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6269:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6269:35:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6269:35:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5811:9:6",
                            "type": ""
                          },
                          {
                            "name": "value6",
                            "nodeType": "YulTypedName",
                            "src": "5822:6:6",
                            "type": ""
                          },
                          {
                            "name": "value5",
                            "nodeType": "YulTypedName",
                            "src": "5830:6:6",
                            "type": ""
                          },
                          {
                            "name": "value4",
                            "nodeType": "YulTypedName",
                            "src": "5838:6:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "5846:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "5854:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5862:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5870:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5881:4:6",
                            "type": ""
                          }
                        ],
                        "src": "5613:697:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6357:76:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6411:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6420:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6423:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6413:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6413:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6413:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "6380:5:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "6401:5:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "6394:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "6394:13:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "6387:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "6387:21:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "6377:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6377:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6370:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6370:40:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6367:60:6"
                            }
                          ]
                        },
                        "name": "validator_revert_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6346:5:6",
                            "type": ""
                          }
                        ],
                        "src": "6315:118:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6505:174:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6551:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6560:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6563:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6553:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6553:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6553:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6526:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6535:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6522:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6522:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6547:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6518:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6518:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6515:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6576:36:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6602:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6589:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6589:23:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "6580:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6643:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "6621:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6621:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6621:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6658:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "6668:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6658:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6471:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6482:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6494:6:6",
                            "type": ""
                          }
                        ],
                        "src": "6438:241:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6754:110:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6800:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6809:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "6812:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6802:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6802:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6802:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6775:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6784:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6771:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6771:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6796:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6767:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6767:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "6764:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6825:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6848:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6835:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6835:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6825:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6720:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6731:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6743:6:6",
                            "type": ""
                          }
                        ],
                        "src": "6684:180:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6964:92:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6974:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6986:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6997:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6982:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6982:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6974:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7016:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "7041:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "7034:6:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "7034:14:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "7027:6:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7027:22:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7009:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7009:41:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7009:41:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6933:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6944:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6955:4:6",
                            "type": ""
                          }
                        ],
                        "src": "6869:187:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7162:276:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7208:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7217:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7220:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7210:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7210:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7210:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7183:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7192:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7179:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7179:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7204:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7175:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7175:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7172:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7233:33:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7256:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7243:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7243:23:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7233:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7275:42:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7302:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7313:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7298:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7298:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7285:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7285:32:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7275:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7326:45:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7356:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7367:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7352:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7352:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7339:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7339:32:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "7330:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7402:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "7380:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7380:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7380:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7417:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "7427:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "7417:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256t_bool",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7112:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7123:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7135:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7143:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "7151:6:6",
                            "type": ""
                          }
                        ],
                        "src": "7061:377:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7549:436:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7595:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7604:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7607:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7597:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7597:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7597:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "7570:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7579:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "7566:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7566:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7591:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7562:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7562:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7559:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7620:37:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7647:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7634:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7634:23:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "7624:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7666:28:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7676:18:6",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7670:2:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7721:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7730:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7733:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7723:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7723:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7723:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "7709:6:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7717:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7706:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7706:14:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7703:34:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7746:60:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7778:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "7789:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7774:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7774:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7798:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "7756:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7756:50:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "7746:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7815:48:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7848:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7859:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7844:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7844:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7831:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7831:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "7819:8:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7892:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7901:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7904:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "7894:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7894:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7894:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7878:8:6"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7888:2:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7875:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7875:16:6"
                              },
                              "nodeType": "YulIf",
                              "src": "7872:36:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7917:62:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7949:9:6"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "7960:8:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7945:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7945:24:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "7971:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "7927:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7927:52:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "7917:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7507:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "7518:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7530:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "7538:6:6",
                            "type": ""
                          }
                        ],
                        "src": "7443:542:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8111:99:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8128:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8139:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8121:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8121:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8121:21:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8151:53:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8177:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8189:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8200:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8185:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8185:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "8159:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8159:45:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8151:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8080:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8091:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8102:4:6",
                            "type": ""
                          }
                        ],
                        "src": "7990:220:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8311:299:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8357:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8366:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8369:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8359:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8359:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8359:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "8332:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8341:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "8328:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8328:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8353:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8324:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8324:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8321:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8382:39:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8411:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "8392:18:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8392:29:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "8382:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8430:46:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8461:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8472:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8457:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8457:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8444:12:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8444:32:6"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "8434:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8519:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8528:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8531:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8521:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8521:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8521:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "8491:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8499:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "8488:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8488:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "8485:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8544:60:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8576:9:6"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "8587:6:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8572:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8572:22:6"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "8596:7:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "8554:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8554:50:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "8544:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8269:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "8280:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8292:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8300:6:6",
                            "type": ""
                          }
                        ],
                        "src": "8215:395:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8716:76:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8726:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8738:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8749:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8734:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8734:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8726:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8768:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8779:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8761:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8761:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8761:25:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8685:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8696:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8707:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8615:177:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8912:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8922:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8934:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8945:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8930:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8930:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8922:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8964:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8979:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8995:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "9000:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "8991:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8991:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9004:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "8987:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8987:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8975:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8975:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8957:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8957:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8957:51:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8881:9:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8892:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8903:4:6",
                            "type": ""
                          }
                        ],
                        "src": "8797:217:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9051:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9068:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9075:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9080:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9071:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9071:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9061:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9061:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9061:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9108:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9111:4:6",
                                    "type": "",
                                    "value": "0x32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9101:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9101:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9101:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9132:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9135:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9125:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9125:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9125:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x32",
                        "nodeType": "YulFunctionDefinition",
                        "src": "9019:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9290:150:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9300:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9320:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "9314:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9314:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "9304:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9375:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9383:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9371:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9371:17:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9390:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9395:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "9336:34:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9336:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9336:66:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9411:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "9422:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "9427:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9418:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9418:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "9411:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "9266:3:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9271:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "9282:3:6",
                            "type": ""
                          }
                        ],
                        "src": "9151:289:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9477:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9494:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9501:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9506:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9497:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9497:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9487:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9487:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9487:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9534:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9537:4:6",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9527:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9527:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9527:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9558:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9561:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "9551:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9551:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9551:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "9445:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9624:88:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "9655:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "9657:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "9657:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "9657:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9640:5:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9651:1:6",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "9647:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9647:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "9637:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9637:17:6"
                              },
                              "nodeType": "YulIf",
                              "src": "9634:43:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9686:20:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "9697:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9704:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9693:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9693:13:6"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "9686:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "9606:5:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "9616:3:6",
                            "type": ""
                          }
                        ],
                        "src": "9577:135:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9891:165:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9908:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9919:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9901:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9901:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9901:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9942:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9953:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9938:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9938:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9958:2:6",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9931:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9931:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9931:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9981:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9992:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9977:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9977:18:6"
                                  },
                                  {
                                    "hexValue": "55736572206e6f7420616374697665",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "9997:17:6",
                                    "type": "",
                                    "value": "User not active"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9970:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9970:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9970:45:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10024:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10036:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10047:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10032:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10032:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10024:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_62906b4e82321b2cea691e4e8088b41f65fbd95ff33eb7e1426e8b87a37b6e37__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9868:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9882:4:6",
                            "type": ""
                          }
                        ],
                        "src": "9717:339:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10116:325:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "10126:22:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10140:1:6",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "10143:4:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "10136:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10136:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10126:6:6"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10157:38:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "10187:4:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10193:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "10183:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10183:12:6"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "10161:18:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10234:31:6",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "10236:27:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "10250:6:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10258:4:6",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "10246:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10246:17:6"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "10236:6:6"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "10214:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "10207:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10207:26:6"
                              },
                              "nodeType": "YulIf",
                              "src": "10204:61:6"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10324:111:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10345:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10352:3:6",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10357:10:6",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "10348:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10348:20:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10338:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10338:31:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10338:31:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10389:1:6",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10392:4:6",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10382:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10382:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10382:15:6"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10417:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10420:4:6",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "10410:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10410:15:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10410:15:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "10280:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "10303:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10311:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "10300:2:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10300:14:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "10277:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10277:38:6"
                              },
                              "nodeType": "YulIf",
                              "src": "10274:161:6"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "10096:4:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "10105:6:6",
                            "type": ""
                          }
                        ],
                        "src": "10061:380:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10502:65:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10519:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "ptr",
                                    "nodeType": "YulIdentifier",
                                    "src": "10522:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10512:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10512:14:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10512:14:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10535:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10553:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10556:4:6",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "keccak256",
                                  "nodeType": "YulIdentifier",
                                  "src": "10543:9:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10543:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "data",
                                  "nodeType": "YulIdentifier",
                                  "src": "10535:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_dataslot_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "ptr",
                            "nodeType": "YulTypedName",
                            "src": "10485:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "10493:4:6",
                            "type": ""
                          }
                        ],
                        "src": "10446:121:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10653:464:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "10686:425:6",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10700:11:6",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "10710:1:6",
                                      "type": "",
                                      "value": "0"
                                    },
                                    "variables": [
                                      {
                                        "name": "_1",
                                        "nodeType": "YulTypedName",
                                        "src": "10704:2:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10731:2:6"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "10735:5:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "10724:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10724:17:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "10724:17:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10754:31:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "10776:2:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10780:4:6",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "keccak256",
                                        "nodeType": "YulIdentifier",
                                        "src": "10766:9:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10766:19:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulTypedName",
                                        "src": "10758:4:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10798:57:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "10821:4:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10831:1:6",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "startIndex",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10838:10:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10850:2:6",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10834:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10834:19:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "10827:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10827:27:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10817:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10817:38:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "deleteStart",
                                        "nodeType": "YulTypedName",
                                        "src": "10802:11:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "10892:23:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "10894:19:6",
                                          "value": {
                                            "name": "data",
                                            "nodeType": "YulIdentifier",
                                            "src": "10909:4:6"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "deleteStart",
                                              "nodeType": "YulIdentifier",
                                              "src": "10894:11:6"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "startIndex",
                                          "nodeType": "YulIdentifier",
                                          "src": "10874:10:6"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "10886:4:6",
                                          "type": "",
                                          "value": "0x20"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "10871:2:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10871:20:6"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "10868:47:6"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10928:41:6",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "data",
                                          "nodeType": "YulIdentifier",
                                          "src": "10942:4:6"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "10952:1:6",
                                              "type": "",
                                              "value": "5"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "len",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "10959:3:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "10964:2:6",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "10955:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "10955:12:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shr",
                                            "nodeType": "YulIdentifier",
                                            "src": "10948:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "10948:20:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "10938:3:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "10938:31:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "10932:2:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "10982:24:6",
                                    "value": {
                                      "name": "deleteStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "10995:11:6"
                                    },
                                    "variables": [
                                      {
                                        "name": "start",
                                        "nodeType": "YulTypedName",
                                        "src": "10986:5:6",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "11080:21:6",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "11089:5:6"
                                              },
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "11096:2:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "11082:6:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11082:17:6"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "11082:17:6"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "start",
                                          "nodeType": "YulIdentifier",
                                          "src": "11030:5:6"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "11037:2:6"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "lt",
                                        "nodeType": "YulIdentifier",
                                        "src": "11027:2:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11027:13:6"
                                    },
                                    "nodeType": "YulForLoop",
                                    "post": {
                                      "nodeType": "YulBlock",
                                      "src": "11041:26:6",
                                      "statements": [
                                        {
                                          "nodeType": "YulAssignment",
                                          "src": "11043:22:6",
                                          "value": {
                                            "arguments": [
                                              {
                                                "name": "start",
                                                "nodeType": "YulIdentifier",
                                                "src": "11056:5:6"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "11063:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "11052:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11052:13:6"
                                          },
                                          "variableNames": [
                                            {
                                              "name": "start",
                                              "nodeType": "YulIdentifier",
                                              "src": "11043:5:6"
                                            }
                                          ]
                                        }
                                      ]
                                    },
                                    "pre": {
                                      "nodeType": "YulBlock",
                                      "src": "11023:3:6",
                                      "statements": []
                                    },
                                    "src": "11019:82:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "len",
                                    "nodeType": "YulIdentifier",
                                    "src": "10669:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10674:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "10666:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10666:11:6"
                              },
                              "nodeType": "YulIf",
                              "src": "10663:448:6"
                            }
                          ]
                        },
                        "name": "clean_up_bytearray_end_slots_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "10625:5:6",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "10632:3:6",
                            "type": ""
                          },
                          {
                            "name": "startIndex",
                            "nodeType": "YulTypedName",
                            "src": "10637:10:6",
                            "type": ""
                          }
                        ],
                        "src": "10572:545:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11207:81:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "11217:65:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "data",
                                        "nodeType": "YulIdentifier",
                                        "src": "11232:4:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11250:1:6",
                                                    "type": "",
                                                    "value": "3"
                                                  },
                                                  {
                                                    "name": "len",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11253:3:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11246:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11246:11:6"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "11263:1:6",
                                                    "type": "",
                                                    "value": "0"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "not",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11259:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11259:6:6"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shr",
                                              "nodeType": "YulIdentifier",
                                              "src": "11242:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "11242:24:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "11238:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11238:29:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "11228:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11228:40:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11274:1:6",
                                        "type": "",
                                        "value": "1"
                                      },
                                      {
                                        "name": "len",
                                        "nodeType": "YulIdentifier",
                                        "src": "11277:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "11270:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11270:11:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "11225:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11225:57:6"
                              },
                              "variableNames": [
                                {
                                  "name": "used",
                                  "nodeType": "YulIdentifier",
                                  "src": "11217:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "extract_used_part_and_set_length_of_short_byte_array",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "11184:4:6",
                            "type": ""
                          },
                          {
                            "name": "len",
                            "nodeType": "YulTypedName",
                            "src": "11190:3:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "used",
                            "nodeType": "YulTypedName",
                            "src": "11198:4:6",
                            "type": ""
                          }
                        ],
                        "src": "11122:166:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11389:1256:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11399:24:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "11419:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "11413:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11413:10:6"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "11403:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "11466:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "11468:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "11468:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "11468:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "11438:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11446:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11435:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11435:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "11432:56:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "11541:4:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "11579:4:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "11573:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "11573:11:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "11547:25:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11547:38:6"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "11587:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "11497:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11497:97:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11497:97:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11603:18:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11620:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "11607:9:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "11630:23:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11649:4:6",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "11634:11:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11662:24:6",
                              "value": {
                                "name": "srcOffset_1",
                                "nodeType": "YulIdentifier",
                                "src": "11675:11:6"
                              },
                              "variableNames": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulIdentifier",
                                  "src": "11662:9:6"
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "11732:656:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11746:35:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "11765:6:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "11777:2:6",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "11773:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "11773:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "11761:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11761:20:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "11750:7:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11794:49:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "11838:4:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "11808:29:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11808:35:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "11798:6:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "11856:10:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "11865:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "11860:1:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "11943:172:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11968:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11986:3:6"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "11991:9:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "11982:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "11982:19:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "mload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "11976:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "11976:26:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11961:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11961:42:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "11961:42:6"
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "12020:24:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12034:6:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "12042:1:6",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12030:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12030:14:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12020:6:6"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "12061:40:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12078:9:6"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12089:11:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12074:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12074:27:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12061:9:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "11890:1:6"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "11893:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "11887:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "11887:14:6"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "11902:28:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "11904:24:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11913:1:6"
                                                  },
                                                  {
                                                    "name": "srcOffset_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "11916:11:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11909:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "11909:19:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "11904:1:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "11883:3:6",
                                          "statements": []
                                        },
                                        "src": "11879:236:6"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "12163:166:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "12181:43:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12208:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12213:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12204:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12204:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12198:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12198:26:6"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "12185:9:6",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12248:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12260:9:6"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "12287:1:6",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "12290:6:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "12283:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "12283:14:6"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "12299:3:6",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "12279:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "12279:24:6"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "12309:1:6",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "12305:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "12305:6:6"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "12275:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "12275:37:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "12271:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "12271:42:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12256:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12256:58:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12241:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12241:74:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "12241:74:6"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "12134:7:6"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "12143:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "12131:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12131:19:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "12128:201:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "12349:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "12363:1:6",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12366:6:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "12359:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "12359:14:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "12375:1:6",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "12355:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12355:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "12342:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12342:36:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "12342:36:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "11725:663:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11730:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "12405:234:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "12419:14:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "12432:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "12423:5:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "12468:67:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "12486:35:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12505:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "12510:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "12501:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "12501:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "mload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12495:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "12495:26:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12486:5:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "12449:6:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "12446:89:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "12555:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12614:5:6"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "12621:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "12561:52:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "12561:67:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "12548:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "12548:81:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "12548:81:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "12397:242:6",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "11705:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11713:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "11702:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11702:14:6"
                              },
                              "nodeType": "YulSwitch",
                              "src": "11695:944:6"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "11374:4:6",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "11380:3:6",
                            "type": ""
                          }
                        ],
                        "src": "11293:1352:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12824:168:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12841:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12852:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12834:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12834:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12834:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12875:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12886:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12871:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12871:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12891:2:6",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12864:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12864:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12864:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12914:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12925:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12910:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12910:18:6"
                                  },
                                  {
                                    "hexValue": "456d61696c206e6f74207665726966696564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12930:20:6",
                                    "type": "",
                                    "value": "Email not verified"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12903:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12903:48:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12903:48:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12960:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12972:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12983:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12968:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12968:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12960:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fae6115c28d80da154a08639f8e56a90d7b6412f7bcd8962b78156e848495a68__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12801:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12815:4:6",
                            "type": ""
                          }
                        ],
                        "src": "12650:342:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13171:175:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13188:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13199:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13181:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13181:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13181:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13222:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13233:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13218:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13218:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13238:2:6",
                                    "type": "",
                                    "value": "25"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13211:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13211:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13211:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13261:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13272:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13257:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13257:18:6"
                                  },
                                  {
                                    "hexValue": "456d61696c20616c72656164792077686974656c6973746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13277:27:6",
                                    "type": "",
                                    "value": "Email already whitelisted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13250:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13250:55:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13250:55:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13314:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13326:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13337:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13322:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13322:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13314:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3ee96f563823b48ab15318af34481b27fd41d459a1b536c3efb82855f51e6fc0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13148:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13162:4:6",
                            "type": ""
                          }
                        ],
                        "src": "12997:349:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13525:174:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13542:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13553:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13535:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13535:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13535:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13576:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13587:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13572:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13572:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13592:2:6",
                                    "type": "",
                                    "value": "24"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13565:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13565:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13565:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13615:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13626:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13611:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13611:18:6"
                                  },
                                  {
                                    "hexValue": "566572696669636174696f6e2069732064697361626c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13631:26:6",
                                    "type": "",
                                    "value": "Verification is disabled"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13604:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13604:54:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13604:54:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13667:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13679:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13690:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13675:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13675:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13667:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f0db12b76609b1e57cae053ab2c6a952047560e1f7641c32494e13a4a7981fd4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13502:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13516:4:6",
                            "type": ""
                          }
                        ],
                        "src": "13351:348:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13878:170:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13895:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13906:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13888:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13888:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13888:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13929:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13940:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13925:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13925:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13945:2:6",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13918:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13918:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13918:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13968:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13979:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13964:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13964:18:6"
                                  },
                                  {
                                    "hexValue": "456d61696c20616c726561647920696e20757365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13984:22:6",
                                    "type": "",
                                    "value": "Email already in use"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13957:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13957:50:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13957:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14016:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14028:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14039:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14024:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14024:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14016:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cec53ba2988bed19dddd8443c33545ef2a705798ff897f474df3d63aeab0685b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13855:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13869:4:6",
                            "type": ""
                          }
                        ],
                        "src": "13704:344:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14227:171:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14244:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14255:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14237:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14237:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14237:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14278:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14289:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14274:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14274:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14294:2:6",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14267:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14267:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14267:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14317:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14328:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14313:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14313:18:6"
                                  },
                                  {
                                    "hexValue": "57616c6c657420616c726561647920696e20757365",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14333:23:6",
                                    "type": "",
                                    "value": "Wallet already in use"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14306:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14306:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14306:51:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14366:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14378:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14389:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14374:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14374:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14366:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ca8d93cc1c52ed607cd27cd7b5a33f9e9e6a54f2bfb27d48de91fc521b36d7ac__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14204:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14218:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14053:345:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14577:171:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14594:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14605:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14587:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14587:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14587:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14628:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14639:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14624:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14624:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14644:2:6",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14617:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14617:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14617:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14667:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14678:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14663:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14663:18:6"
                                  },
                                  {
                                    "hexValue": "456d61696c206e6f742077686974656c6973746564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14683:23:6",
                                    "type": "",
                                    "value": "Email not whitelisted"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14656:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14656:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14656:51:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14716:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14728:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14739:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14724:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14724:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14716:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_51a5dc8d093320dcfe33c4f3a3bd03c6b9bdae61c40ca4e94ad794f0077c9740__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14554:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14568:4:6",
                            "type": ""
                          }
                        ],
                        "src": "14403:345:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14920:263:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "14930:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "14950:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "14944:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14944:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "14934:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15005:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15013:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15001:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15001:17:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15020:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15025:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "14966:34:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14966:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14966:66:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15041:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15058:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "15063:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15054:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15054:16:6"
                              },
                              "variables": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15045:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15086:5:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15101:2:6",
                                            "type": "",
                                            "value": "96"
                                          },
                                          {
                                            "name": "value1",
                                            "nodeType": "YulIdentifier",
                                            "src": "15105:6:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "15097:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15097:15:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15118:26:6",
                                            "type": "",
                                            "value": "0xffffffffffffffffffffffff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "15114:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15114:31:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "15093:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15093:53:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15079:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15079:68:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15079:68:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15156:21:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "15167:5:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15174:2:6",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15163:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15163:14:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15156:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "14888:3:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "14893:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "14901:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "14912:3:6",
                            "type": ""
                          }
                        ],
                        "src": "14753:430:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15408:160:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15425:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15430:66:6",
                                    "type": "",
                                    "value": "0x19457468657265756d205369676e6564204d6573736167653a0a333200000000"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15418:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15418:79:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15418:79:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "15517:3:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15522:2:6",
                                        "type": "",
                                        "value": "28"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15513:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15513:12:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15527:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15506:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15506:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15506:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15543:19:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "15554:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15559:2:6",
                                    "type": "",
                                    "value": "60"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15550:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15550:12:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "15543:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "15384:3:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15389:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "15400:3:6",
                            "type": ""
                          }
                        ],
                        "src": "15188:380:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15747:167:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15764:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15775:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15757:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15757:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15757:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15798:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15809:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15794:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15794:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15814:2:6",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15787:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15787:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15787:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15837:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15848:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15833:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15833:18:6"
                                  },
                                  {
                                    "hexValue": "496e76616c6964207369676e6174757265",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15853:19:6",
                                    "type": "",
                                    "value": "Invalid signature"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15826:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15826:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15826:47:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15882:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15894:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15905:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15890:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15890:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15882:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15724:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15738:4:6",
                            "type": ""
                          }
                        ],
                        "src": "15573:341:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16093:167:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16110:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16121:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16103:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16103:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16103:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16144:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16155:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16140:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16140:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16160:2:6",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16133:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16133:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16133:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16183:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16194:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16179:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16179:18:6"
                                  },
                                  {
                                    "hexValue": "55736572206e6f74207665726966696564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16199:19:6",
                                    "type": "",
                                    "value": "User not verified"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16172:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16172:47:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16172:47:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16228:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16240:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16251:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16236:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16236:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16228:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16070:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16084:4:6",
                            "type": ""
                          }
                        ],
                        "src": "15919:341:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16439:176:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16456:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16467:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16449:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16449:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16449:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16490:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16501:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16486:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16486:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16506:2:6",
                                    "type": "",
                                    "value": "26"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16479:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16479:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16479:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16529:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16540:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16525:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16525:18:6"
                                  },
                                  {
                                    "hexValue": "4d6967726174696f6e20636f6e7472616374206e6f7420736574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "16545:28:6",
                                    "type": "",
                                    "value": "Migration contract not set"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16518:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16518:56:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16518:56:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16583:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16595:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16606:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16591:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16591:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16583:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_60de3889a5b52e49c87917d958b2a4b2f9146a238f4c8c2e22811b5781fc4a62__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16416:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16430:4:6",
                            "type": ""
                          }
                        ],
                        "src": "16265:350:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16767:168:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16784:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16799:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16815:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16820:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "16811:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16811:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16824:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "16807:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16807:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "16795:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16795:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16777:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16777:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16777:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16848:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16859:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16844:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16844:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16864:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16837:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16837:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16837:30:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16876:53:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16902:6:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16914:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16925:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16910:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16910:18:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "16884:17:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16884:45:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16876:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16728:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "16739:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16747:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16758:4:6",
                            "type": ""
                          }
                        ],
                        "src": "16620:315:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17077:150:6",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17087:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "17107:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17101:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17101:13:6"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "17091:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "17162:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17170:4:6",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17158:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17158:17:6"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17177:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17182:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory_with_cleanup",
                                  "nodeType": "YulIdentifier",
                                  "src": "17123:34:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17123:66:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17123:66:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17198:23:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "17209:3:6"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17214:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17205:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17205:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "17198:3:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "17053:3:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17058:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "17069:3:6",
                            "type": ""
                          }
                        ],
                        "src": "16940:287:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17406:223:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17423:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17434:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17416:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17416:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17416:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17457:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17468:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17453:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17453:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17473:2:6",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17446:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17446:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17446:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17496:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17507:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17492:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17492:18:6"
                                  },
                                  {
                                    "hexValue": "4d6967726174696f6e2070726f6f662067656e65726174696f6e206661696c65",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17512:34:6",
                                    "type": "",
                                    "value": "Migration proof generation faile"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17485:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17485:62:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17485:62:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17567:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17578:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "17563:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17563:18:6"
                                  },
                                  {
                                    "hexValue": "64",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "17583:3:6",
                                    "type": "",
                                    "value": "d"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17556:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17556:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17556:31:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17596:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17608:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17619:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17604:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17604:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "17596:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_21752e5fb30f2e3d9a07de7f3a59379f03aa04cdf0ed3702f1fc6081df206483__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17383:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17397:4:6",
                            "type": ""
                          }
                        ],
                        "src": "17232:397:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17715:103:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17761:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17770:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17773:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "17763:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17763:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17763:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "17736:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "17745:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "17732:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17732:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17757:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17728:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17728:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "17725:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17786:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "17802:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "17796:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17796:16:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "17786:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bytes32_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17681:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "17692:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "17704:6:6",
                            "type": ""
                          }
                        ],
                        "src": "17634:184:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17997:173:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18014:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18025:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18007:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18007:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18007:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18048:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18059:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18044:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18044:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18064:2:6",
                                    "type": "",
                                    "value": "23"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18037:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18037:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18037:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18087:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18098:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18083:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18083:18:6"
                                  },
                                  {
                                    "hexValue": "4e6f20616c6c6f636174696f6e20617661696c61626c65",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18103:25:6",
                                    "type": "",
                                    "value": "No allocation available"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18076:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18076:53:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18076:53:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18138:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18150:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18161:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18146:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18146:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18138:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_af1a393559512be6c55d6978c619b46ee67fad8e3bbc89007ccdda693aa2422a__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "17974:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "17988:4:6",
                            "type": ""
                          }
                        ],
                        "src": "17823:347:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18349:172:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18366:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18377:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18359:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18359:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18359:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18400:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18411:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18396:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18396:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18416:2:6",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18389:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18389:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18389:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18439:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18450:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18435:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18435:18:6"
                                  },
                                  {
                                    "hexValue": "546f6b656e7320616c726561647920636c61696d6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18455:24:6",
                                    "type": "",
                                    "value": "Tokens already claimed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18428:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18428:52:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18428:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18489:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18501:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18512:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18497:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18497:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18489:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18326:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18340:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18175:346:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18700:170:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18717:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18728:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18710:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18710:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18710:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18751:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18762:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18747:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18747:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18767:2:6",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18740:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18740:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18740:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "18790:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18801:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "18786:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18786:18:6"
                                  },
                                  {
                                    "hexValue": "4865616c746820746f6b656e206e6f7420736574",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "18806:22:6",
                                    "type": "",
                                    "value": "Health token not set"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18779:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18779:50:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18779:50:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18838:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "18850:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18861:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18846:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18846:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "18838:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_90e93d5c0b6701c09679aa7793aa6d0dbef5cef46c639b627bd173fa717050f0__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "18677:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "18691:4:6",
                            "type": ""
                          }
                        ],
                        "src": "18526:344:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18968:1338:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18995:9:6",
                                "statements": [
                                  { "nodeType": "YulLeave", "src": "18997:5:6" }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "18984:4:6"
                                  },
                                  {
                                    "name": "src",
                                    "nodeType": "YulIdentifier",
                                    "src": "18990:3:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "18981:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18981:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "18978:26:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19013:51:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "19059:3:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sload",
                                      "nodeType": "YulIdentifier",
                                      "src": "19053:5:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19053:10:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "extract_byte_array_length",
                                  "nodeType": "YulIdentifier",
                                  "src": "19027:25:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19027:37:6"
                              },
                              "variables": [
                                {
                                  "name": "newLen",
                                  "nodeType": "YulTypedName",
                                  "src": "19017:6:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "19107:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "19109:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "19109:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "19109:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "19079:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19087:18:6",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "19076:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19076:30:6"
                              },
                              "nodeType": "YulIf",
                              "src": "19073:56:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "slot",
                                    "nodeType": "YulIdentifier",
                                    "src": "19182:4:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "slot",
                                            "nodeType": "YulIdentifier",
                                            "src": "19220:4:6"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sload",
                                          "nodeType": "YulIdentifier",
                                          "src": "19214:5:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "19214:11:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "extract_byte_array_length",
                                      "nodeType": "YulIdentifier",
                                      "src": "19188:25:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "19188:38:6"
                                  },
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "19228:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "clean_up_bytearray_end_slots_string_storage",
                                  "nodeType": "YulIdentifier",
                                  "src": "19138:43:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19138:97:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "19138:97:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "19244:18:6",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "19261:1:6",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "srcOffset",
                                  "nodeType": "YulTypedName",
                                  "src": "19248:9:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "cases": [
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "19308:741:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19322:35:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "19341:6:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "19353:2:6",
                                                  "type": "",
                                                  "value": "31"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "not",
                                                "nodeType": "YulIdentifier",
                                                "src": "19349:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "19349:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "19337:3:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19337:20:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "loopEnd",
                                            "nodeType": "YulTypedName",
                                            "src": "19326:7:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19370:47:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "19413:3:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "19383:29:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19383:34:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "src_1",
                                            "nodeType": "YulTypedName",
                                            "src": "19374:5:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19430:49:6",
                                        "value": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "19474:4:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "array_dataslot_string_storage",
                                            "nodeType": "YulIdentifier",
                                            "src": "19444:29:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19444:35:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "dstPtr",
                                            "nodeType": "YulTypedName",
                                            "src": "19434:6:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "19492:18:6",
                                        "value": {
                                          "name": "srcOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "19501:9:6"
                                        },
                                        "variables": [
                                          {
                                            "name": "i",
                                            "nodeType": "YulTypedName",
                                            "src": "19496:1:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "19580:194:6",
                                          "statements": [
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19605:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "arguments": [
                                                          {
                                                            "name": "src_1",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19623:5:6"
                                                          },
                                                          {
                                                            "name": "srcOffset",
                                                            "nodeType": "YulIdentifier",
                                                            "src": "19630:9:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "add",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "19619:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "19619:21:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "sload",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19613:5:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19613:28:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19598:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19598:44:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "19598:44:6"
                                            },
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "19659:11:6",
                                              "value": {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "19669:1:6",
                                                "type": "",
                                                "value": "1"
                                              },
                                              "variables": [
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulTypedName",
                                                  "src": "19663:2:6",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "19687:25:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19701:6:6"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19709:2:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19697:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19697:15:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "dstPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19687:6:6"
                                                }
                                              ]
                                            },
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "19729:31:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "srcOffset",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19746:9:6"
                                                  },
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19757:2:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19742:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19742:18:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "srcOffset",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19729:9:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "19534:1:6"
                                            },
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "19537:7:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "19531:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19531:14:6"
                                        },
                                        "nodeType": "YulForLoop",
                                        "post": {
                                          "nodeType": "YulBlock",
                                          "src": "19546:21:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "19548:17:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "name": "i",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19557:1:6"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "19560:4:6",
                                                    "type": "",
                                                    "value": "0x20"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19553:3:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19553:12:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19548:1:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "pre": {
                                          "nodeType": "YulBlock",
                                          "src": "19527:3:6",
                                          "statements": []
                                        },
                                        "src": "19523:251:6"
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "19822:168:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulVariableDeclaration",
                                              "src": "19840:45:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src_1",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19867:5:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19874:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19863:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19863:21:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19857:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19857:28:6"
                                              },
                                              "variables": [
                                                {
                                                  "name": "lastValue",
                                                  "nodeType": "YulTypedName",
                                                  "src": "19844:9:6",
                                                  "type": ""
                                                }
                                              ]
                                            },
                                            {
                                              "expression": {
                                                "arguments": [
                                                  {
                                                    "name": "dstPtr",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "19909:6:6"
                                                  },
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "lastValue",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "19921:9:6"
                                                      },
                                                      {
                                                        "arguments": [
                                                          {
                                                            "arguments": [
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "arguments": [
                                                                      {
                                                                        "kind": "number",
                                                                        "nodeType": "YulLiteral",
                                                                        "src": "19948:1:6",
                                                                        "type": "",
                                                                        "value": "3"
                                                                      },
                                                                      {
                                                                        "name": "newLen",
                                                                        "nodeType": "YulIdentifier",
                                                                        "src": "19951:6:6"
                                                                      }
                                                                    ],
                                                                    "functionName": {
                                                                      "name": "shl",
                                                                      "nodeType": "YulIdentifier",
                                                                      "src": "19944:3:6"
                                                                    },
                                                                    "nodeType": "YulFunctionCall",
                                                                    "src": "19944:14:6"
                                                                  },
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "19960:3:6",
                                                                    "type": "",
                                                                    "value": "248"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "and",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "19940:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "19940:24:6"
                                                              },
                                                              {
                                                                "arguments": [
                                                                  {
                                                                    "kind": "number",
                                                                    "nodeType": "YulLiteral",
                                                                    "src": "19970:1:6",
                                                                    "type": "",
                                                                    "value": "0"
                                                                  }
                                                                ],
                                                                "functionName": {
                                                                  "name": "not",
                                                                  "nodeType": "YulIdentifier",
                                                                  "src": "19966:3:6"
                                                                },
                                                                "nodeType": "YulFunctionCall",
                                                                "src": "19966:6:6"
                                                              }
                                                            ],
                                                            "functionName": {
                                                              "name": "shr",
                                                              "nodeType": "YulIdentifier",
                                                              "src": "19936:3:6"
                                                            },
                                                            "nodeType": "YulFunctionCall",
                                                            "src": "19936:37:6"
                                                          }
                                                        ],
                                                        "functionName": {
                                                          "name": "not",
                                                          "nodeType": "YulIdentifier",
                                                          "src": "19932:3:6"
                                                        },
                                                        "nodeType": "YulFunctionCall",
                                                        "src": "19932:42:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "and",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "19917:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "19917:58:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sstore",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "19902:6:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "19902:74:6"
                                              },
                                              "nodeType": "YulExpressionStatement",
                                              "src": "19902:74:6"
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "arguments": [
                                            {
                                              "name": "loopEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "19793:7:6"
                                            },
                                            {
                                              "name": "newLen",
                                              "nodeType": "YulIdentifier",
                                              "src": "19802:6:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "19790:2:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "19790:19:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "19787:203:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "20010:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "kind": "number",
                                                      "nodeType": "YulLiteral",
                                                      "src": "20024:1:6",
                                                      "type": "",
                                                      "value": "1"
                                                    },
                                                    {
                                                      "name": "newLen",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "20027:6:6"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "shl",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "20020:3:6"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "20020:14:6"
                                                },
                                                {
                                                  "kind": "number",
                                                  "nodeType": "YulLiteral",
                                                  "src": "20036:1:6",
                                                  "type": "",
                                                  "value": "1"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "20016:3:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20016:22:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "20003:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20003:36:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "20003:36:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "19301:748:6",
                                  "value": {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19306:1:6",
                                    "type": "",
                                    "value": "1"
                                  }
                                },
                                {
                                  "body": {
                                    "nodeType": "YulBlock",
                                    "src": "20066:234:6",
                                    "statements": [
                                      {
                                        "nodeType": "YulVariableDeclaration",
                                        "src": "20080:14:6",
                                        "value": {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20093:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        "variables": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulTypedName",
                                            "src": "20084:5:6",
                                            "type": ""
                                          }
                                        ]
                                      },
                                      {
                                        "body": {
                                          "nodeType": "YulBlock",
                                          "src": "20129:67:6",
                                          "statements": [
                                            {
                                              "nodeType": "YulAssignment",
                                              "src": "20147:35:6",
                                              "value": {
                                                "arguments": [
                                                  {
                                                    "arguments": [
                                                      {
                                                        "name": "src",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20166:3:6"
                                                      },
                                                      {
                                                        "name": "srcOffset",
                                                        "nodeType": "YulIdentifier",
                                                        "src": "20171:9:6"
                                                      }
                                                    ],
                                                    "functionName": {
                                                      "name": "add",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "20162:3:6"
                                                    },
                                                    "nodeType": "YulFunctionCall",
                                                    "src": "20162:19:6"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "sload",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20156:5:6"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "20156:26:6"
                                              },
                                              "variableNames": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20147:5:6"
                                                }
                                              ]
                                            }
                                          ]
                                        },
                                        "condition": {
                                          "name": "newLen",
                                          "nodeType": "YulIdentifier",
                                          "src": "20110:6:6"
                                        },
                                        "nodeType": "YulIf",
                                        "src": "20107:89:6"
                                      },
                                      {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "name": "slot",
                                              "nodeType": "YulIdentifier",
                                              "src": "20216:4:6"
                                            },
                                            {
                                              "arguments": [
                                                {
                                                  "name": "value",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20275:5:6"
                                                },
                                                {
                                                  "name": "newLen",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "20282:6:6"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "extract_used_part_and_set_length_of_short_byte_array",
                                                "nodeType": "YulIdentifier",
                                                "src": "20222:52:6"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "20222:67:6"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "sstore",
                                            "nodeType": "YulIdentifier",
                                            "src": "20209:6:6"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "20209:81:6"
                                        },
                                        "nodeType": "YulExpressionStatement",
                                        "src": "20209:81:6"
                                      }
                                    ]
                                  },
                                  "nodeType": "YulCase",
                                  "src": "20058:242:6",
                                  "value": "default"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "newLen",
                                    "nodeType": "YulIdentifier",
                                    "src": "19281:6:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "19289:2:6",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "19278:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "19278:14:6"
                              },
                              "nodeType": "YulSwitch",
                              "src": "19271:1029:6"
                            }
                          ]
                        },
                        "name": "copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "slot",
                            "nodeType": "YulTypedName",
                            "src": "18953:4:6",
                            "type": ""
                          },
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "18959:3:6",
                            "type": ""
                          }
                        ],
                        "src": "18875:1431:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20440:145:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "20450:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20462:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20473:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "20458:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20458:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "20450:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20492:9:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "20507:6:6"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "20523:3:6",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "20528:1:6",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "20519:3:6"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "20519:11:6"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "20532:1:6",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "20515:3:6"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "20515:19:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "20503:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20503:32:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20485:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20485:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20485:51:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20556:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "20567:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "20552:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20552:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "20572:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "20545:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20545:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20545:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20401:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "20412:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20420:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "20431:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20311:274:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "20668:167:6",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "20714:16:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20723:1:6",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "20726:1:6",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "20716:6:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "20716:12:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "20716:12:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "20689:7:6"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "20698:9:6"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "20685:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "20685:23:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "20710:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "20681:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20681:32:6"
                              },
                              "nodeType": "YulIf",
                              "src": "20678:52:6"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "20739:29:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "20758:9:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "20752:5:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20752:16:6"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "20743:5:6",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "20799:5:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "validator_revert_bool",
                                  "nodeType": "YulIdentifier",
                                  "src": "20777:21:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "20777:28:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "20777:28:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "20814:15:6",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "20824:5:6"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "20814:6:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20634:9:6",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "20645:7:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "20657:6:6",
                            "type": ""
                          }
                        ],
                        "src": "20590:245:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21014:171:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21031:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21042:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21024:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21024:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21024:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21065:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21076:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21061:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21061:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21081:2:6",
                                    "type": "",
                                    "value": "21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21054:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21054:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21054:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21104:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21115:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21100:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21100:18:6"
                                  },
                                  {
                                    "hexValue": "546f6b656e207472616e73666572206661696c6564",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21120:23:6",
                                    "type": "",
                                    "value": "Token transfer failed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21093:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21093:51:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21093:51:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21153:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21165:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21176:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21161:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21161:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21153:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "20991:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21005:4:6",
                            "type": ""
                          }
                        ],
                        "src": "20840:345:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21319:119:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21329:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21341:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21352:2:6",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21337:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21337:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21329:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21371:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "21382:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21364:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21364:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21364:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21409:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21420:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21405:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21405:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "21425:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21398:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21398:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21398:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21280:9:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21291:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21299:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21310:4:6",
                            "type": ""
                          }
                        ],
                        "src": "21190:248:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21617:172:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21634:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21645:2:6",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21627:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21627:21:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21627:21:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21668:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21679:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21664:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21664:18:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21684:2:6",
                                    "type": "",
                                    "value": "22"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21657:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21657:30:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21657:30:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "21707:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "21718:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "21703:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "21703:18:6"
                                  },
                                  {
                                    "hexValue": "456d61696c206e6f7420696e2077686974656c697374",
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "21723:24:6",
                                    "type": "",
                                    "value": "Email not in whitelist"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21696:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21696:52:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21696:52:6"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "21757:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21769:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21780:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21765:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21765:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21757:4:6"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_afbf1d0b13ec9b764798be94a22e072dfb239d0483237e4237274046b76394a6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21594:9:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21608:4:6",
                            "type": ""
                          }
                        ],
                        "src": "21443:346:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "21951:162:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "21961:26:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "21973:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "21984:2:6",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "21969:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21969:18:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "21961:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22003:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22014:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "21996:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "21996:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "21996:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22041:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22052:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22037:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22037:18:6"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "22057:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22030:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22030:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22030:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22084:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22095:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22080:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22080:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "22100:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22073:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22073:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22073:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "21904:9:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "21915:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "21923:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "21931:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "21942:4:6",
                            "type": ""
                          }
                        ],
                        "src": "21794:319:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22164:102:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22174:38:6",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "x",
                                        "nodeType": "YulIdentifier",
                                        "src": "22189:1:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22192:4:6",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22185:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22185:12:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "22203:1:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22206:4:6",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22199:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22199:12:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22181:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22181:31:6"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "22174:3:6"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "22238:22:6",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "22240:16:6"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "22240:18:6"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "22240:18:6"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "sum",
                                    "nodeType": "YulIdentifier",
                                    "src": "22227:3:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22232:4:6",
                                    "type": "",
                                    "value": "0xff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "22224:2:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22224:13:6"
                              },
                              "nodeType": "YulIf",
                              "src": "22221:39:6"
                            }
                          ]
                        },
                        "name": "checked_add_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "22147:1:6",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "22150:1:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "22156:3:6",
                            "type": ""
                          }
                        ],
                        "src": "22118:148:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22303:95:6",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22320:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22327:3:6",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22332:10:6",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "22323:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22323:20:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22313:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22313:31:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22313:31:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22360:1:6",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22363:4:6",
                                    "type": "",
                                    "value": "0x21"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22353:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22353:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22353:15:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22384:1:6",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22387:4:6",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "22377:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22377:15:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22377:15:6"
                            }
                          ]
                        },
                        "name": "panic_error_0x21",
                        "nodeType": "YulFunctionDefinition",
                        "src": "22271:127:6"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "22584:217:6",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "22594:27:6",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22606:9:6"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "22617:3:6",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "22602:3:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22602:19:6"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "22594:4:6"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "22637:9:6"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "22648:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22630:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22630:25:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22630:25:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22675:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22686:2:6",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22671:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22671:18:6"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "22695:6:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22703:4:6",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "22691:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22691:17:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22664:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22664:45:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22664:45:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22729:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22740:2:6",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22725:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22725:18:6"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "22745:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22718:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22718:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22718:34:6"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "22772:9:6"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "22783:2:6",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "22768:3:6"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "22768:18:6"
                                  },
                                  {
                                    "name": "value3",
                                    "nodeType": "YulIdentifier",
                                    "src": "22788:6:6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "22761:6:6"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "22761:34:6"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "22761:34:6"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "22529:9:6",
                            "type": ""
                          },
                          {
                            "name": "value3",
                            "nodeType": "YulTypedName",
                            "src": "22540:6:6",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "22548:6:6",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "22556:6:6",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "22564:6:6",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "22575:4:6",
                            "type": ""
                          }
                        ],
                        "src": "22403:398:6"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), 0)\n        array := array_1\n    }\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := shl(5, _4)\n        let dst := allocate_memory(add(_5, _1))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, _5), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _2)\n            {\n                let _6 := 0\n                revert(_6, _6)\n            }\n            mstore(dst, abi_decode_string(add(add(_3, innerOffset), _1), dataEnd))\n            dst := add(dst, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_struct$_AllocationConfig_$770_memory_ptr__to_t_struct$_AllocationConfig_$770_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), mload(add(value0, 0x20)))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), iszero(iszero(mload(add(value0, 0x60)))))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_struct$_UserVerification_$761_memory_ptr__to_t_struct$_UserVerification_$761_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, 32), 0xe0)\n        let tail_1 := abi_encode_string(memberValue0, add(headStart, 256))\n        mstore(add(headStart, 64), and(mload(add(value0, 32)), sub(shl(160, 1), 1)))\n        mstore(add(headStart, 96), mload(add(value0, 64)))\n        mstore(add(headStart, 128), mload(add(value0, 96)))\n        mstore(add(headStart, 160), iszero(iszero(mload(add(value0, 128)))))\n        mstore(add(headStart, 192), iszero(iszero(mload(add(value0, 160)))))\n        mstore(add(headStart, 0xe0), mload(add(value0, 192)))\n        tail := tail_1\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_string_memory_ptr_t_address_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 224)\n        tail := abi_encode_string(value0, add(headStart, 224))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), iszero(iszero(value5)))\n        mstore(add(headStart, 192), value6)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_62906b4e82321b2cea691e4e8088b41f65fbd95ff33eb7e1426e8b87a37b6e37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"User not active\")\n        tail := add(headStart, 96)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fae6115c28d80da154a08639f8e56a90d7b6412f7bcd8962b78156e848495a68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Email not verified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3ee96f563823b48ab15318af34481b27fd41d459a1b536c3efb82855f51e6fc0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Email already whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f0db12b76609b1e57cae053ab2c6a952047560e1f7641c32494e13a4a7981fd4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Verification is disabled\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cec53ba2988bed19dddd8443c33545ef2a705798ff897f474df3d63aeab0685b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Email already in use\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ca8d93cc1c52ed607cd27cd7b5a33f9e9e6a54f2bfb27d48de91fc521b36d7ac__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Wallet already in use\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_51a5dc8d093320dcfe33c4f3a3bd03c6b9bdae61c40ca4e94ad794f0077c9740__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Email not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, and(shl(96, value1), not(0xffffffffffffffffffffffff)))\n        end := add(end_1, 20)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73_t_bytes32__to_t_string_memory_ptr_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        mstore(pos, 0x19457468657265756d205369676e6564204d6573736167653a0a333200000000)\n        mstore(add(pos, 28), value0)\n        end := add(pos, 60)\n    }\n    function abi_encode_tuple_t_stringliteral_4f2d7dfcb27c0aafa13ae8c400de482c7832204d194018b6e45bd2bf244c74e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc74cb882d6c3f2bf10c404517985c6938d3afa8e07b29512ec83642495ce9bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"User not verified\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60de3889a5b52e49c87917d958b2a4b2f9146a238f4c8c2e22811b5781fc4a62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Migration contract not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes_memory_ptr__to_t_address_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string(value1, add(headStart, 64))\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_21752e5fb30f2e3d9a07de7f3a59379f03aa04cdf0ed3702f1fc6081df206483__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Migration proof generation faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_af1a393559512be6c55d6978c619b46ee67fad8e3bbc89007ccdda693aa2422a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"No allocation available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c0b89f4fb2200cb971cc72da0b4203780034112e935423892813b2b23e72a14b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Tokens already claimed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_90e93d5c0b6701c09679aa7793aa6d0dbef5cef46c639b627bd173fa717050f0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Health token not set\")\n        tail := add(headStart, 96)\n    }\n    function copy_byte_array_to_storage_from_t_string_storage_to_t_string_storage(slot, src)\n    {\n        if eq(slot, src) { leave }\n        let newLen := extract_byte_array_length(sload(src))\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let src_1 := array_dataslot_string_storage(src)\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := srcOffset\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, sload(add(src_1, srcOffset)))\n                let _1 := 1\n                dstPtr := add(dstPtr, _1)\n                srcOffset := add(srcOffset, _1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := sload(add(src_1, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := sload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_afbf1d0b13ec9b764798be94a22e072dfb239d0483237e4237274046b76394a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Email not in whitelist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function checked_add_t_uint8(x, y) -> sum\n    {\n        sum := add(and(x, 0xff), and(y, 0xff))\n        if gt(sum, 0xff) { panic_error_0x11() }\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n}",
                  "id": 6,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x211 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x739709B6 GT PUSH2 0x125 JUMPI DUP1 PUSH4 0xB36C6D1F GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC9DBABE9 GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC9DBABE9 EQ PUSH2 0x511 JUMPI DUP1 PUSH4 0xD2D1FB25 EQ PUSH2 0x51E JUMPI DUP1 PUSH4 0xE792B124 EQ PUSH2 0x526 JUMPI DUP1 PUSH4 0xEFA4AE00 EQ PUSH2 0x549 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x55C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB36C6D1F EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xB5856EAC EQ PUSH2 0x4D8 JUMPI DUP1 PUSH4 0xBF9C1B1B EQ PUSH2 0x4EB JUMPI DUP1 PUSH4 0xC6B0AC85 EQ PUSH2 0x4FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0x9D139D7D EQ PUSH2 0x483 JUMPI DUP1 PUSH4 0xA1E6A255 EQ PUSH2 0x496 JUMPI DUP1 PUSH4 0xACE417E0 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xAD5AEA4C EQ PUSH2 0x4B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x739709B6 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x85DB9D2C EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x85F3683B EQ PUSH2 0x44A JUMPI DUP1 PUSH4 0x8C1F3A8C EQ PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34627DEA GT PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x46616268 GT PUSH2 0x177 JUMPI DUP1 PUSH4 0x46616268 EQ PUSH2 0x3B0 JUMPI DUP1 PUSH4 0x4737A250 EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x59D61E45 EQ PUSH2 0x3D6 JUMPI DUP1 PUSH4 0x5A1420DF EQ PUSH2 0x409 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x41C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x34627DEA EQ PUSH2 0x364 JUMPI DUP1 PUSH4 0x372DFC49 EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x3793438D EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0x3F5F2ACD EQ PUSH2 0x39D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1A47767B GT PUSH2 0x1E4 JUMPI DUP1 PUSH4 0x1A47767B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x21918829 EQ PUSH2 0x2E3 JUMPI DUP1 PUSH4 0x21C01DEB EQ PUSH2 0x303 JUMPI DUP1 PUSH4 0x2B099994 EQ PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18763E9 EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0x7BB4EE3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xB236953 EQ PUSH2 0x27C JUMPI DUP1 PUSH4 0xB3D0887 EQ PUSH2 0x2B9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x229 PUSH2 0x224 CALLDATASIZE PUSH1 0x4 PUSH2 0x232B JUMP JUMPDEST PUSH2 0x56F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25F PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD DUP1 MLOAD PUSH1 0x4 DUP3 MSTORE SWAP3 DUP3 ADD SWAP2 SWAP1 SWAP4 ADD KECCAK256 SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x284 PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 SWAP2 DUP3 ADD MLOAD ISZERO ISZERO SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH2 0x2C2 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x6B5 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x2F1 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x891 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH2 0x31C SWAP4 SWAP3 SWAP2 SWAP1 PUSH1 0xFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP5 DUP6 MSTORE PUSH1 0x20 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP2 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x351 PUSH2 0x34C CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH2 0x25F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x385 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xAE8 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x398 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0xBC5 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3AB CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xD0C JUMP JUMPDEST PUSH2 0x351 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0xD36 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x3D1 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A0 JUMP JUMPDEST PUSH2 0xD51 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x3E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x273 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x417 CALLDATASIZE PUSH1 0x4 PUSH2 0x25BD JUMP JUMPDEST PUSH2 0xD6C JUMP JUMPDEST PUSH2 0x229 PUSH2 0xD90 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0xDA4 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x445 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x1030 JUMP JUMPDEST PUSH2 0x45D PUSH2 0x458 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1055 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x265A JUMP JUMPDEST PUSH1 0xD SLOAD PUSH2 0x2C2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x25F JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x491 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x10EF JUMP JUMPDEST PUSH2 0x2C2 PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x112C JUMP JUMPDEST PUSH2 0x2C2 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x266D JUMP JUMPDEST PUSH2 0x1179 JUMP JUMPDEST PUSH2 0x2F6 PUSH2 0x4D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x4E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x4F9 CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1482 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH2 0x25F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH2 0x3F9 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x14B2 JUMP JUMPDEST PUSH2 0x3F9 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x252A JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x229 PUSH2 0x557 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EE JUMP JUMPDEST PUSH2 0x187D JUMP JUMPDEST PUSH2 0x229 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x2447 JUMP JUMPDEST PUSH2 0x1947 JUMP JUMPDEST PUSH2 0x577 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x652 JUMPI PUSH1 0x0 PUSH2 0x5A7 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x63F JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE DUP3 MLOAD CALLER SWAP1 DUP5 SWAP1 DUP5 SWAP1 DUP2 LT PUSH2 0x5EF JUMPI PUSH2 0x5EF PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD PUSH2 0x604 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x7FE370A25DC2A72737D82C7B84942440B8D587D9FF700505D16C1ABE20ADA980 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP DUP1 PUSH2 0x64A DUP2 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x57A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x683 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH1 0x7 SLOAD DUP2 MSTORE PUSH1 0x8 SLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x9 SLOAD SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x6BD PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x55736572206E6F7420616374697665 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE DUP1 SLOAD SWAP1 SWAP2 SWAP1 DUP3 SWAP1 PUSH2 0x753 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7CC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7CC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD DUP4 MSTORE PUSH1 0x0 DUP1 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SWAP5 SWAP6 POP PUSH2 0x805 SWAP4 POP SWAP2 POP DUP4 SWAP1 POP PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0x818 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE SWAP1 DUP5 AND SWAP1 PUSH2 0x852 SWAP1 DUP4 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x22A19FD46D17F548B3DD51BC0E67E4D62EF6DBB21A3A825788A80B1CDCADA8F8 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x899 PUSH2 0x222A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x908 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x115B585A5B081B9BDD081D995C9A599A5959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x93A SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x966 SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9B3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x988 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9B3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x996 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xA2F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xA5B SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAA8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA7D JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xAA8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA8B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 DUP5 ADD SLOAD PUSH1 0x2 DUP6 ADD SLOAD PUSH1 0x3 DUP7 ADD SLOAD PUSH1 0x4 DUP8 ADD SLOAD PUSH1 0x5 SWAP1 SWAP8 ADD SLOAD SWAP6 SWAP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP6 SWAP2 SWAP5 POP SWAP3 POP PUSH1 0xFF DUP1 DUP4 AND SWAP3 PUSH2 0x100 SWAP1 DIV AND SWAP1 DUP8 JUMP JUMPDEST PUSH2 0xAF0 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAFB DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND ISZERO PUSH2 0xB5D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456D61696C20616C72656164792077686974656C697374656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH2 0xB86 SWAP1 DUP5 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x7FE370A25DC2A72737D82C7B84942440B8D587D9FF700505D16C1ABE20ADA980 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xBCD PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xC1A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x15995C9A599A58D85D1A5BDB881A5CC8191A5CD8589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xC36 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D61696C20616C726561647920696E20757365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xCAD SWAP1 PUSH2 0x2712 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xCF4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x57616C6C657420616C726561647920696E20757365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0xCFE DUP4 CALLER PUSH2 0x1A11 JUMP JUMPDEST POP POP PUSH2 0xD09 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xD14 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0xA2F SWAP1 PUSH2 0x2712 JUMP JUMPDEST PUSH2 0xD59 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD74 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x8 SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0x9 SSTORE PUSH1 0xA DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH2 0xD98 PUSH2 0x1982 JUMP JUMPDEST PUSH2 0xDA2 PUSH1 0x0 PUSH2 0x1E78 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xDAC PUSH2 0x19E7 JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0xFF AND PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x15995C9A599A58D85D1A5BDB881A5CC8191A5CD8589B1959 PUSH1 0x42 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP2 PUSH1 0x0 PUSH2 0xE05 DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0xE5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x115B585A5B081B9BDD081DDA1A5D195B1A5CDD1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST DUP4 PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 PUSH1 0x40 MLOAD PUSH2 0xE7A SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xED7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x456D61696C20616C726561647920696E20757365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0xEF1 SWAP1 PUSH2 0x2712 JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0xF38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x57616C6C657420616C726561647920696E20757365 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP7 CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF4D SWAP3 SWAP2 SWAP1 PUSH2 0x285B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFA4 SWAP2 SWAP1 PUSH32 0x19457468657265756D205369676E6564204D6573736167653A0A333200000000 DUP2 MSTORE PUSH1 0x1C DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x3C ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xFC8 DUP3 DUP10 PUSH2 0x1EC8 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x1016 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x496E76616C6964207369676E6174757265 PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0x1020 DUP10 CALLER PUSH2 0x1A11 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x652 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x103C DUP4 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x106E SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x109A SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x10E7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x10BC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x10E7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x10CA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x110B SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1173 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD AND ISZERO ISZERO JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0xFF AND PUSH2 0x11D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD081D995C9A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1230 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6967726174696F6E20636F6E7472616374206E6F7420736574000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xB SLOAD PUSH1 0x40 MLOAD PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH2 0x1257 SWAP1 DUP8 SWAP1 DUP8 SWAP1 PUSH1 0x24 ADD PUSH2 0x2892 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x2B56BA93 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x128C SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12C7 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12CC JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x1328 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D6967726174696F6E2070726F6F662067656E65726174696F6E206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0xFA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x716 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x133C SWAP2 SWAP1 PUSH2 0x28B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x134D PUSH2 0x222A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP2 MLOAD PUSH1 0xE0 DUP2 ADD SWAP1 SWAP3 MSTORE DUP1 SLOAD DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x137F SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13AB SWAP1 PUSH2 0x2712 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13F8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13CD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13F8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x13DB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x5 SWAP1 SWAP2 ADD SLOAD PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1460 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0xC DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP3 SWAP2 SWAP1 PUSH2 0x14A8 SWAP1 PUSH2 0x2712 JUMP JUMPDEST SWAP1 POP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14BA PUSH2 0x19E7 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0xFF AND PUSH2 0x1511 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x155CD95C881B9BDD081D995C9A599A5959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD GT PUSH2 0x1565 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F20616C6C6F636174696F6E20617661696C61626C65000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x4 DUP2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x15B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x151BDAD95B9CC8185B1C9958591E4818DB185A5B5959 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0xC SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1607 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1219585B1D1A081D1BDAD95B881B9BDD081CD95D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x5 DUP1 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 SWAP1 DUP1 PUSH2 0x1645 DUP4 DUP3 PUSH2 0x28CF JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP4 ADD SLOAD DUP2 DUP4 ADD SSTORE PUSH1 0x3 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP5 ADD DUP1 SLOAD SWAP2 DUP5 ADD DUP1 SLOAD PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO PUSH1 0xFF NOT DUP3 AND DUP2 OR DUP4 SSTORE SWAP3 SLOAD PUSH2 0x100 SWAP1 DUP2 SWAP1 DIV SWAP1 SWAP5 AND ISZERO ISZERO SWAP1 SWAP4 MUL PUSH2 0xFF00 NOT SWAP1 SWAP3 AND PUSH2 0xFFFF NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR OR SWAP1 SSTORE PUSH1 0x5 SWAP3 DUP4 ADD SLOAD SWAP3 SWAP1 SWAP2 ADD SWAP2 SWAP1 SWAP2 SSTORE DUP3 ADD SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 DUP1 PUSH2 0x16EE DUP4 DUP3 PUSH2 0x28CF JUMP JUMPDEST POP PUSH1 0x1 DUP3 DUP2 ADD SLOAD SWAP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x2 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x3 DUP1 DUP5 ADD SLOAD SWAP1 DUP4 ADD SSTORE PUSH1 0x4 DUP1 DUP5 ADD DUP1 SLOAD DUP3 DUP6 ADD DUP1 SLOAD PUSH1 0xFF NOT DUP2 AND PUSH1 0xFF SWAP4 DUP5 AND ISZERO ISZERO SWAP1 DUP2 OR DUP4 SSTORE SWAP4 SLOAD PUSH2 0xFFFF NOT SWAP1 SWAP2 AND PUSH2 0xFF00 NOT SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR PUSH2 0x100 SWAP4 DUP5 SWAP1 DIV SWAP1 SWAP3 AND ISZERO ISZERO SWAP1 SWAP3 MUL OR SWAP1 SSTORE PUSH1 0x5 SWAP4 DUP5 ADD SLOAD SWAP4 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 SSTORE PUSH1 0xC SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE DUP7 DUP5 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x17C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17EA SWAP2 SWAP1 PUSH2 0x29AA JUMP JUMPDEST PUSH2 0x182E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0x9923B4306C6C030F2BDFBF156517D5983B87E15B96176DA122CD4F2EFFA4BA7B SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xDA2 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH2 0x1885 PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1890 DUP3 PUSH2 0x19AF JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH1 0xFF AND PUSH2 0x18EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x115B585A5B081B9BDD081A5B881DDA1A5D195B1A5CDD PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP1 PUSH2 0x1910 SWAP1 DUP5 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x8514A3441F6E99C8150799DAC43140A550E8AE54631E6BB831A24667A64677FB SWAP1 PUSH1 0x20 ADD PUSH2 0xBB9 JUMP JUMPDEST PUSH2 0x194F PUSH2 0x1982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1979 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E4FBDF7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH2 0xD09 DUP2 PUSH2 0x1E78 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH4 0x118CDAA7 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19BA DUP3 PUSH2 0x1EF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x19CA SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x1A0A JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE5AEB5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH1 0xE DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x1A22 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH1 0x40 DUP1 MLOAD PUSH1 0xE0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x20 DUP1 DUP4 ADD DUP3 SWAP1 MSTORE DUP3 DUP5 ADD DUP6 SWAP1 MSTORE TIMESTAMP PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0xC0 DUP5 ADD DUP2 SWAP1 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x5 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 DUP2 MLOAD SWAP3 SWAP4 POP SWAP1 SWAP2 DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1A89 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP2 MLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1B22 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP6 ADD MLOAD PUSH1 0x3 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP10 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP3 SWAP1 MSTORE SWAP1 KECCAK256 PUSH2 0x1BB6 DUP6 DUP3 PUSH2 0x279B JUMP JUMPDEST POP DUP3 PUSH1 0x4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1BC8 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xA SLOAD PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1C0C JUMPI POP PUSH1 0x8 SLOAD PUSH1 0x7 SLOAD LT JUMPDEST ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x9 SLOAD PUSH1 0xC0 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 PUSH1 0xA0 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x7 DUP1 SLOAD SWAP2 PUSH2 0x1C32 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 MLOAD DUP4 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1C60 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD SSTORE PUSH1 0x80 DUP5 ADD MLOAD PUSH1 0x4 DUP5 ADD DUP1 SLOAD PUSH1 0xA0 DUP8 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP4 ADD MLOAD PUSH1 0x5 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x6 SWAP1 SWAP2 MSTORE KECCAK256 DUP3 MLOAD DUP4 SWAP2 SWAP1 DUP2 SWAP1 PUSH2 0x1CF9 SWAP1 DUP3 PUSH2 0x279B JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x60 DUP1 DUP7 ADD MLOAD PUSH1 0x3 DUP7 ADD SSTORE PUSH1 0x80 DUP7 ADD MLOAD PUSH1 0x4 DUP7 ADD DUP1 SLOAD PUSH1 0xA0 DUP10 ADD MLOAD ISZERO ISZERO PUSH2 0x100 MUL PUSH2 0xFF00 NOT SWAP4 ISZERO ISZERO SWAP4 SWAP1 SWAP4 AND PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD MLOAD PUSH1 0x5 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP3 MLOAD DUP6 DUP2 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE TIMESTAMP SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP7 AND SWAP2 PUSH32 0x6265C4408AC5B7C9B18D37B72535BE33A793F145417CBBF3FD5AD07AA2184CC1 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST PUSH1 0xD DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x1DC8 DUP4 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP DUP2 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x40 MLOAD PUSH2 0x1DE6 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x13F42EE0DE0AC9236AD9FD1EDD06FB6B07F3E2423A2C0B6CB6DC732822FEC14C SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1E38 SWAP2 SWAP1 PUSH2 0x26C7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB DUP2 KECCAK256 TIMESTAMP DUP3 MSTORE SWAP1 PUSH32 0x90DEC1F4FFCC94B09EB3739C1C9D43F199BB65196004104DFB39A3DA25C9AFD9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x1ED8 DUP7 DUP7 PUSH2 0x2055 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x1EE8 DUP3 DUP3 PUSH2 0x20A2 JUMP JUMPDEST POP SWAP1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F15 JUMPI PUSH2 0x1F15 PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F3F JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0x204D JUMPI PUSH1 0x41 DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F62 JUMPI PUSH2 0x1F62 PUSH2 0x26B1 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR LT DUP1 ISZERO SWAP1 PUSH2 0x1F92 JUMPI POP PUSH1 0x5A DUP4 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1F87 JUMPI PUSH2 0x1F87 PUSH2 0x26B1 JUMP JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR GT ISZERO JUMPDEST ISZERO PUSH2 0x1FF4 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1FA9 JUMPI PUSH2 0x1FA9 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL PUSH1 0xF8 SHR PUSH1 0x20 PUSH2 0x1FC3 SWAP2 SWAP1 PUSH2 0x29C7 JUMP JUMPDEST PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x203B JUMP JUMPDEST DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x2006 JUMPI PUSH2 0x2006 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD MLOAD PUSH1 0xF8 SHR PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x2023 JUMPI PUSH2 0x2023 PUSH2 0x26B1 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP JUMPDEST DUP1 PUSH2 0x2045 DUP2 PUSH2 0x26F9 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1F45 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x41 SUB PUSH2 0x208F JUMPI PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x40 DUP6 ADD MLOAD PUSH1 0x60 DUP7 ADD MLOAD PUSH1 0x0 BYTE PUSH2 0x2081 DUP9 DUP3 DUP6 DUP6 PUSH2 0x215B JUMP JUMPDEST SWAP6 POP SWAP6 POP SWAP6 POP POP POP POP PUSH2 0x209B JUMP JUMPDEST POP POP DUP2 MLOAD PUSH1 0x0 SWAP2 POP PUSH1 0x2 SWAP1 JUMPDEST SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20B6 JUMPI PUSH2 0x20B6 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x20BF JUMPI POP POP JUMP JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D3 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x20F1 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF645EEDF PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2105 JUMPI PUSH2 0x2105 PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x2126 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFCE698F7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x213A JUMPI PUSH2 0x213A PUSH2 0x29E0 JUMP JUMPDEST SUB PUSH2 0x652 JUMPI PUSH1 0x40 MLOAD PUSH4 0x35E2F383 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x716 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP5 GT ISZERO PUSH2 0x2196 JUMPI POP PUSH1 0x0 SWAP2 POP PUSH1 0x3 SWAP1 POP DUP3 PUSH2 0x2220 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP11 SWAP1 MSTORE PUSH1 0xFF DUP10 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x2216 JUMPI POP PUSH1 0x0 SWAP3 POP PUSH1 0x1 SWAP2 POP DUP3 SWAP1 POP PUSH2 0x2220 JUMP JUMPDEST SWAP3 POP PUSH1 0x0 SWAP2 POP DUP2 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x22B3 JUMPI PUSH2 0x22B3 PUSH2 0x2274 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x22CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x22E6 JUMPI PUSH2 0x22E6 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x22F9 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x228A JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x230E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x233E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2356 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x236A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x237C JUMPI PUSH2 0x237C PUSH2 0x2274 JUMP JUMPDEST DUP1 PUSH1 0x5 SHL PUSH2 0x238B DUP6 DUP3 ADD PUSH2 0x228A JUMP JUMPDEST SWAP2 DUP3 MSTORE DUP4 DUP2 ADD DUP6 ADD SWAP2 DUP6 DUP2 ADD SWAP1 DUP10 DUP5 GT ISZERO PUSH2 0x23A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 DUP7 ADD SWAP3 POP JUMPDEST DUP4 DUP4 LT ISZERO PUSH2 0x23E1 JUMPI DUP3 CALLDATALOAD DUP6 DUP2 GT ISZERO PUSH2 0x23C3 JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x23D1 DUP12 DUP10 DUP4 DUP11 ADD ADD PUSH2 0x22BB JUMP JUMPDEST DUP4 MSTORE POP SWAP2 DUP7 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x23AB JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2400 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2423 DUP5 DUP3 DUP6 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2442 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2462 DUP3 PUSH2 0x242B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2484 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x246C JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x24A5 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD PUSH1 0xE0 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x24D6 PUSH2 0x100 DUP5 ADD DUP3 PUSH2 0x248D JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x20 DUP6 ADD MLOAD AND PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 DUP5 ADD MLOAD PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x80 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xA0 DUP5 ADD MLOAD ISZERO ISZERO PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0xC0 DUP5 ADD MLOAD PUSH1 0xE0 DUP5 ADD MSTORE DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x253C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE0 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2556 PUSH1 0xE0 DUP4 ADD DUP11 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 SWAP1 SWAP9 AND PUSH1 0x20 DUP4 ADD MSTORE POP PUSH1 0x40 DUP2 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0x60 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xD09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2462 DUP2 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x25D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x25EB DUP2 PUSH2 0x2592 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2609 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2621 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x262D DUP7 DUP4 DUP8 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2643 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2650 DUP6 DUP3 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2462 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2680 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2689 DUP4 PUSH2 0x242B JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2650 DUP6 DUP3 DUP7 ADD PUSH2 0x22BB JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x26D9 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x2469 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x270B JUMPI PUSH2 0x270B PUSH2 0x26E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2726 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2746 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2796 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2773 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2792 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x277F JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27B5 JUMPI PUSH2 0x27B5 PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x27C9 DUP2 PUSH2 0x27C3 DUP5 SLOAD PUSH2 0x2712 JUMP JUMPDEST DUP5 PUSH2 0x274C JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x27FE JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x27E6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2792 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x282D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x280E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x284B JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x286D DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x2469 JUMP JUMPDEST PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP2 SWAP1 SWAP3 ADD SWAP1 DUP2 MSTORE PUSH1 0x14 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2423 SWAP1 DUP4 ADD DUP5 PUSH2 0x248D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 DUP2 SUB PUSH2 0x28DA JUMPI POP POP JUMP JUMPDEST PUSH2 0x28E4 DUP3 SLOAD PUSH2 0x2712 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28FC JUMPI PUSH2 0x28FC PUSH2 0x2274 JUMP JUMPDEST PUSH2 0x290A DUP2 PUSH2 0x27C3 DUP5 SLOAD PUSH2 0x2712 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x293E JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x2926 JUMPI POP DUP5 DUP3 ADD SLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x29A3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x1F NOT DUP5 AND SWAP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 DUP5 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2978 JUMPI DUP3 DUP7 ADD SLOAD DUP3 SSTORE PUSH1 0x1 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH2 0x2958 JUMP JUMPDEST POP DUP6 DUP4 LT ISZERO PUSH2 0x2996 JUMPI DUP2 DUP6 ADD SLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP PUSH1 0x1 DUP4 PUSH1 0x1 SHL ADD DUP5 SSTORE JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x29BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2462 DUP2 PUSH2 0x2592 JUMP JUMPDEST PUSH1 0xFF DUP2 DUP2 AND DUP4 DUP3 AND ADD SWAP1 DUP2 GT ISZERO PUSH2 0x1173 JUMPI PUSH2 0x1173 PUSH2 0x26E3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0x5CC520889C270FDF7C6A1702E115C7FB12CC77B9573FB7 CREATE2 0x26 0x2A 0xBC 0xBB EXTCODESIZE CALLDATASIZE 0xC9 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
              "sourceMap": "566:15825:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5051:404;;;;;;:::i;:::-;;:::i;:::-;;1948:47;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1948:47:5;;;;;;-1:-1:-1;;;;;2625:32:6;;;2607:51;;2595:2;2580:18;1948:47:5;;;;;;;;11884:128;;;:::i;:::-;;;;;;2900:13:6;;2882:32;;2970:4;2958:17;;;2952:24;2930:20;;;2923:54;3033:4;3021:17;;;3015:24;2993:20;;;2986:54;3110:4;3098:17;;;3092:24;3085:32;3078:40;3056:20;;;3049:70;;;;2869:3;2854:19;;2669:456;2278:33:5;;;;;;;;;3276:25:6;;;3264:2;3249:18;2278:33:5;3130:177:6;13840:497:5;;;;;;:::i;:::-;;:::i;10094:275::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2147:40::-;;;;;;;;;;;;;;;;;;;;;;5247:25:6;;;5303:2;5288:18;;5281:34;;;;5331:18;;;5324:34;5401:14;5394:22;5389:2;5374:18;;5367:50;5234:3;5219:19;2147:40:5;5022:401:6;2070:64:5;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;2194:39::-;;;;;-1:-1:-1;;;;;2194:39:5;;;4563:319;;;;;;:::i;:::-;;:::i;7039:419::-;;;;;;:::i;:::-;;:::i;13029:162::-;;;;;;:::i;:::-;;:::i;2002:61::-;;;;;;:::i;:::-;;:::i;13590:113::-;;;;;;:::i;:::-;;:::i;1801:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7034:14:6;;7027:22;7009:41;;6997:2;6982:18;1801:50:5;6869:187:6;12529:330:5;;;;;;:::i;:::-;;:::i;2293:101:0:-;;;:::i;6146:707:5:-;;;;;;:::i;:::-;;:::i;10559:195::-;;;;;;:::i;:::-;;:::i;1894:47::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12135:115::-;12224:18;;12135:115;;1638:85:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;1638:85;;11295:140:5;;;;;;:::i;:::-;;:::i;2318:25::-;;;;;;9449:184;;;;;;:::i;:::-;;:::i;14583:675::-;;;;;;:::i;:::-;;:::i;9784:153::-;;;;;;:::i;:::-;;:::i;13338:118::-;;;;;;:::i;:::-;;:::i;11615:141::-;;;;;;:::i;:::-;;:::i;2240:25::-;;;;;-1:-1:-1;;;;;2240:25:5;;;2350:38;;;;;;;;;15417:971;;;:::i;10970:149::-;;;;;;:::i;:::-;11044:18;11082:29;;;:18;:29;;;;;;;;;10970:149;5595:330;;;;;;:::i;:::-;;:::i;2543:215:0:-;;;;;;:::i;:::-;;:::i;5051:404:5:-;1531:13:0;:11;:13::i;:::-;5140:9:5::1;5135:313;5159:6;:13;5155:1;:17;5135:313;;;5194:17;5214:21;5225:6;5232:1;5225:9;;;;;;;;:::i;:::-;;;;;;;5214:10;:21::i;:::-;5255:29;::::0;;;:18:::1;:29;::::0;;;;;5194:41;;-1:-1:-1;5255:29:5::1;;5250:187;;5305:29;::::0;;;:18:::1;:29;::::0;;;;:36;;-1:-1:-1;;5305:36:5::1;5337:4;5305:36;::::0;;5382:9;;5393:10:::1;::::0;5382:6;;5389:1;;5382:9;::::1;;;;;:::i;:::-;;;;;;;5365:56;;;;;;:::i;:::-;;::::0;;;;::::1;::::0;;5405:15:::1;3276:25:6::0;;5365:56:5;::::1;::::0;3264:2:6;3249:18;5365:56:5::1;;;;;;;5250:187;-1:-1:-1::0;5174:3:5;::::1;::::0;::::1;:::i;:::-;;;;5135:313;;;;5051:404:::0;:::o;11884:128::-;11938:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11938:30:5;-1:-1:-1;11981:23:5;;;;;;;;11988:16;11981:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11884:128::o;13840:497::-;1531:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;13916:23:5;::::1;;::::0;;;:17:::1;:23;::::0;;;;:32:::1;;::::0;::::1;;13908:60;;;::::0;-1:-1:-1;;;13908:60:5;;9919:2:6;13908:60:5::1;::::0;::::1;9901:21:6::0;9958:2;9938:18;;;9931:30;-1:-1:-1;;;9977:18:6;;;9970:45;10032:18;;13908:60:5::1;;;;;;;;;-1:-1:-1::0;;;;;14029:23:5;::::1;13989:37;14029:23:::0;;;:17:::1;:23;::::0;;;;14063:21:::1;::::0;::::1;:29:::0;;-1:-1:-1;;14063:29:5::1;::::0;;14140:40;;14029:23;;13989:37;14029:23;;14140:40:::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;14191:24:5::1;::::0;;::::1;::::0;;::::1;::::0;;-1:-1:-1;14191:24:5;;;-1:-1:-1;;;;;14191:19:5;::::1;::::0;;:13:::1;:19:::0;;;;;;;14140:40;;-1:-1:-1;14191:24:5::1;::::0;-1:-1:-1;14191:24:5;-1:-1:-1;14191:19:5;;-1:-1:-1;14191:24:5::1;:::i;:::-;;14257:1;14226:13;14240:5;14226:20;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:33;;-1:-1:-1;;;;;14226:33:5;;::::1;-1:-1:-1::0;;;;;;14226:33:5;;::::1;;::::0;;14285:44;;::::1;::::0;::::1;::::0;14300:5;;14285:44:::1;:::i;:::-;;::::0;;;;::::1;::::0;;14313:15:::1;3276:25:6::0;;14285:44:5;::::1;::::0;3264:2:6;3249:18;14285:44:5::1;;;;;;;13897:440;;13840:497:::0;:::o;10094:275::-;10170:36;;:::i;:::-;10219:14;10236:13;10250:5;10236:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;10236:20:5;;-1:-1:-1;10236:20:5;10267:51;;;;-1:-1:-1;;;10267:51:5;;12852:2:6;10267:51:5;;;12834:21:6;12891:2;12871:18;;;12864:30;-1:-1:-1;;;12910:18:6;;;12903:48;12968:18;;10267:51:5;12650:342:6;10267:51:5;-1:-1:-1;;;;;10336:25:5;;;;;;:17;:25;;;;;;;10329:32;;;;;;;;;;;;10336:25;;10329:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10329:32:5;;;-1:-1:-1;;10329:32:5;;;;-1:-1:-1;;;;;10329:32:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10094:275;-1:-1:-1;;;10094:275:5:o;2070:64::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2070:64:5;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2070:64:5;;;;;;-1:-1:-1;2070:64:5;-1:-1:-1;2070:64:5;;;;;;;;;;;:::o;4563:319::-;1531:13:0;:11;:13::i;:::-;4643:17:5::1;4663;4674:5;4663:10;:17::i;:::-;4700:29;::::0;;;:18:::1;:29;::::0;;;;;4643:37;;-1:-1:-1;4700:29:5::1;;4699:30;4691:68;;;::::0;-1:-1:-1;;;4691:68:5;;13199:2:6;4691:68:5::1;::::0;::::1;13181:21:6::0;13238:2;13218:18;;;13211:30;13277:27;13257:18;;;13250:55;13322:18;;4691:68:5::1;12997:349:6::0;4691:68:5::1;4770:29;::::0;;;:18:::1;:29;::::0;;;;;;:36;;-1:-1:-1;;4770:36:5::1;4802:4;4770:36;::::0;;4822:52;4846:10:::1;::::0;4822:52:::1;::::0;4839:5;;4822:52:::1;:::i;:::-;;::::0;;;;::::1;::::0;;4858:15:::1;3276:25:6::0;;4822:52:5;::::1;::::0;3264:2:6;3249:18;4822:52:5::1;;;;;;;;4632:250;4563:319:::0;:::o;7039:419::-;2500:21:3;:19;:21::i;:::-;4000:19:5::1;::::0;::::1;;3992:56;;;::::0;-1:-1:-1;;;3992:56:5;;13553:2:6;3992:56:5::1;::::0;::::1;13535:21:6::0;13592:2;13572:18;;;13565:30;-1:-1:-1;;;13611:18:6;;;13604:54;13675:18;;3992:56:5::1;13351:348:6::0;3992:56:5::1;7192:5:::2;3733:1;-1:-1:-1::0;;;;;3701:34:5::2;:13;3715:5;3701:20;;;;;;:::i;:::-;::::0;;;::::2;::::0;;;;;::::2;::::0;;;;-1:-1:-1;;;;;3701:20:5::2;:34;3693:67;;;::::0;-1:-1:-1;;;3693:67:5;;13906:2:6;3693:67:5::2;::::0;::::2;13888:21:6::0;13945:2;13925:18;;;13918:30;-1:-1:-1;;;13964:18:6;;;13957:50;14024:18;;3693:67:5::2;13704:344:6::0;3693:67:5::2;7225:10:::3;3859:21;::::0;;;:13:::3;:21;::::0;;;;3853:35;;::::3;::::0;::::3;:::i;:::-;:40:::0;;-1:-1:-1;3845:74:5::3;;;::::0;-1:-1:-1;;;3845:74:5;;14255:2:6;3845:74:5::3;::::0;::::3;14237:21:6::0;14294:2;14274:18;;;14267:30;-1:-1:-1;;;14313:18:6;;;14306:51;14374:18;;3845:74:5::3;14053:345:6::0;3845:74:5::3;7411:39:::4;7432:5;7439:10;7411:20;:39::i;:::-;3771:1:::3;4059::::2;2542:20:3::0;1857:1;3068:21;;2888:208;2542:20;7039:419:5;:::o;13029:162::-;1531:13:0;:11;:13::i;:::-;13131:24:5::1;:52:::0;;-1:-1:-1;;;;;;13131:52:5::1;-1:-1:-1::0;;;;;13131:52:5;;;::::1;::::0;;;::::1;::::0;;13029:162::o;2002:61::-;;;;;;;;;;;;;;;;;;:::i;13590:113::-;1531:13:0;:11;:13::i;:::-;13666:19:5::1;:29:::0;;-1:-1:-1;;13666:29:5::1;::::0;::::1;;::::0;;;::::1;::::0;;13590:113::o;12529:330::-;1531:13:0;:11;:13::i;:::-;12691:31:5;:48;;;;12750:34;:54;12815:25;:36;;-1:-1:-1;;12815:36:5::1;::::0;::::1;;::::0;;;::::1;::::0;;12529:330::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;6146:707:5:-;2500:21:3;:19;:21::i;:::-;4000:19:5::1;::::0;::::1;;3992:56;;;::::0;-1:-1:-1;;;3992:56:5;;13553:2:6;3992:56:5::1;::::0;::::1;13535:21:6::0;13592:2;13572:18;;;13565:30;-1:-1:-1;;;13611:18:6;;;13604:54;13675:18;;3992:56:5::1;13351:348:6::0;3992:56:5::1;6331:5:::2;2481:17;2501;2512:5;2501:10;:17::i;:::-;2537:29;::::0;;;:18:::2;:29;::::0;;;;;2481:37;;-1:-1:-1;2537:29:5::2;;2529:63;;;::::0;-1:-1:-1;;;2529:63:5;;14605:2:6;2529:63:5::2;::::0;::::2;14587:21:6::0;14644:2;14624:18;;;14617:30;-1:-1:-1;;;14663:18:6;;;14656:51;14724:18;;2529:63:5::2;14403:345:6::0;2529:63:5::2;6363:5:::3;3733:1;-1:-1:-1::0;;;;;3701:34:5::3;:13;3715:5;3701:20;;;;;;:::i;:::-;::::0;;;::::3;::::0;;;;;::::3;::::0;;;;-1:-1:-1;;;;;3701:20:5::3;:34;3693:67;;;::::0;-1:-1:-1;;;3693:67:5;;13906:2:6;3693:67:5::3;::::0;::::3;13888:21:6::0;13945:2;13925:18;;;13918:30;-1:-1:-1;;;13964:18:6;;;13957:50;14024:18;;3693:67:5::3;13704:344:6::0;3693:67:5::3;6396:10:::4;3859:21;::::0;;;:13:::4;:21;::::0;;;;3853:35;;::::4;::::0;::::4;:::i;:::-;:40:::0;;-1:-1:-1;3845:74:5::4;;;::::0;-1:-1:-1;;;3845:74:5;;14255:2:6;3845:74:5::4;::::0;::::4;14237:21:6::0;14294:2;14274:18;;;14267:30;-1:-1:-1;;;14313:18:6;;;14306:51;14374:18;;3845:74:5::4;14053:345:6::0;3845:74:5::4;6454:19:::5;6503:5;6510:10;6486:35;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6476:46;;;;;;6454:68;;6533:28;6627:11;6574:65;;;;;;;15430:66:6::0;15418:79;;15522:2;15513:12;;15506:28;;;;15559:2;15550:12;;15188:380;6574:65:5::5;;;;;;;;;;;;;6564:76;;;;;;6533:107;;6651:14;6668:46;6682:20;6704:9;6668:13;:46::i;:::-;6651:63:::0;-1:-1:-1;;;;;;6743:20:5;::::5;6753:10;6743:20;6735:50;;;::::0;-1:-1:-1;;;6735:50:5;;15775:2:6;6735:50:5::5;::::0;::::5;15757:21:6::0;15814:2;15794:18;;;15787:30;-1:-1:-1;;;15833:18:6;;;15826:47;15890:18;;6735:50:5::5;15573:341:6::0;6735:50:5::5;6806:39;6827:5;6834:10;6806:20;:39::i;:::-;6414:439;;;3771:1:::4;2603::::3;2470:142:::2;4059:1;2542:20:3::0;1857:1;3068:21;;2888:208;10559:195:5;10631:18;10662:17;10682;10693:5;10682:10;:17::i;:::-;10717:29;;;;:18;:29;;;;;;;;;10559:195;-1:-1:-1;;;10559:195:5:o;1894:47::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;11295:140::-;11361:12;11425:1;-1:-1:-1;;;;;11393:34:5;:13;11407:5;11393:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;11393:20:5;:34;;;11295:140;-1:-1:-1;;11295:140:5:o;9449:184::-;-1:-1:-1;;;;;9545:23:5;;9510:15;9545:23;;;:17;:23;;;;;:32;;;;;:80;;;;-1:-1:-1;;;;;;9581:23:5;;;9623:1;9581:23;;;:17;:23;;;;;:30;;;;:44;;9545:80;9538:87;9449:184;-1:-1:-1;;9449:184:5:o;14583:675::-;-1:-1:-1;;;;;14738:23:5;;14696:21;14738:23;;;:17;:23;;;;;:32;;;;;14730:62;;;;-1:-1:-1;;;14730:62:5;;16121:2:6;14730:62:5;;;16103:21:6;16160:2;16140:18;;;16133:30;-1:-1:-1;;;16179:18:6;;;16172:47;16236:18;;14730:62:5;15919:341:6;14730:62:5;14811:24;;-1:-1:-1;;;;;14811:24:5;14803:77;;;;-1:-1:-1;;;14803:77:5;;16467:2:6;14803:77:5;;;16449:21:6;16506:2;16486:18;;;16479:30;16545:28;16525:18;;;16518:56;16591:18;;14803:77:5;16265:350:6;14803:77:5;14987:24;;15039:81;;14952:12;;;;-1:-1:-1;;;;;14987:24:5;;;;15039:81;;15104:4;;15110:9;;15039:81;;;:::i;:::-;;;;-1:-1:-1;;15039:81:5;;;;;;;;;;;;;;-1:-1:-1;;;;;15039:81:5;-1:-1:-1;;;15039:81:5;;;14987:144;;;15039:81;14987:144;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14951:180;;;;15160:7;15152:53;;;;-1:-1:-1;;;15152:53:5;;17434:2:6;15152:53:5;;;17416:21:6;17473:2;17453:18;;;17446:30;17512:34;17492:18;;;17485:62;-1:-1:-1;;;17563:18:6;;;17556:31;17604:19;;15152:53:5;17232:397:6;15152:53:5;15234:4;15223:27;;;;;;;;;;;;:::i;:::-;15216:34;14583:675;-1:-1:-1;;;;;14583:675:5:o;9784:153::-;9850:36;;:::i;:::-;-1:-1:-1;;;;;9906:23:5;;;;;;:17;:23;;;;;;;9899:30;;;;;;;;;;;;9906:23;;9899:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;9899:30:5;;;-1:-1:-1;;9899:30:5;;;;-1:-1:-1;;;;;9899:30:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9784:153;-1:-1:-1;;9784:153:5:o;13338:118::-;1531:13:0;:11;:13::i;:::-;13414:11:5::1;:34:::0;;-1:-1:-1;;;;;;13414:34:5::1;-1:-1:-1::0;;;;;13414:34:5;;;::::1;::::0;;;::::1;::::0;;13338:118::o;11615:141::-;-1:-1:-1;;;;;11715:21:5;;11677:12;11715:21;;;:13;:21;;;;;11709:35;;11677:12;;11715:21;11709:35;;;:::i;:::-;;;:39;11702:46;;11615:141;;;:::o;15417:971::-;2500:21:3;:19;:21::i;:::-;15492:10:5::1;15477:12;15553:23:::0;;;:17:::1;:23;::::0;;;;15605:21:::1;::::0;::::1;::::0;::::1;;15597:51;;;::::0;-1:-1:-1;;;15597:51:5;;16121:2:6;15597:51:5::1;::::0;::::1;16103:21:6::0;16160:2;16140:18;;;16133:30;-1:-1:-1;;;16179:18:6;;;16172:47;16236:18;;15597:51:5::1;15919:341:6::0;15597:51:5::1;15698:1;15667:12;:28;;;:32;15659:68;;;::::0;-1:-1:-1;;;15659:68:5;;18025:2:6;15659:68:5::1;::::0;::::1;18007:21:6::0;18064:2;18044:18;;;18037:30;18103:25;18083:18;;;18076:53;18146:18;;15659:68:5::1;17823:347:6::0;15659:68:5::1;15747:30;::::0;::::1;::::0;::::1;::::0;::::1;;;15746:31;15738:66;;;::::0;-1:-1:-1;;;15738:66:5;;18377:2:6;15738:66:5::1;::::0;::::1;18359:21:6::0;18416:2;18396:18;;;18389:30;-1:-1:-1;;;18435:18:6;;;18428:52;18497:18;;15738:66:5::1;18175:346:6::0;15738:66:5::1;15831:11;::::0;-1:-1:-1;;;;;15831:11:5::1;15815:67;;;::::0;-1:-1:-1;;;15815:67:5;;18728:2:6;15815:67:5::1;::::0;::::1;18710:21:6::0;18767:2;18747:18;;;18740:30;-1:-1:-1;;;18786:18:6;;;18779:50;18846:18;;15815:67:5::1;18526:344:6::0;15815:67:5::1;15930:28;::::0;;::::1;::::0;15969:30:::1;::::0;::::1;:37:::0;;-1:-1:-1;;15969:37:5::1;;;::::0;;-1:-1:-1;;;;;16060:23:5;::::1;15903:24;16060:23:::0;;;::::1;::::0;;;;;;;;15930:12;;16060:23;:38:::1;15930:12:::0;16060:23;:38:::1;:::i;:::-;-1:-1:-1::0;16060:38:5::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;;16060:38:5::1;-1:-1:-1::0;;;;;16060:38:5;;::::1;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;::::1;;;-1:-1:-1::0;;16060:38:5;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;-1:-1:-1::0;;16060:38:5;;;-1:-1:-1;;16060:38:5;;;;;;;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;16130:19;::::1;::::0;16060:38:::1;16109:41:::0;;;:20:::1;:41;::::0;;;;16153:12;;16109:41;:56:::1;16153:12:::0;16109:41;:56:::1;:::i;:::-;-1:-1:-1::0;16109:56:5::1;::::0;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;;;16109:56:5;;::::1;-1:-1:-1::0;;;;;;16109:56:5;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;-1:-1:-1;;16109:56:5;::::1;;::::0;;::::1;;;::::0;;::::1;::::0;;;;-1:-1:-1;;16109:56:5;;;-1:-1:-1;;16109:56:5;;;;;;;::::1;::::0;;;::::1;::::0;;::::1;;;::::0;;::::1;;::::0;;::::1;::::0;;::::1;::::0;;;;::::1;::::0;;;;16230:11:::1;::::0;:44:::1;::::0;-1:-1:-1;;;16230:44:5;;20503:32:6;;;16230:44:5;;::::1;20485:51:6::0;;;;20552:18;;;20545:34;;;16230:11:5;;::::1;::::0;:20:::1;::::0;20458:18:6;;16230:44:5::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16222:78;;;::::0;-1:-1:-1;;;16222:78:5;;21042:2:6;16222:78:5::1;::::0;::::1;21024:21:6::0;21081:2;21061:18;;;21054:30;-1:-1:-1;;;21100:18:6;;;21093:51;21161:18;;16222:78:5::1;20840:345:6::0;16222:78:5::1;16326:54;::::0;;21364:25:6;;;16364:15:5::1;21420:2:6::0;21405:18;;21398:34;-1:-1:-1;;;;;16326:54:5;::::1;::::0;::::1;::::0;21337:18:6;16326:54:5::1;;;;;;;15466:922;;;2542:20:3::0;1857:1;3068:21;;2888:208;5595:330:5;1531:13:0;:11;:13::i;:::-;5680:17:5::1;5700;5711:5;5700:10;:17::i;:::-;5736:29;::::0;;;:18:::1;:29;::::0;;;;;5680:37;;-1:-1:-1;5736:29:5::1;;5728:64;;;::::0;-1:-1:-1;;;5728:64:5;;21645:2:6;5728:64:5::1;::::0;::::1;21627:21:6::0;21684:2;21664:18;;;21657:30;-1:-1:-1;;;21703:18:6;;;21696:52;21765:18;;5728:64:5::1;21443:346:6::0;5728:64:5::1;5835:5;5803:29:::0;;;:18:::1;:29;::::0;;;;;;:37;;-1:-1:-1;;5803:37:5::1;::::0;;5856:61;5889:10:::1;::::0;5856:61:::1;::::0;5882:5;;5856:61:::1;:::i;:::-;;::::0;;;;::::1;::::0;;5901:15:::1;3276:25:6::0;;5856:61:5;::::1;::::0;3264:2:6;3249:18;5856:61:5::1;3130:177:6::0;2543:215:0;1531:13;:11;:13::i;:::-;-1:-1:-1;;;;;2627:22:0;::::1;2623:91;;2672:31;::::0;-1:-1:-1;;;2672:31:0;;2700:1:::1;2672:31;::::0;::::1;2607:51:6::0;2580:18;;2672:31:0::1;2461:203:6::0;2623:91:0::1;2723:28;2742:8;2723:18;:28::i;1796:162::-:0;1684:7;1710:6;-1:-1:-1;;;;;1710:6:0;735:10:2;1855:23:0;1851:101;;1901:40;;-1:-1:-1;;;1901:40:0;;735:10:2;1901:40:0;;;2607:51:6;2580:18;;1901:40:0;2461:203:6;2788:143:5;2852:7;2906:15;2915:5;2906:8;:15::i;:::-;2889:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;2879:44;;;;;;2872:51;;2788:143;;;:::o;2575:307:3:-;1899:1;2702:7;;:18;2698:86;;2743:30;;-1:-1:-1;;;2743:30:3;;;;;;;;;;;2698:86;1899:1;2858:7;:17;2575:307::o;7628:1658:5:-;7779:10;:12;;7762:14;;;7779:12;;;:::i;:::-;;;;-1:-1:-1;7841:256:5;;;;;;;;;;;-1:-1:-1;;;;;7841:256:5;;;;;;;;;;;;;;;7969:15;7841:256;;;;8009:4;7841:256;;;;7802:36;7841:256;;;;;;;;;;;;8145:25;;;:17;:25;;;;;;:40;;7762:29;;-1:-1:-1;7841:256:5;;;;8145:25;;;:40;;:25;:40;:::i;:::-;-1:-1:-1;8145:40:5;;;;;;;;;;-1:-1:-1;;;;;8145:40:5;;;-1:-1:-1;;;;;;8145:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8145:40:5;;;;;;;-1:-1:-1;;8145:40:5;;;;;;;;;;;;;;;;;;;;;;;;8196:28;;;:20;:28;;;;:43;;8227:12;;8196:28;;;:43;;:28;:43;:::i;:::-;-1:-1:-1;8196:43:5;;;;;;;;;;-1:-1:-1;;;;;8196:43:5;;;-1:-1:-1;;;;;;8196:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8196:43:5;;;;;;;-1:-1:-1;;8196:43:5;;;;;;;;;;;;;;;;;;;;;;;8250:21;;8196:43;8250:21;;;;;;;;:29;8274:5;8250:21;:29;:::i;:::-;;8313:6;8290:13;8304:5;8290:20;;;;;;:::i;:::-;;;;;;;;;;;;;;:29;;-1:-1:-1;;;;;8290:29:5;;;;-1:-1:-1;;;;;;8290:29:5;;;;;;;;;8420:25;;;;:108;;;;-1:-1:-1;8497:31:5;;:16;8463:31;:65;8420:108;8416:684;;;8586:34;;8635:28;;;:47;;;8559:24;8697:30;;;:38;;;8586:16;8839:33;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8887:25:5;;;;;;:17;:25;;;;;:40;;8915:12;;8887:25;;;:40;;:25;:40;:::i;:::-;-1:-1:-1;8887:40:5;;;;;;;;;;-1:-1:-1;;;;;8887:40:5;;;-1:-1:-1;;;;;;8887:40:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8887:40:5;;;;;;;-1:-1:-1;;8887:40:5;;;;;;;;;;;;;;;;;;;;;;;;8942:28;;;:20;:28;;;;:43;;8973:12;;8942:28;;;:43;;:28;:43;:::i;:::-;-1:-1:-1;8942:43:5;;;;;;;;;;-1:-1:-1;;;;;8942:43:5;;;-1:-1:-1;;;;;;8942:43:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8942:43:5;;;;;;;-1:-1:-1;;8942:43:5;;;;;;;;;;;;;;;;;;;;;;;9019:69;;21996:25:6;;;22037:18;;;22030:34;;;9072:15:5;22080:18:6;;;22073:34;;;;9019:69:5;;;;;;21969:18:6;9019:69:5;;;;;;;8530:570;8416:684;9120:18;:20;;;:18;:20;;;:::i;:::-;;;;;;9194:6;9186;-1:-1:-1;;;;;9166:52:5;9179:5;9166:52;;;;;;:::i;:::-;;;;;;;;;9202:15;3276:25:6;;9166:52:5;;;3264:2:6;3249:18;9166:52:5;;;;;;;9254:6;-1:-1:-1;;;;;9234:44:5;9247:5;9234:44;;;;;;:::i;:::-;;;;;;;;;9262:15;3276:25:6;;9234:44:5;;;3264:2:6;3249:18;9234:44:5;;;;;;;7704:1582;;7628:1658;;:::o;2912:187:0:-;2985:16;3004:6;;-1:-1:-1;;;;;3020:17:0;;;-1:-1:-1;;;;;;3020:17:0;;;;;;3052:40;;3004:6;;;;;;;3052:40;;2985:16;3052:40;2975:124;2912:187;:::o;3714:255:4:-;3792:7;3812:17;3831:18;3851:16;3871:27;3882:4;3888:9;3871:10;:27::i;:::-;3811:87;;;;;;3908:28;3920:5;3927:8;3908:11;:28::i;:::-;-1:-1:-1;3953:9:4;;3714:255;-1:-1:-1;;;;3714:255:4:o;3108:516:5:-;3168:13;3194:17;3220:3;3194:30;;3235:19;3267:4;:11;3257:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3257:22:5;;3235:44;;3295:6;3290:295;3311:4;:11;3307:1;:15;3290:295;;;3409:2;3397:4;3402:1;3397:7;;;;;;;;:::i;:::-;;;;;;;3391:20;;;;3390:48;;;3435:2;3423:4;3428:1;3423:7;;;;;;;;:::i;:::-;;;;;;;3417:20;;3390:48;3386:188;;;3484:4;3489:1;3484:7;;;;;;;;:::i;:::-;;;;;;;;;3478:14;;3495:2;3478:19;;;;:::i;:::-;3471:27;;3459:6;3466:1;3459:9;;;;;;;;:::i;:::-;;;;:39;-1:-1:-1;;;;;3459:39:5;;;;;;;;;3386:188;;;3551:4;3556:1;3551:7;;;;;;;;:::i;:::-;;;;;;;;;3539:6;3546:1;3539:9;;;;;;;;:::i;:::-;;;;:19;-1:-1:-1;;;;;3539:19:5;;;;;;;;;3386:188;3324:3;;;;:::i;:::-;;;;3290:295;;;-1:-1:-1;3609:6:5;3108:516;-1:-1:-1;;;3108:516:5:o;2129:778:4:-;2232:17;2251:16;2269:14;2299:9;:16;2319:2;2299:22;2295:606;;2604:4;2589:20;;2583:27;2653:4;2638:20;;2632:27;2710:4;2695:20;;2689:27;2337:9;2681:36;2751:25;2762:4;2681:36;2583:27;2632;2751:10;:25::i;:::-;2744:32;;;;;;;;;;;2295:606;-1:-1:-1;;2872:16:4;;2823:1;;-1:-1:-1;2827:35:4;;2295:606;2129:778;;;;;:::o;7280:532::-;7375:20;7366:5;:29;;;;;;;;:::i;:::-;;7362:444;;7280:532;;:::o;7362:444::-;7471:29;7462:5;:38;;;;;;;;:::i;:::-;;7458:348;;7523:23;;-1:-1:-1;;;7523:23:4;;;;;;;;;;;7458:348;7576:35;7567:5;:44;;;;;;;;:::i;:::-;;7563:243;;7634:46;;-1:-1:-1;;;7634:46:4;;;;;3276:25:6;;;3249:18;;7634:46:4;3130:177:6;7563:243:4;7710:30;7701:5;:39;;;;;;;;:::i;:::-;;7697:109;;7763:32;;-1:-1:-1;;;7763:32:4;;;;;3276:25:6;;;3249:18;;7763:32:4;3130:177:6;5203:1551:4;5329:17;;;6283:66;6270:79;;6266:164;;;-1:-1:-1;6381:1:4;;-1:-1:-1;6385:30:4;;-1:-1:-1;6417:1:4;6365:54;;6266:164;6541:24;;;6524:14;6541:24;;;;;;;;;22630:25:6;;;22703:4;22691:17;;22671:18;;;22664:45;;;;22725:18;;;22718:34;;;22768:18;;;22761:34;;;6541:24:4;;22602:19:6;;6541:24:4;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6541:24:4;;-1:-1:-1;;6541:24:4;;;-1:-1:-1;;;;;;;6579:20:4;;6575:113;;-1:-1:-1;6631:1:4;;-1:-1:-1;6635:29:4;;-1:-1:-1;6631:1:4;;-1:-1:-1;6615:62:4;;6575:113;6706:6;-1:-1:-1;6714:20:4;;-1:-1:-1;6714:20:4;;-1:-1:-1;5203:1551:4;;;;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:6:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:6;247:40;;317:18;302:34;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:6:o;426:531::-;469:5;522:3;515:4;507:6;503:17;499:27;489:55;;540:1;537;530:12;489:55;576:6;563:20;602:18;598:2;595:26;592:52;;;624:18;;:::i;:::-;668:55;711:2;692:13;;-1:-1:-1;;688:27:6;717:4;684:38;668:55;:::i;:::-;748:2;739:7;732:19;794:3;787:4;782:2;774:6;770:15;766:26;763:35;760:55;;;811:1;808;801:12;760:55;876:2;869:4;861:6;857:17;850:4;841:7;837:18;824:55;924:1;899:16;;;917:4;895:27;888:38;;;;903:7;426:531;-1:-1:-1;;;426:531:6:o;962:1167::-;1056:6;1087:2;1130;1118:9;1109:7;1105:23;1101:32;1098:52;;;1146:1;1143;1136:12;1098:52;1186:9;1173:23;1215:18;1256:2;1248:6;1245:14;1242:34;;;1272:1;1269;1262:12;1242:34;1310:6;1299:9;1295:22;1285:32;;1355:7;1348:4;1344:2;1340:13;1336:27;1326:55;;1377:1;1374;1367:12;1326:55;1413:2;1400:16;1435:2;1431;1428:10;1425:36;;;1441:18;;:::i;:::-;1487:2;1484:1;1480:10;1510:28;1534:2;1530;1526:11;1510:28;:::i;:::-;1572:15;;;1642:11;;;1638:20;;;1603:12;;;;1670:19;;;1667:39;;;1702:1;1699;1692:12;1667:39;1734:2;1730;1726:11;1715:22;;1746:353;1762:6;1757:3;1754:15;1746:353;;;1848:3;1835:17;1884:2;1871:11;1868:19;1865:109;;;1928:1;1957:2;1953;1946:14;1865:109;1999:57;2048:7;2043:2;2029:11;2025:2;2021:20;2017:29;1999:57;:::i;:::-;1987:70;;-1:-1:-1;1779:12:6;;;;2077;;;;1746:353;;;2118:5;962:1167;-1:-1:-1;;;;;;;;;962:1167:6:o;2134:322::-;2203:6;2256:2;2244:9;2235:7;2231:23;2227:32;2224:52;;;2272:1;2269;2262:12;2224:52;2312:9;2299:23;2345:18;2337:6;2334:30;2331:50;;;2377:1;2374;2367:12;2331:50;2400;2442:7;2433:6;2422:9;2418:22;2400:50;:::i;:::-;2390:60;2134:322;-1:-1:-1;;;;2134:322:6:o;3312:173::-;3380:20;;-1:-1:-1;;;;;3429:31:6;;3419:42;;3409:70;;3475:1;3472;3465:12;3409:70;3312:173;;;:::o;3490:186::-;3549:6;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3641:29;3660:9;3641:29;:::i;:::-;3631:39;3490:186;-1:-1:-1;;;3490:186:6:o;3681:250::-;3766:1;3776:113;3790:6;3787:1;3784:13;3776:113;;;3866:11;;;3860:18;3847:11;;;3840:39;3812:2;3805:10;3776:113;;;-1:-1:-1;;3923:1:6;3905:16;;3898:27;3681:250::o;3936:271::-;3978:3;4016:5;4010:12;4043:6;4038:3;4031:19;4059:76;4128:6;4121:4;4116:3;4112:14;4105:4;4098:5;4094:16;4059:76;:::i;:::-;4189:2;4168:15;-1:-1:-1;;4164:29:6;4155:39;;;;4196:4;4151:50;;3936:271;-1:-1:-1;;3936:271:6:o;4212:805::-;4407:2;4396:9;4389:21;4370:4;4445:6;4439:13;4488:4;4483:2;4472:9;4468:18;4461:32;4516:52;4563:3;4552:9;4548:19;4534:12;4516:52;:::i;:::-;4502:66;;4649:1;4645;4640:3;4636:11;4632:19;4626:2;4618:6;4614:15;4608:22;4604:48;4599:2;4588:9;4584:18;4577:76;4707:2;4699:6;4695:15;4689:22;4684:2;4673:9;4669:18;4662:50;4767:2;4759:6;4755:15;4749:22;4743:3;4732:9;4728:19;4721:51;4841:3;4833:6;4829:16;4823:23;4816:31;4809:39;4803:3;4792:9;4788:19;4781:68;4918:3;4910:6;4906:16;4900:23;4893:31;4886:39;4880:3;4869:9;4865:19;4858:68;4982:3;4974:6;4970:16;4964:23;4957:4;4946:9;4942:20;4935:53;5005:6;4997:14;;;4212:805;;;;:::o;5428:180::-;5487:6;5540:2;5528:9;5519:7;5515:23;5511:32;5508:52;;;5556:1;5553;5546:12;5508:52;-1:-1:-1;5579:23:6;;5428:180;-1:-1:-1;5428:180:6:o;5613:697::-;5918:3;5907:9;5900:22;5881:4;5939:46;5980:3;5969:9;5965:19;5957:6;5939:46;:::i;:::-;-1:-1:-1;;;;;6021:32:6;;;;6016:2;6001:18;;5994:60;-1:-1:-1;6085:2:6;6070:18;;6063:34;;;;6128:2;6113:18;;6106:34;;;;6184:14;;6177:22;6171:3;6156:19;;6149:51;6244:14;6237:22;6041:3;6216:19;;6209:51;6291:3;6276:19;;;6269:35;5931:54;5613:697;-1:-1:-1;5613:697:6:o;6315:118::-;6401:5;6394:13;6387:21;6380:5;6377:32;6367:60;;6423:1;6420;6413:12;6438:241;6494:6;6547:2;6535:9;6526:7;6522:23;6518:32;6515:52;;;6563:1;6560;6553:12;6515:52;6602:9;6589:23;6621:28;6643:5;6621:28;:::i;7061:377::-;7135:6;7143;7151;7204:2;7192:9;7183:7;7179:23;7175:32;7172:52;;;7220:1;7217;7210:12;7172:52;7256:9;7243:23;7233:33;;7313:2;7302:9;7298:18;7285:32;7275:42;;7367:2;7356:9;7352:18;7339:32;7380:28;7402:5;7380:28;:::i;:::-;7427:5;7417:15;;;7061:377;;;;;:::o;7443:542::-;7530:6;7538;7591:2;7579:9;7570:7;7566:23;7562:32;7559:52;;;7607:1;7604;7597:12;7559:52;7647:9;7634:23;7676:18;7717:2;7709:6;7706:14;7703:34;;;7733:1;7730;7723:12;7703:34;7756:50;7798:7;7789:6;7778:9;7774:22;7756:50;:::i;:::-;7746:60;;7859:2;7848:9;7844:18;7831:32;7815:48;;7888:2;7878:8;7875:16;7872:36;;;7904:1;7901;7894:12;7872:36;;7927:52;7971:7;7960:8;7949:9;7945:24;7927:52;:::i;:::-;7917:62;;;7443:542;;;;;:::o;7990:220::-;8139:2;8128:9;8121:21;8102:4;8159:45;8200:2;8189:9;8185:18;8177:6;8159:45;:::i;8215:395::-;8292:6;8300;8353:2;8341:9;8332:7;8328:23;8324:32;8321:52;;;8369:1;8366;8359:12;8321:52;8392:29;8411:9;8392:29;:::i;:::-;8382:39;;8472:2;8461:9;8457:18;8444:32;8499:18;8491:6;8488:30;8485:50;;;8531:1;8528;8521:12;8485:50;8554;8596:7;8587:6;8576:9;8572:22;8554:50;:::i;9019:127::-;9080:10;9075:3;9071:20;9068:1;9061:31;9111:4;9108:1;9101:15;9135:4;9132:1;9125:15;9151:289;9282:3;9320:6;9314:13;9336:66;9395:6;9390:3;9383:4;9375:6;9371:17;9336:66;:::i;:::-;9418:16;;;;;9151:289;-1:-1:-1;;9151:289:6:o;9445:127::-;9506:10;9501:3;9497:20;9494:1;9487:31;9537:4;9534:1;9527:15;9561:4;9558:1;9551:15;9577:135;9616:3;9637:17;;;9634:43;;9657:18;;:::i;:::-;-1:-1:-1;9704:1:6;9693:13;;9577:135::o;10061:380::-;10140:1;10136:12;;;;10183;;;10204:61;;10258:4;10250:6;10246:17;10236:27;;10204:61;10311:2;10303:6;10300:14;10280:18;10277:38;10274:161;;10357:10;10352:3;10348:20;10345:1;10338:31;10392:4;10389:1;10382:15;10420:4;10417:1;10410:15;10274:161;;10061:380;;;:::o;10572:545::-;10674:2;10669:3;10666:11;10663:448;;;10710:1;10735:5;10731:2;10724:17;10780:4;10776:2;10766:19;10850:2;10838:10;10834:19;10831:1;10827:27;10821:4;10817:38;10886:4;10874:10;10871:20;10868:47;;;-1:-1:-1;10909:4:6;10868:47;10964:2;10959:3;10955:12;10952:1;10948:20;10942:4;10938:31;10928:41;;11019:82;11037:2;11030:5;11027:13;11019:82;;;11082:17;;;11063:1;11052:13;11019:82;;;11023:3;;;10663:448;10572:545;;;:::o;11293:1352::-;11419:3;11413:10;11446:18;11438:6;11435:30;11432:56;;;11468:18;;:::i;:::-;11497:97;11587:6;11547:38;11579:4;11573:11;11547:38;:::i;:::-;11541:4;11497:97;:::i;:::-;11649:4;;11713:2;11702:14;;11730:1;11725:663;;;;12432:1;12449:6;12446:89;;;-1:-1:-1;12501:19:6;;;12495:26;12446:89;-1:-1:-1;;11250:1:6;11246:11;;;11242:24;11238:29;11228:40;11274:1;11270:11;;;11225:57;12548:81;;11695:944;;11725:663;10519:1;10512:14;;;10556:4;10543:18;;-1:-1:-1;;11761:20:6;;;11879:236;11893:7;11890:1;11887:14;11879:236;;;11982:19;;;11976:26;11961:42;;12074:27;;;;12042:1;12030:14;;;;11909:19;;11879:236;;;11883:3;12143:6;12134:7;12131:19;12128:201;;;12204:19;;;12198:26;-1:-1:-1;;12287:1:6;12283:14;;;12299:3;12279:24;12275:37;12271:42;12256:58;12241:74;;12128:201;-1:-1:-1;;;;;12375:1:6;12359:14;;;12355:22;12342:36;;-1:-1:-1;11293:1352:6:o;14753:430::-;14912:3;14950:6;14944:13;14966:66;15025:6;15020:3;15013:4;15005:6;15001:17;14966:66;:::i;:::-;15101:2;15097:15;;;;-1:-1:-1;;15093:53:6;15054:16;;;;15079:68;;;15174:2;15163:14;;14753:430;-1:-1:-1;;14753:430:6:o;16620:315::-;-1:-1:-1;;;;;16795:32:6;;16777:51;;16864:2;16859;16844:18;;16837:30;;;-1:-1:-1;;16884:45:6;;16910:18;;16902:6;16884:45;:::i;17634:184::-;17704:6;17757:2;17745:9;17736:7;17732:23;17728:32;17725:52;;;17773:1;17770;17763:12;17725:52;-1:-1:-1;17796:16:6;;17634:184;-1:-1:-1;17634:184:6:o;18875:1431::-;18990:3;18984:4;18981:13;18978:26;;18997:5;;18875:1431::o;18978:26::-;19027:37;19059:3;19053:10;19027:37;:::i;:::-;19087:18;19079:6;19076:30;19073:56;;;19109:18;;:::i;:::-;19138:97;19228:6;19188:38;19220:4;19214:11;19188:38;:::i;19138:97::-;19261:1;19289:2;19281:6;19278:14;19306:1;19301:748;;;;20093:1;20110:6;20107:89;;;-1:-1:-1;20162:19:6;;;20156:26;20107:89;-1:-1:-1;;11250:1:6;11246:11;;;11242:24;11238:29;11228:40;11274:1;11270:11;;;11225:57;20209:81;;19271:1029;;19301:748;10519:1;10512:14;;;10556:4;10543:18;;-1:-1:-1;;19337:20:6;;;10519:1;10512:14;;;10556:4;10543:18;;19501:9;19523:251;19537:7;19534:1;19531:14;19523:251;;;19619:21;;;19613:28;19598:44;;19669:1;19742:18;;;;19697:15;;;;19560:4;19553:12;19523:251;;;19527:3;19802:6;19793:7;19790:19;19787:203;;;19863:21;;;19857:28;-1:-1:-1;;19948:1:6;19944:14;;;19960:3;19940:24;19936:37;19932:42;19917:58;19902:74;;19787:203;;;;20036:1;20027:6;20024:1;20020:14;20016:22;20010:4;20003:36;19271:1029;;;;18875:1431;;:::o;20590:245::-;20657:6;20710:2;20698:9;20689:7;20685:23;20681:32;20678:52;;;20726:1;20723;20716:12;20678:52;20758:9;20752:16;20777:28;20799:5;20777:28;:::i;22118:148::-;22206:4;22185:12;;;22199;;;22181:31;;22224:13;;22221:39;;;22240:18;;:::i;22271:127::-;22332:10;22327:3;22323:20;22320:1;22313:31;22363:4;22360:1;22353:15;22387:4;22384:1;22377:15"
            },
            "methodIdentifiers": {
              "addEmailToWhitelist(string)": "372dfc49",
              "addEmailsToWhitelist(string[])": "018763e9",
              "allocationConfig()": "21c01deb",
              "claimAllocation()": "d2d1fb25",
              "deactivateUser(address)": "1a47767b",
              "emailHashWhitelist(bytes32)": "59d61e45",
              "emailToWallet(string)": "07bb4ee3",
              "generateMigrationProof(address,bytes)": "ad5aea4c",
              "getAllocationConfig()": "0b236953",
              "getTotalVerifiedUsers()": "8c1f3a8c",
              "getUserVerification(address)": "b36c6d1f",
              "getVerificationByEmail(string)": "21918829",
              "healthToken()": "c6b0ac85",
              "isEmailHashWhitelisted(bytes32)": "e792b124",
              "isEmailInUse(string)": "9d139d7d",
              "isEmailWhitelisted(string)": "85db9d2c",
              "isUserVerified(address)": "ace417e0",
              "isWalletInUse(address)": "bf9c1b1b",
              "mainnetMigrationContract()": "34627dea",
              "nextUserId()": "a1e6a255",
              "owner()": "8da5cb5b",
              "removeEmailFromWhitelist(string)": "efa4ae00",
              "renounceOwnership()": "715018a6",
              "setHealthToken(address)": "b5856eac",
              "setMainnetMigrationContract(address)": "3f5f2acd",
              "setVerificationEnabled(bool)": "4737a250",
              "totalVerifiedUsers()": "0b3d0887",
              "transferOwnership(address)": "f2fde38b",
              "updateAllocationConfig(uint256,uint256,bool)": "5a1420df",
              "userIdToVerification(uint256)": "2b099994",
              "userVerifications(address)": "46616268",
              "verificationEnabled()": "c9dbabe9",
              "verifyProfile(string,bytes)": "739709b6",
              "verifyProfileZKsync(string)": "3793438d",
              "walletToEmail(address)": "85f3683b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ECDSAInvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"ECDSAInvalidSignatureLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"ECDSAInvalidSignatureS\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"allocationId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"AllocationRecorded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmailRemovedFromWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"EmailWhitelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"UserVerified\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletLinked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"WalletUnlinked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"addEmailToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"emails\",\"type\":\"string[]\"}],\"name\":\"addEmailsToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allocationConfig\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocationPerUser\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimAllocation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"deactivateUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"emailHashWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"emailToWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"generateMigrationProof\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"migrationHash\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllocationConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalAllocated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAllocations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocationPerUser\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct ProfileVerification.AllocationConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalVerifiedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVerification\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasReceivedTokens\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenAllocation\",\"type\":\"uint256\"}],\"internalType\":\"struct ProfileVerification.UserVerification\",\"name\":\"verification\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"getVerificationByEmail\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasReceivedTokens\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenAllocation\",\"type\":\"uint256\"}],\"internalType\":\"struct ProfileVerification.UserVerification\",\"name\":\"verification\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"healthToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"emailHash\",\"type\":\"bytes32\"}],\"name\":\"isEmailHashWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"isEmailInUse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInUse\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"isEmailWhitelisted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isWhitelisted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isUserVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isVerified\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"}],\"name\":\"isWalletInUse\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isInUse\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mainnetMigrationContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextUserId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"removeEmailFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_healthToken\",\"type\":\"address\"}],\"name\":\"setHealthToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mainnetMigrationContract\",\"type\":\"address\"}],\"name\":\"setMainnetMigrationContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"enabled\",\"type\":\"bool\"}],\"name\":\"setVerificationEnabled\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalVerifiedUsers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"maxAllocations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"allocationPerUser\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updateAllocationConfig\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userIdToVerification\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasReceivedTokens\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenAllocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVerifications\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"wallet\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"userId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"hasReceivedTokens\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenAllocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verificationEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"verifyProfile\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"email\",\"type\":\"string\"}],\"name\":\"verifyProfileZKsync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"walletToEmail\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Smart contract for profile verification with email whitelist and one-wallet-per-user enforcement\",\"errors\":{\"ECDSAInvalidSignature()\":[{\"details\":\"The signature derives the `address(0)`.\"}],\"ECDSAInvalidSignatureLength(uint256)\":[{\"details\":\"The signature has an invalid length.\"}],\"ECDSAInvalidSignatureS(bytes32)\":[{\"details\":\"The signature has an S value that is in the upper half order.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{\"addEmailToWhitelist(string)\":{\"details\":\"Add email to whitelist (only owner)\",\"params\":{\"email\":\"Email address to whitelist (hash will be stored)\"}},\"addEmailsToWhitelist(string[])\":{\"details\":\"Add multiple emails to whitelist (only owner)\",\"params\":{\"emails\":\"Array of email addresses to whitelist (hashes will be stored)\"}},\"claimAllocation()\":{\"details\":\"Claim allocated tokens for verified user\"},\"deactivateUser(address)\":{\"details\":\"Emergency function to deactivate user (only owner)\",\"params\":{\"user\":\"User address to deactivate\"}},\"generateMigrationProof(address,bytes)\":{\"details\":\"Generate migration proof for user (for mainnet migration)\",\"params\":{\"signature\":\"User signature proving ownership\",\"user\":\"User address\"},\"returns\":{\"migrationHash\":\"Hash of the migration proof\"}},\"getAllocationConfig()\":{\"details\":\"Get allocation configuration status\",\"returns\":{\"config\":\"Allocation configuration data\"}},\"getTotalVerifiedUsers()\":{\"details\":\"Get total verified users count\",\"returns\":{\"count\":\"Total number of verified users\"}},\"getUserVerification(address)\":{\"details\":\"Get user verification data\",\"params\":{\"user\":\"User address\"},\"returns\":{\"verification\":\"User verification data\"}},\"getVerificationByEmail(string)\":{\"details\":\"Get verification data by email\",\"params\":{\"email\":\"Email address\"},\"returns\":{\"verification\":\"User verification data\"}},\"isEmailHashWhitelisted(bytes32)\":{\"details\":\"Check if email hash is whitelisted (for frontend use)\",\"params\":{\"emailHash\":\"Hash of the email address\"},\"returns\":{\"isWhitelisted\":\"Whether the email hash is whitelisted\"}},\"isEmailInUse(string)\":{\"details\":\"Check if email is already in use\",\"params\":{\"email\":\"Email address to check\"},\"returns\":{\"isInUse\":\"Whether the email is already in use\"}},\"isEmailWhitelisted(string)\":{\"details\":\"Check if email is whitelisted (checks hash)\",\"params\":{\"email\":\"Email address to check\"},\"returns\":{\"isWhitelisted\":\"Whether the email is whitelisted\"}},\"isUserVerified(address)\":{\"details\":\"Check if user is verified\",\"params\":{\"user\":\"User address to check\"},\"returns\":{\"isVerified\":\"Whether the user is verified\"}},\"isWalletInUse(address)\":{\"details\":\"Check if wallet is already in use\",\"params\":{\"wallet\":\"Wallet address to check\"},\"returns\":{\"isInUse\":\"Whether the wallet is already in use\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeEmailFromWhitelist(string)\":{\"details\":\"Remove email from whitelist (only owner)\",\"params\":{\"email\":\"Email address to remove from whitelist\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setHealthToken(address)\":{\"details\":\"Set health token contract address (only owner)\",\"params\":{\"_healthToken\":\"Address of health token contract\"}},\"setMainnetMigrationContract(address)\":{\"details\":\"Set mainnet migration contract address (only owner)\",\"params\":{\"_mainnetMigrationContract\":\"Address of mainnet migration contract\"}},\"setVerificationEnabled(bool)\":{\"details\":\"Toggle verification system (only owner)\",\"params\":{\"enabled\":\"Whether verification is enabled\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateAllocationConfig(uint256,uint256,bool)\":{\"details\":\"Update allocation configuration parameters (only owner)\",\"params\":{\"allocationPerUser\":\"Tokens allocated per user\",\"isActive\":\"Whether token allocation is active\",\"maxAllocations\":\"Maximum number of token allocations\"}},\"verifyProfile(string,bytes)\":{\"details\":\"Verify user profile with email and wallet (with signature verification)\",\"params\":{\"email\":\"Whitelisted email address\",\"signature\":\"Signature proving ownership of wallet\"}},\"verifyProfileZKsync(string)\":{\"details\":\"Verify user profile for ZKsync SSO (without signature verification)\",\"params\":{\"email\":\"Email address (whitelist check handled by admin database)\"}}},\"title\":\"ProfileVerification\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claimAllocation()\":{\"notice\":\"Users can claim their allocated tokens once after verification\"}},\"notice\":\"Implements restrictive wallet creation with email verification and allocation tracking for mainnet migration\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProfileVerification.sol\":\"ProfileVerification\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9\",\"dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n\"]},\"contracts/ProfileVerification.sol\":{\"keccak256\":\"0x4209bf5e3fda73ff4ac4f7d49b837b57ee3d8c164c9901ee990b63a543d5d3c5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://06c306148637508a52d6f8a2b88e71cf8ef9c433cf12bb663909049d0488c5ad\",\"dweb:/ipfs/QmXrcnCvahBuk8c7Kq6yhQAtLUotow32LF3NkvjuGMjNgF\"]}},\"version\":1}"
        }
      }
    }
  }
}
